<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="_message_8h" kind="file">
    <compoundname>Message.h</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="yes">../../Constants.h</includes>
    <includes local="yes">../ByteArray.h</includes>
    <includes local="yes">../Object.h</includes>
    <includes local="yes">../../Utils/VariableLengthInteger/VarLenInt.h</includes>
    <includedby refid="_transaction_8h" local="yes">src/Object/Message/Transaction.h</includedby>
    <includedby refid="_transaction_input_8h" local="yes">src/Object/Message/TransactionInput.h</includedby>
    <includedby refid="_transaction_output_8h" local="yes">src/Object/Message/TransactionOutput.h</includedby>
    <includedby refid="_block_8c" local="yes">src/Object/Message/Block.c</includedby>
    <includedby refid="_chain_descriptor_8h" local="yes">src/Object/Message/ChainDescriptor.h</includedby>
    <includedby refid="_inventory_8h" local="yes">src/Object/Message/Inventory.h</includedby>
    <includedby refid="_inventory_vector_8h" local="yes">src/Object/Message/InventoryVector.h</includedby>
    <includedby refid="_message_8c" local="yes">src/Object/Message/Message.c</includedby>
    <includedby refid="_ping_pong_message_8h" local="yes">src/Object/Message/PingPongMessage.h</includedby>
    <includedby refid="_transaction_8c" local="yes">src/Object/Message/Transaction.c</includedby>
    <incdepgraph>
      <node id="874">
        <label>stdint.h</label>
      </node>
      <node id="873">
        <label>stdlib.h</label>
      </node>
      <node id="875">
        <label>../../Constants.h</label>
      </node>
      <node id="872">
        <label>src/Object/Message/Message.h</label>
        <link refid="Message.h"/>
        <childnode refid="873" relation="include">
        </childnode>
        <childnode refid="874" relation="include">
        </childnode>
        <childnode refid="875" relation="include">
        </childnode>
        <childnode refid="876" relation="include">
        </childnode>
        <childnode refid="877" relation="include">
        </childnode>
        <childnode refid="878" relation="include">
        </childnode>
      </node>
      <node id="876">
        <label>../ByteArray.h</label>
      </node>
      <node id="877">
        <label>../Object.h</label>
      </node>
      <node id="878">
        <label>../../Utils/VariableLengthInteger/VarLenInt.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="900">
        <label>src/Object/Message/PingPongMessage.c</label>
        <link refid="_ping_pong_message_8c"/>
      </node>
      <node id="899">
        <label>src/Object/Message/PingPongMessage.h</label>
        <link refid="_ping_pong_message_8h"/>
        <childnode refid="900" relation="include">
        </childnode>
      </node>
      <node id="882">
        <label>src/Object/Message/Block.c</label>
        <link refid="_block_8c"/>
      </node>
      <node id="881">
        <label>src/Object/Message/Block.h</label>
        <link refid="_block_8h"/>
        <childnode refid="882" relation="include">
        </childnode>
        <childnode refid="883" relation="include">
        </childnode>
      </node>
      <node id="897">
        <label>src/Object/Message/InventoryVector.c</label>
        <link refid="_inventory_vector_8c"/>
      </node>
      <node id="896">
        <label>src/Object/Message/InventoryVector.h</label>
        <link refid="_inventory_vector_8h"/>
        <childnode refid="894" relation="include">
        </childnode>
        <childnode refid="897" relation="include">
        </childnode>
      </node>
      <node id="898">
        <label>src/Object/Message/Message.c</label>
        <link refid="_message_8c"/>
      </node>
      <node id="879">
        <label>src/Object/Message/Message.h</label>
        <link refid="Message.h"/>
        <childnode refid="880" relation="include">
        </childnode>
        <childnode refid="886" relation="include">
        </childnode>
        <childnode refid="888" relation="include">
        </childnode>
        <childnode refid="882" relation="include">
        </childnode>
        <childnode refid="890" relation="include">
        </childnode>
        <childnode refid="894" relation="include">
        </childnode>
        <childnode refid="896" relation="include">
        </childnode>
        <childnode refid="898" relation="include">
        </childnode>
        <childnode refid="899" relation="include">
        </childnode>
        <childnode refid="885" relation="include">
        </childnode>
      </node>
      <node id="895">
        <label>src/Object/Message/Inventory.c</label>
        <link refid="_inventory_8c"/>
      </node>
      <node id="894">
        <label>src/Object/Message/Inventory.h</label>
        <link refid="_inventory_8h"/>
        <childnode refid="895" relation="include">
        </childnode>
      </node>
      <node id="889">
        <label>src/Object/Message/TransactionOutput.c</label>
        <link refid="_transaction_output_8c"/>
      </node>
      <node id="888">
        <label>src/Object/Message/TransactionOutput.h</label>
        <link refid="_transaction_output_8h"/>
        <childnode refid="886" relation="include">
        </childnode>
        <childnode refid="880" relation="include">
        </childnode>
        <childnode refid="889" relation="include">
        </childnode>
      </node>
      <node id="887">
        <label>src/Object/Message/TransactionInput.c</label>
        <link refid="_transaction_input_8c"/>
      </node>
      <node id="886">
        <label>src/Object/Message/TransactionInput.h</label>
        <link refid="_transaction_input_8h"/>
        <childnode refid="880" relation="include">
        </childnode>
        <childnode refid="885" relation="include">
        </childnode>
        <childnode refid="887" relation="include">
        </childnode>
      </node>
      <node id="891">
        <label>src/Object/Message/ChainDescriptor.c</label>
        <link refid="_chain_descriptor_8c"/>
      </node>
      <node id="890">
        <label>src/Object/Message/ChainDescriptor.h</label>
        <link refid="_chain_descriptor_8h"/>
        <childnode refid="891" relation="include">
        </childnode>
        <childnode refid="892" relation="include">
        </childnode>
      </node>
      <node id="893">
        <label>src/Object/Message/GetBlocks.c</label>
        <link refid="_get_blocks_8c"/>
      </node>
      <node id="892">
        <label>src/Object/Message/GetBlocks.h</label>
        <link refid="_get_blocks_8h"/>
        <childnode refid="893" relation="include">
        </childnode>
      </node>
      <node id="884">
        <label>src/Object/Message/BlockHeaders.c</label>
        <link refid="_block_headers_8c"/>
      </node>
      <node id="885">
        <label>src/Object/Message/Transaction.c</label>
        <link refid="_transaction_8c"/>
      </node>
      <node id="883">
        <label>src/Object/Message/BlockHeaders.h</label>
        <link refid="_block_headers_8h"/>
        <childnode refid="884" relation="include">
        </childnode>
      </node>
      <node id="880">
        <label>src/Object/Message/Transaction.h</label>
        <link refid="_transaction_8h"/>
        <childnode refid="881" relation="include">
        </childnode>
        <childnode refid="882" relation="include">
        </childnode>
        <childnode refid="885" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_message" prot="public">Message</innerclass>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="_message_8h_1ac5d2505352602da27debb8163160af23" prot="public" static="no">
        <type>struct <ref refid="struct_message" kindref="compound">Message</ref></type>
        <definition>typedef struct Message  Message</definition>
        <argsstring></argsstring>
        <name>Message</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/Message.h" line="37"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="_message_8h_1a482ba3fcca0927a7e192178226c84b6c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_message" kindref="compound">Message</ref> *</type>
        <definition>Message* createNewMessage</definition>
        <argsstring>(void(*onErrorReceived)(Error error, char *,...))</argsstring>
        <name>createNewMessage</name>
        <param>
          <type>void(*)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref> error, char *,...)</type>
          <declname>onErrorReceived</declname>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="struct_message" kindref="compound">Message</ref>. </para>        </briefdescription>
        <detaileddescription>
<para>Creates a new <ref refid="struct_message" kindref="compound">Message</ref> object. This message will be created with object data and not with byte data. The message can be serialised for the byte data used over the network.</para><para><simplesect kind="return"><para><ref refid="struct_message" kindref="compound">Message</ref></para><simplesectsep/><para>A new <ref refid="struct_message" kindref="compound">Message</ref> object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
<para>&lt;Create memory for <ref refid="struct_message" kindref="compound">Message</ref></para><para>&lt; retrieve the base object and use it to update the underlying base object details</para><para>&lt;assign destructor function to object</para><para>&lt; Set other <ref refid="struct_message" kindref="compound">Message</ref> fields </para>        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/Message.h" line="44" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/Message.c" bodystart="31" bodyend="59"/>
        <references refid="struct_object_1aa353725933e843001d4feb03f8268121" compoundref="_object_8h" startline="29">Object::destroy</references>
        <references refid="_message_8c_1ac2c2a78178aac5f9f228b51d01bf5fe3" compoundref="_message_8c" startline="145" endline="154">destroyMessage</references>
        <references refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5ac0a554045048d2fb61387cf735676f69" compoundref="_constants_8h" startline="52">ERROR_OUT_OF_MEMORY</references>
        <references refid="_constants_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="_constants_8h" startline="89">FALSE</references>
        <references refid="_object_8c_1a8460165be167be3b0816d84f498e3733" compoundref="_object_8c" startline="42" endline="47">getObject</references>
        <references refid="struct_object_1ad83c3d5d3f46e6278a77cb80eb2a0705" compoundref="_object_8h" startline="30">Object::referenceCount</references>
      </memberdef>
      <memberdef kind="function" id="_message_8h_1ad477d3fce4b01d2eea87ff527a7f33d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_message" kindref="compound">Message</ref> *</type>
        <definition>Message* getMessage</definition>
        <argsstring>(void *self)</argsstring>
        <name>getMessage</name>
        <param>
          <type>void *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>getter </para>        </briefdescription>
        <detaileddescription>
<para>Gets a <ref refid="struct_message" kindref="compound">Message</ref> from another object. Use this to avoid casts.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="struct_message" kindref="compound">Message</ref> <ref refid="struct_object" kindref="compound">Object</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object to obtain the <ref refid="struct_message" kindref="compound">Message</ref> from. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The <ref refid="struct_message" kindref="compound">Message</ref> object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/Message.h" line="52" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/Message.c" bodystart="131" bodyend="135"/>
        <referencedby refid="_block_8h_1a1dd38c9d32f6f6984930141d5ce01fba" compoundref="_block_8c" startline="232" endline="238">calculateBlockHash</referencedby>
        <referencedby refid="_transaction_8h_1ae53ed930910256b4620da39ebdcccdb5" compoundref="_transaction_8c" startline="191" endline="200">calculateTransactionHash</referencedby>
        <referencedby refid="_block_8h_1aeb72d715416153dbd72e8f876fb19981" compoundref="_block_8c" startline="499" endline="532">dealWithSerializationTran</referencedby>
        <referencedby refid="_block_8h_1a9dcdbbf01ad57512119aa46013c7f92e" compoundref="_block_8c" startline="272" endline="312">deserializeBlock</referencedby>
        <referencedby refid="_block_headers_8h_1ace10b6ab479717f0540e5a5528ca3952" compoundref="_block_headers_8c" startline="89" endline="140">deserializeBlockHeaders</referencedby>
        <referencedby refid="_chain_descriptor_8h_1a6d7efa38f552f57c8f66ef6b7fdf103a" compoundref="_chain_descriptor_8c" startline="80" endline="118">deserializeChainDescriptor</referencedby>
        <referencedby refid="_get_blocks_8h_1ac6078bf7e22d0d785670ace084ac8ab6" compoundref="_get_blocks_8c" startline="82" endline="125">deserializeGetBlocks</referencedby>
        <referencedby refid="_inventory_8c_1a62e028868025b8a7e77dc71490b135ea" compoundref="_inventory_8c" startline="107" endline="167">deserializeInventory</referencedby>
        <referencedby refid="_inventory_vector_8h_1afe53d7aabd20f5c5748ea6058dfe21df" compoundref="_inventory_vector_8c" startline="105" endline="129">deserializeInventoryVector</referencedby>
        <referencedby refid="_ping_pong_message_8h_1a198cd940373651273997143eab0bcde3" compoundref="_ping_pong_message_8c" startline="94" endline="109">deserializePingPongMessage</referencedby>
        <referencedby refid="_transaction_8h_1ada5d9c85c4dc1ff7384ee49d6fd97ff8" compoundref="_transaction_8c" startline="384" endline="534">deserializeTransaction</referencedby>
        <referencedby refid="_transaction_input_8h_1a8eb115030448e943f94d8ecff0fa21a9" compoundref="_transaction_input_8c" startline="177" endline="225">deserializeTransactionInput</referencedby>
        <referencedby refid="_transaction_output_8h_1a484844cadde17ce53f58dcf0fceb52b2" compoundref="_transaction_output_8c" startline="167" endline="235">deserializeTransactionOutput</referencedby>
        <referencedby refid="_block_8h_1a2590af8eb87d088e41c0dfff66d41454" compoundref="_block_8c" startline="394" endline="421">deserializeWithOnlyHeaders</referencedby>
        <referencedby refid="_block_8h_1a219df1f8f05a691f09e283731eb86129" compoundref="_block_8c" startline="321" endline="384">deserializeWithTransactions</referencedby>
        <referencedby refid="_transaction_8h_1afe08b91a59f175e55d9ca049e46749c2" compoundref="_transaction_8c" startline="536" endline="680">getTransactionInputHashForVerification</referencedby>
        <referencedby refid="_block_8h_1a71244768c12d6663e29898247e2b60bf" compoundref="_block_8c" startline="124" endline="139">initBlock</referencedby>
        <referencedby refid="_block_8h_1a8b2caeb517b4b3e13e03abb7852f3742" compoundref="_block_8c" startline="148" endline="162">initBlockFromByteArray</referencedby>
        <referencedby refid="_block_headers_8h_1ad4e2078ad35828125e6849a43dbcb3db" compoundref="_block_headers_8c" startline="49" endline="56">initBlockHeaders</referencedby>
        <referencedby refid="_block_headers_8h_1aefd88cac89497c7f5b47af74b707cea6" compoundref="_block_headers_8c" startline="57" endline="64">initBlockHeadersFromData</referencedby>
        <referencedby refid="_block_8h_1af1b6c7c59cf5fd4c7d9f94a6179dcb43" compoundref="_block_8c" startline="170" endline="190">initBlockWithGenesisBlockInfo</referencedby>
        <referencedby refid="_chain_descriptor_8h_1a257956d77d2cf4b5df5b59a448380009" compoundref="_chain_descriptor_8c" startline="46" endline="53">initChainDescriptor</referencedby>
        <referencedby refid="_chain_descriptor_8h_1a245a673315a06db0bd85529176152e6f" compoundref="_chain_descriptor_8c" startline="54" endline="61">initChainDescriptorFromData</referencedby>
        <referencedby refid="_get_blocks_8h_1a3168d5f3c5cd2f5c719979fc4d207913" compoundref="_get_blocks_8c" startline="47" endline="57">initGetBlocks</referencedby>
        <referencedby refid="_get_blocks_8h_1a26311351d830c1aafb5c7a8e760841de" compoundref="_get_blocks_8c" startline="59" endline="66">initGetBlocksFromData</referencedby>
        <referencedby refid="_inventory_8h_1a1337956e58cd2da10ad5e73eb3287b45" compoundref="_inventory_8c" startline="58" endline="69">initializeInventory</referencedby>
        <referencedby refid="_inventory_8h_1ae81b1611b0771bb43f45b3c331119db0" compoundref="_inventory_8c" startline="71" endline="83">initializeInventoryFromData</referencedby>
        <referencedby refid="_inventory_vector_8h_1a69423d6567cd6d9d25755335937f2f7b" compoundref="_inventory_vector_8c" startline="65" endline="80">initializeInventoryVector</referencedby>
        <referencedby refid="_inventory_vector_8h_1ac0513bfdc2977b9719b2f0db7afde606" compoundref="_inventory_vector_8c" startline="82" endline="94">initializeInventoryVectorFromData</referencedby>
        <referencedby refid="_ping_pong_message_8h_1a7643cf5597d751e59d594aab5e4450af" compoundref="_ping_pong_message_8c" startline="61" endline="71">initializePingPongMessage</referencedby>
        <referencedby refid="_ping_pong_message_8h_1aa8297d681b90e5975b9d7e88171d06a7" compoundref="_ping_pong_message_8c" startline="73" endline="84">initializePingPongMessageFromData</referencedby>
        <referencedby refid="_transaction_input_8h_1a3ad0ecb9660744784184da2b4fdea805" compoundref="_transaction_input_8c" startline="64" endline="91">initializeTransactionInput</referencedby>
        <referencedby refid="_transaction_input_8h_1a5dd458f9ef23c28acbc6e018810f578a" compoundref="_transaction_input_8c" startline="93" endline="106">initializeTransactionInputFromData</referencedby>
        <referencedby refid="_transaction_output_8h_1a5bf0093a9ad4ad55a29ef95ce6350755" compoundref="_transaction_output_8c" startline="64" endline="86">initializeTransactionOutput</referencedby>
        <referencedby refid="_transaction_output_8h_1a356376bf3ae2bc9f0be2d1daec98fe70" compoundref="_transaction_output_8c" startline="88" endline="101">initializeTransactionOutputFromData</referencedby>
        <referencedby refid="_inventory_8h_1a67383f9aba234b390c4b5be54019c3f4" compoundref="_inventory_8c" startline="169" endline="213">serialiseInventory</referencedby>
        <referencedby refid="_block_8h_1ab0d1c25a8612a3644626e5030ffbe456" compoundref="_block_8c" startline="444" endline="472">serializeBlock</referencedby>
        <referencedby refid="_block_headers_8h_1a06fe7338aa2dc8d104e7f8148674b202" compoundref="_block_headers_8c" startline="141" endline="176">serializeBlockHeaders</referencedby>
        <referencedby refid="_chain_descriptor_8h_1a4873951a3acf7e90e799c64a9d09455d" compoundref="_chain_descriptor_8c" startline="119" endline="140">serializeChainDescriptor</referencedby>
        <referencedby refid="_get_blocks_8h_1ae09f58674ed59b6d5f320cc588afdd14" compoundref="_get_blocks_8c" startline="127" endline="157">serializeGetBlocks</referencedby>
        <referencedby refid="_inventory_vector_8h_1a340bff34fb8ee996b53e0a61ebdd3e8a" compoundref="_inventory_vector_8c" startline="131" endline="153">serializeInventoryVector</referencedby>
        <referencedby refid="_ping_pong_message_8h_1ab1c318a0853f3a7e93e38d47d9dabd30" compoundref="_ping_pong_message_8c" startline="111" endline="126">serializePingPongMessage</referencedby>
        <referencedby refid="_transaction_8h_1a61a0f76473a17de64dcecc04a3ce3b5f" compoundref="_transaction_8c" startline="259" endline="382">serializeTransaction</referencedby>
        <referencedby refid="_transaction_input_8h_1a9b0f805aed38d097be8bec7dd8701e50" compoundref="_transaction_input_8c" startline="134" endline="175">serializeTransactionInput</referencedby>
        <referencedby refid="_transaction_output_8h_1ae0ec9ca1d590685385987b26fbded266" compoundref="_transaction_output_8c" startline="127" endline="165">serializeTransactionOutput</referencedby>
        <referencedby refid="_transaction_8h_1a8b4afb98a5293ab312e547381ea0cf31" compoundref="_transaction_8c" startline="61" endline="91">setUpTransactionData</referencedby>
        <referencedby refid="_transaction_8h_1ab6777f2e913778848e00c770ef6f4e8f" compoundref="_transaction_8c" startline="93" endline="121">setUpTransactionDataUsingByteArray</referencedby>
      </memberdef>
      <memberdef kind="function" id="_message_8h_1ac61e2cb2551d91d59aa132e8323d9631" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int *</type>
        <definition>int* setByteArrayInMessage</definition>
        <argsstring>(Message *self, ByteArray *data, void(*onErrorReceived)(Error error, char *,...))</argsstring>
        <name>setByteArrayInMessage</name>
        <param>
          <type><ref refid="struct_message" kindref="compound">Message</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>void(*)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref> error, char *,...)</type>
          <declname>onErrorReceived</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
<para>&lt; Check to see that the base <ref refid="struct_object" kindref="compound">Object</ref> class can be retrieved and then update details</para><para>&lt; retrieve the base object and use it to update the underlying object details</para><para>&lt; Set other <ref refid="struct_message" kindref="compound">Message</ref> fields</para><para>&lt; set <ref refid="struct_message" kindref="compound">Message</ref> data to the <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> data that was passed in</para><para>&lt; Increment the number of references to the <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> data </para>        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/Message.h" line="62" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/Message.c" bodystart="69" bodyend="92"/>
        <references refid="_constants_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="_constants_8h" startline="89">FALSE</references>
        <references refid="_object_8c_1a8460165be167be3b0816d84f498e3733" compoundref="_object_8c" startline="42" endline="47">getObject</references>
        <references refid="_object_8c_1a5f22211b2f99a33c1b4b7ad544ce108a" compoundref="_object_8c" startline="81" endline="92">incrementReferenceCount</references>
        <references refid="struct_object_1ad83c3d5d3f46e6278a77cb80eb2a0705" compoundref="_object_8h" startline="30">Object::referenceCount</references>
        <references refid="_constants_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="_constants_8h" startline="90">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="_message_8h_1abeae03d7e39e468bf5958d4d2b1dc61b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int initializeMessageFromObject</definition>
        <argsstring>(Message *self, void(*onErrorReceived)(Error error, char *,...))</argsstring>
        <name>initializeMessageFromObject</name>
        <param>
          <type><ref refid="struct_message" kindref="compound">Message</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>void(*)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref> error, char *,...)</type>
          <declname>onErrorReceived</declname>
        </param>
        <briefdescription>
<para>Initialises a <ref refid="struct_message" kindref="compound">Message</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_message" kindref="compound">Message</ref> object to initialise </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE on success, FALSE on failure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/Message.h" line="69" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/Message.c" bodystart="94" bodyend="106"/>
        <references refid="_constants_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="_constants_8h" startline="89">FALSE</references>
        <references refid="_object_8c_1a8460165be167be3b0816d84f498e3733" compoundref="_object_8c" startline="42" endline="47">getObject</references>
        <references refid="_object_8c_1a6cd8f4ac93973731c720913612be0b15" compoundref="_object_8c" startline="49" endline="55">setObjectRefCountToOne</references>
        <references refid="_constants_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="_constants_8h" startline="90">TRUE</references>
        <referencedby refid="_block_8h_1a71244768c12d6663e29898247e2b60bf" compoundref="_block_8c" startline="124" endline="139">initBlock</referencedby>
        <referencedby refid="_block_headers_8h_1ad4e2078ad35828125e6849a43dbcb3db" compoundref="_block_headers_8c" startline="49" endline="56">initBlockHeaders</referencedby>
        <referencedby refid="_chain_descriptor_8h_1a257956d77d2cf4b5df5b59a448380009" compoundref="_chain_descriptor_8c" startline="46" endline="53">initChainDescriptor</referencedby>
        <referencedby refid="_get_blocks_8h_1a3168d5f3c5cd2f5c719979fc4d207913" compoundref="_get_blocks_8c" startline="47" endline="57">initGetBlocks</referencedby>
        <referencedby refid="_inventory_8h_1a1337956e58cd2da10ad5e73eb3287b45" compoundref="_inventory_8c" startline="58" endline="69">initializeInventory</referencedby>
        <referencedby refid="_inventory_vector_8h_1a69423d6567cd6d9d25755335937f2f7b" compoundref="_inventory_vector_8c" startline="65" endline="80">initializeInventoryVector</referencedby>
        <referencedby refid="_ping_pong_message_8h_1a7643cf5597d751e59d594aab5e4450af" compoundref="_ping_pong_message_8c" startline="61" endline="71">initializePingPongMessage</referencedby>
        <referencedby refid="_transaction_input_8h_1a3ad0ecb9660744784184da2b4fdea805" compoundref="_transaction_input_8c" startline="64" endline="91">initializeTransactionInput</referencedby>
        <referencedby refid="_transaction_output_8h_1a5bf0093a9ad4ad55a29ef95ce6350755" compoundref="_transaction_output_8c" startline="64" endline="86">initializeTransactionOutput</referencedby>
      </memberdef>
      <memberdef kind="function" id="_message_8h_1a297413f770355bd4bd2212e999867031" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int initializeMessageFromByteArrayData</definition>
        <argsstring>(Message *self, ByteArray *data, void(*onErrorReceived)(Error error, char *,...))</argsstring>
        <name>initializeMessageFromByteArrayData</name>
        <param>
          <type><ref refid="struct_message" kindref="compound">Message</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>void(*)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref> error, char *,...)</type>
          <declname>onErrorReceived</declname>
        </param>
        <briefdescription>
<para>Initialises a <ref refid="struct_message" kindref="compound">Message</ref> object from byteArray data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_message" kindref="compound">Message</ref> object to initialise </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The byte data for the object. The data will not be copied but referenced by this object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE on success, FALSE on failure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/Message.h" line="77" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/Message.c" bodystart="108" bodyend="123"/>
        <references refid="_constants_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="_constants_8h" startline="89">FALSE</references>
        <references refid="_object_8c_1a8460165be167be3b0816d84f498e3733" compoundref="_object_8c" startline="42" endline="47">getObject</references>
        <references refid="_object_8c_1a5f22211b2f99a33c1b4b7ad544ce108a" compoundref="_object_8c" startline="81" endline="92">incrementReferenceCount</references>
        <references refid="_object_8c_1a6cd8f4ac93973731c720913612be0b15" compoundref="_object_8c" startline="49" endline="55">setObjectRefCountToOne</references>
        <references refid="_constants_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="_constants_8h" startline="90">TRUE</references>
        <referencedby refid="_block_8h_1a8b2caeb517b4b3e13e03abb7852f3742" compoundref="_block_8c" startline="148" endline="162">initBlockFromByteArray</referencedby>
        <referencedby refid="_block_headers_8h_1aefd88cac89497c7f5b47af74b707cea6" compoundref="_block_headers_8c" startline="57" endline="64">initBlockHeadersFromData</referencedby>
        <referencedby refid="_block_8h_1af1b6c7c59cf5fd4c7d9f94a6179dcb43" compoundref="_block_8c" startline="170" endline="190">initBlockWithGenesisBlockInfo</referencedby>
        <referencedby refid="_chain_descriptor_8h_1a245a673315a06db0bd85529176152e6f" compoundref="_chain_descriptor_8c" startline="54" endline="61">initChainDescriptorFromData</referencedby>
        <referencedby refid="_get_blocks_8h_1a26311351d830c1aafb5c7a8e760841de" compoundref="_get_blocks_8c" startline="59" endline="66">initGetBlocksFromData</referencedby>
        <referencedby refid="_inventory_8h_1ae81b1611b0771bb43f45b3c331119db0" compoundref="_inventory_8c" startline="71" endline="83">initializeInventoryFromData</referencedby>
        <referencedby refid="_inventory_vector_8h_1ac0513bfdc2977b9719b2f0db7afde606" compoundref="_inventory_vector_8c" startline="82" endline="94">initializeInventoryVectorFromData</referencedby>
        <referencedby refid="_ping_pong_message_8h_1aa8297d681b90e5975b9d7e88171d06a7" compoundref="_ping_pong_message_8c" startline="73" endline="84">initializePingPongMessageFromData</referencedby>
        <referencedby refid="_transaction_input_8h_1a5dd458f9ef23c28acbc6e018810f578a" compoundref="_transaction_input_8c" startline="93" endline="106">initializeTransactionInputFromData</referencedby>
        <referencedby refid="_transaction_output_8h_1a356376bf3ae2bc9f0be2d1daec98fe70" compoundref="_transaction_output_8c" startline="88" endline="101">initializeTransactionOutputFromData</referencedby>
      </memberdef>
      <memberdef kind="function" id="_message_8h_1a666bf9c0a77642e6462af8bb670e2b49" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void destroyMessage</definition>
        <argsstring>(void *self)</argsstring>
        <name>destroyMessage</name>
        <param>
          <type>void *</type>
          <declname>self</declname>
          <defname>message</defname>
        </param>
        <briefdescription>
<para>destroy <ref refid="struct_message" kindref="compound">Message</ref> </para>        </briefdescription>
        <detaileddescription>
<para>destroys the memory allocated to a <ref refid="struct_message" kindref="compound">Message</ref> object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>message</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_message" kindref="compound">Message</ref> object to free. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/Message.h" line="84" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/Message.c" bodystart="145" bodyend="154"/>
        <references refid="_object_8c_1a0407d34294cdc667982ffa9bd6f18cc9" compoundref="_object_8c" startline="65" endline="79">decrementReferenceCount</references>
        <references refid="_object_8c_1a9773962d80072e39e235802b57907208" compoundref="_object_8c" startline="59" endline="63">destroyObject</references>
        <referencedby refid="_message_8h_1a482ba3fcca0927a7e192178226c84b6c" compoundref="_message_8c" startline="31" endline="59">createNewMessage</referencedby>
        <referencedby refid="_block_8h_1ad77154e744c5b0fd15076b9496c06bce" compoundref="_block_8c" startline="197" endline="223">deleteBlock</referencedby>
        <referencedby refid="_inventory_8h_1af32069256ed31db1bf2ce7b04cf8fee4" compoundref="_inventory_8c" startline="85" endline="97">destroyInventory</referencedby>
        <referencedby refid="_inventory_vector_8h_1a3effb2d105153d226cb3f5563f45c894" compoundref="_inventory_vector_8c" startline="96" endline="103">destroyInventoryVector</referencedby>
        <referencedby refid="_ping_pong_message_8h_1af528a86083fc33cb25f40d3390b1ee6d" compoundref="_ping_pong_message_8c" startline="87" endline="92">destroyPingPongMessage</referencedby>
        <referencedby refid="_transaction_8h_1aecc3b8b92bc3a7b8e123a6c844ba686b" compoundref="_transaction_8c" startline="124" endline="140">destroyTransaction</referencedby>
        <referencedby refid="_transaction_input_8h_1a59839939e715a79be4ce4fa8f090d232" compoundref="_transaction_input_8c" startline="116" endline="131">destroyTransactionInput</referencedby>
        <referencedby refid="_transaction_output_8h_1af70e5e72be45f7f9433e990999335b0b" compoundref="_transaction_output_8c" startline="113" endline="124">destroyTransactionOutput</referencedby>
        <referencedby refid="_block_headers_8h_1adb988cdb814bfc8fa966046c04fe04df" compoundref="_block_headers_8c" startline="68" endline="77">freeBlockHeaders</referencedby>
        <referencedby refid="_chain_descriptor_8h_1aeb861daeeddac3d16298e95c57c69c66" compoundref="_chain_descriptor_8c" startline="63" endline="72">freeChainDescriptor</referencedby>
        <referencedby refid="_get_blocks_8h_1ad8f03fcbf34919f6ebdde6f6e7ab3794" compoundref="_get_blocks_8c" startline="69" endline="75">freeGetBlocks</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="struct_header" kindref="compound">Header</ref> file for the <ref refid="struct_message" kindref="compound">Message</ref> object. </para>    </briefdescription>
    <detaileddescription>
<para>The <ref refid="struct_message" kindref="compound">Message</ref> class is the base class for all kinds of messages that can be transferred over the bitcoin network. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Message.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>03/10/2012</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>by:<sp/>Abdulfatai<sp/>Popoola</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Modified<sp/>by:<sp/>Wen<sp/>Shen<sp/>&amp;<sp/>Dmytro<sp/>Krasnoshtan<sp/>&amp;<sp/>Issak<sp/>Gezehei</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(c)<sp/>2012<sp/>Bitcoin<sp/>Project<sp/>Team</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor">#ifndef<sp/>MESSAGE_H_</highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>MESSAGE_H_</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../Constants.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../ByteArray.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Object.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../Utils/VariableLengthInteger/VarLenInt.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="struct_message" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_message" kindref="compound" tooltip="Structure for Message objects.">Message</ref>{</highlight></codeline>
<codeline lineno="30" refid="struct_message_1a23cf4ef56ba22bed625eab08d6361fa7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_object" kindref="compound" tooltip="Base class.">Object</ref><sp/><ref refid="struct_message_1a23cf4ef56ba22bed625eab08d6361fa7" kindref="member">base</ref>;<sp/></highlight></codeline>
<codeline lineno="31" refid="struct_message_1a8a2053c7fb1adf60da2f26c06059539e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_constants_8h_1ac6606ebe91c8ac66a2c314c79f5ab013" kindref="member">MessageType</ref><sp/><ref refid="struct_message_1a8a2053c7fb1adf60da2f26c06059539e" kindref="member">type</ref>;<sp/></highlight></codeline>
<codeline lineno="32" refid="struct_message_1ad4a1b71852a8721ee4be4f6aaacd8566" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*<sp/><ref refid="struct_message_1ad4a1b71852a8721ee4be4f6aaacd8566" kindref="member">altText</ref>;<sp/></highlight></codeline>
<codeline lineno="33" refid="struct_message_1affc357b616afe9b58c190ae4b21caa77" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/><ref refid="struct_message_1affc357b616afe9b58c190ae4b21caa77" kindref="member">bytes</ref>;<sp/></highlight></codeline>
<codeline lineno="34" refid="struct_message_1a02d93e565ee31bda6e0211dca9b42be5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/><ref refid="struct_message_1a02d93e565ee31bda6e0211dca9b42be5" kindref="member">checksum</ref>[4];<sp/></highlight></codeline>
<codeline lineno="35" refid="struct_message_1a3c8af4f580f3041d046b7581f89a9695" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*<ref refid="struct_message_1a3c8af4f580f3041d046b7581f89a9695" kindref="member">onErrorReceived</ref>)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref><sp/>error,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,...);<sp/></highlight></codeline>
<codeline lineno="36" refid="struct_message_1accc3616411ea4a5035a7eaf42132d370" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_constants_8h_1ac6606ebe91c8ac66a2c314c79f5ab013" kindref="member">MessageType</ref><sp/><ref refid="struct_message_1accc3616411ea4a5035a7eaf42132d370" kindref="member">expectResponse</ref>;<sp/></highlight></codeline>
<codeline lineno="37"><highlight class="normal">}<sp/><ref refid="_message_8h_1ac5d2505352602da27debb8163160af23" kindref="member">Message</ref>;</highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><ref refid="struct_message" kindref="compound" tooltip="Structure for Message objects.">Message</ref><sp/>*<sp/><ref refid="_message_8c_1aa3f7adc81bfaf19e5bdda297b242d3c0" kindref="member" tooltip="Creates a new Message.">createNewMessage</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*onErrorReceived)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref><sp/>error,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,...));</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><ref refid="struct_message" kindref="compound" tooltip="Structure for Message objects.">Message</ref><sp/>*<sp/><ref refid="_message_8c_1a9ab128ae9cafefd9b05e2e0bfa719770" kindref="member" tooltip="getter">getMessage</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<sp/><ref refid="_message_8c_1ac61e2cb2551d91d59aa132e8323d9631" kindref="member">setByteArrayInMessage</ref>(<ref refid="struct_message" kindref="compound" tooltip="Structure for Message objects.">Message</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/>data,</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*onErrorReceived)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref><sp/>error,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,...));</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_message_8c_1abeae03d7e39e468bf5958d4d2b1dc61b" kindref="member" tooltip="Initialises a Message object.">initializeMessageFromObject</ref>(<ref refid="struct_message" kindref="compound" tooltip="Structure for Message objects.">Message</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*onErrorReceived)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref><sp/>error,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,...));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_message_8c_1a297413f770355bd4bd2212e999867031" kindref="member" tooltip="Initialises a Message object from byteArray data.">initializeMessageFromByteArrayData</ref>(<ref refid="struct_message" kindref="compound" tooltip="Structure for Message objects.">Message</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/>data,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*onErrorReceived)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref><sp/>error,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,...));</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_message_8c_1ac2c2a78178aac5f9f228b51d01bf5fe3" kindref="member" tooltip="destroy Message">destroyMessage</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>FUNCTIONS<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>MESSAGE_H_<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/Message.h"/>
  </compounddef>
</doxygen>
