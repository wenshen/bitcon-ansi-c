<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="_byte_array_8h" kind="file">
    <compoundname>ByteArray.h</compoundname>
    <includes refid="_object_8h" local="yes">Object.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">string.h</includes>
    <includes local="yes">../Constants.h</includes>
    <includedby refid="_merkle_node_8h" local="yes">src/MerkleNode/MerkleNode.h</includedby>
    <includedby refid="_byte_array_8c" local="yes">src/Object/ByteArray.c</includedby>
    <includedby refid="_script_8h" local="yes">src/Object/Script.h</includedby>
    <incdepgraph>
      <node id="681">
        <label>stdint.h</label>
      </node>
      <node id="682">
        <label>stdlib.h</label>
      </node>
      <node id="680">
        <label>Object.h</label>
        <link refid="_object_8h"/>
        <childnode refid="681" relation="include">
        </childnode>
        <childnode refid="682" relation="include">
        </childnode>
        <childnode refid="683" relation="include">
        </childnode>
      </node>
      <node id="684">
        <label>string.h</label>
      </node>
      <node id="679">
        <label>src/Object/ByteArray.h</label>
        <link refid="ByteArray.h"/>
        <childnode refid="680" relation="include">
        </childnode>
        <childnode refid="681" relation="include">
        </childnode>
        <childnode refid="684" relation="include">
        </childnode>
        <childnode refid="683" relation="include">
        </childnode>
      </node>
      <node id="683">
        <label>../Constants.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="693">
        <label>src/Object/Message/Block.c</label>
        <link refid="_block_8c"/>
      </node>
      <node id="692">
        <label>src/Object/Message/Block.h</label>
        <link refid="_block_8h"/>
        <childnode refid="693" relation="include">
        </childnode>
        <childnode refid="694" relation="include">
        </childnode>
      </node>
      <node id="698">
        <label>src/Object/Script.c</label>
        <link refid="_script_8c"/>
      </node>
      <node id="689">
        <label>src/Object/Script.h</label>
        <link refid="_script_8h"/>
        <childnode refid="690" relation="include">
        </childnode>
        <childnode refid="698" relation="include">
        </childnode>
      </node>
      <node id="687">
        <label>src/MerkleNode/MerkleNode.c</label>
        <link refid="_merkle_node_8c"/>
      </node>
      <node id="686">
        <label>src/MerkleNode/MerkleNode.h</label>
        <link refid="_merkle_node_8h"/>
        <childnode refid="687" relation="include">
        </childnode>
      </node>
      <node id="688">
        <label>src/Object/ByteArray.c</label>
        <link refid="_byte_array_8c"/>
      </node>
      <node id="685">
        <label>src/Object/ByteArray.h</label>
        <link refid="ByteArray.h"/>
        <childnode refid="686" relation="include">
        </childnode>
        <childnode refid="688" relation="include">
        </childnode>
        <childnode refid="689" relation="include">
        </childnode>
      </node>
      <node id="697">
        <label>src/Object/Message/TransactionInput.c</label>
        <link refid="_transaction_input_8c"/>
      </node>
      <node id="690">
        <label>src/Object/Message/TransactionInput.h</label>
        <link refid="_transaction_input_8h"/>
        <childnode refid="691" relation="include">
        </childnode>
        <childnode refid="696" relation="include">
        </childnode>
        <childnode refid="697" relation="include">
        </childnode>
      </node>
      <node id="695">
        <label>src/Object/Message/BlockHeaders.c</label>
        <link refid="_block_headers_8c"/>
      </node>
      <node id="696">
        <label>src/Object/Message/Transaction.c</label>
        <link refid="_transaction_8c"/>
      </node>
      <node id="694">
        <label>src/Object/Message/BlockHeaders.h</label>
        <link refid="_block_headers_8h"/>
        <childnode refid="695" relation="include">
        </childnode>
      </node>
      <node id="691">
        <label>src/Object/Message/Transaction.h</label>
        <link refid="_transaction_8h"/>
        <childnode refid="692" relation="include">
        </childnode>
        <childnode refid="693" relation="include">
        </childnode>
        <childnode refid="696" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_shared_data" prot="public">SharedData</innerclass>
    <innerclass refid="struct_byte_array" prot="public">ByteArray</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="_byte_array_8h_1a6cbc1ba8f97194319a90ac5ffd1d657d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
        <definition>ByteArray* createNewByteArrayFromString</definition>
        <argsstring>(char *string, int terminator, void(*onErrorReceived)(Error error, char *,...))</argsstring>
        <name>createNewByteArrayFromString</name>
        <param>
          <type>char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>int</type>
          <declname>terminator</declname>
        </param>
        <param>
          <type>void(*)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref> error, char *,...)</type>
          <declname>onErrorReceived</declname>
        </param>
        <briefdescription>
<para>Creates a <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object from a C string. The termination character is not included in the new <ref refid="struct_byte_array" kindref="compound">ByteArray</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to put into a <ref refid="struct_byte_array" kindref="compound">ByteArray</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>terminator</parametername>
</parameternamelist>
<parameterdescription>
<para>If true, include the termination character. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>onErrorReceived</parametername>
</parameternamelist>
<parameterdescription>
<para>Engine for errors. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.h" line="45"/>
      </memberdef>
      <memberdef kind="function" id="_byte_array_8h_1af6cc66b535ac00fe26f3e9b1870ccd3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
        <definition>ByteArray* createNewByteArrayOfSize</definition>
        <argsstring>(uint32_t size, void(*onErrorReceived)(Error error, char *,...))</argsstring>
        <name>createNewByteArrayOfSize</name>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>void(*)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref> error, char *,...)</type>
          <declname>onErrorReceived</declname>
        </param>
        <briefdescription>
<para>Creates an empty <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size in bytes for the new array. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>onErrorReceived</parametername>
</parameternamelist>
<parameterdescription>
<para>Engine for errors. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>An empty <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object.</para></simplesect>
Creates an empty <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ref</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.h" line="53" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.c" bodystart="400" bodyend="412"/>
        <references refid="struct_object_1aa353725933e843001d4feb03f8268121" compoundref="_object_8h" startline="29">Object::destroy</references>
        <references refid="_byte_array_8c_1a38e852a1c627acf4baa1159e1086927e" compoundref="_byte_array_8c" startline="175" endline="181">destroyByteArray</references>
        <references refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5ac0a554045048d2fb61387cf735676f69" compoundref="_constants_8h" startline="52">ERROR_OUT_OF_MEMORY</references>
        <references refid="_object_8c_1a8460165be167be3b0816d84f498e3733" compoundref="_object_8c" startline="42" endline="47">getObject</references>
        <references refid="_byte_array_8c_1a55b26b3cc3bf85148001735579d832d3" compoundref="_byte_array_8c" startline="443" endline="464">initByteArrayOfSize</references>
        <referencedby refid="_transaction_8h_1afe08b91a59f175e55d9ca049e46749c2" compoundref="_transaction_8c" startline="536" endline="680">getTransactionInputHashForVerification</referencedby>
      </memberdef>
      <memberdef kind="function" id="_byte_array_8h_1a06e13f0329162e7477b021e38a3036b8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
        <definition>ByteArray* createNewByteArrayFromData</definition>
        <argsstring>(uint8_t *data, uint32_t size, void(*onErrorReceived)(Error error, char *,...))</argsstring>
        <name>createNewByteArrayFromData</name>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>void(*)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref> error, char *,...)</type>
          <declname>onErrorReceived</declname>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> using data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data. This should be dynamically allocated. The new <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object will take care of it&apos;s memory management so do not free this data once passed into this constructor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size in bytes for the new array. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>onErrorReceived</parametername>
</parameternamelist>
<parameterdescription>
<para>Engine for errors. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The new <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object.</para></simplesect>
Creates a new <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> using data.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ref</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>NULL </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.h" line="62" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.c" bodystart="474" bodyend="487"/>
        <references refid="struct_object_1aa353725933e843001d4feb03f8268121" compoundref="_object_8h" startline="29">Object::destroy</references>
        <references refid="_byte_array_8c_1a38e852a1c627acf4baa1159e1086927e" compoundref="_byte_array_8c" startline="175" endline="181">destroyByteArray</references>
        <references refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5ac0a554045048d2fb61387cf735676f69" compoundref="_constants_8h" startline="52">ERROR_OUT_OF_MEMORY</references>
        <references refid="_object_8c_1a8460165be167be3b0816d84f498e3733" compoundref="_object_8c" startline="42" endline="47">getObject</references>
        <references refid="_byte_array_8c_1aeaa5d627e335dd6464668588ad9b0e21" compoundref="_byte_array_8c" startline="554" endline="573">initNewByteArrayFromData</references>
        <referencedby refid="_script_8h_1acb39fe4d41a3f92781bb5adcbae79033" compoundref="_script_8c" startline="264" endline="267">createNewScriptStackFromData</referencedby>
        <referencedby refid="_script_8h_1acd97590583a26ab99944ec9e2217d879" compoundref="_script_8c" startline="274" endline="1300">executeScript</referencedby>
      </memberdef>
      <memberdef kind="function" id="_byte_array_8h_1a4ad354fbecf536784199dcf0d60a72af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
        <definition>ByteArray* createNewByteArrayUsingDataCopy</definition>
        <argsstring>(uint8_t *data, uint32_t size, void(*onErrorReceived)(Error error, char *,...))</argsstring>
        <name>createNewByteArrayUsingDataCopy</name>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>void(*)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref> error, char *,...)</type>
          <declname>onErrorReceived</declname>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> using data which is copied. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data. This data is copied. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size in bytes for the new array. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>onErrorReceived</parametername>
</parameternamelist>
<parameterdescription>
<para>Engine for errors. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The new <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object.</para></simplesect>
Creates a new <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> using data which is copied.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ref</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>NULL </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.h" line="71" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.c" bodystart="497" bodyend="509"/>
        <references refid="struct_object_1aa353725933e843001d4feb03f8268121" compoundref="_object_8h" startline="29">Object::destroy</references>
        <references refid="_byte_array_8c_1a38e852a1c627acf4baa1159e1086927e" compoundref="_byte_array_8c" startline="175" endline="181">destroyByteArray</references>
        <references refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5ac0a554045048d2fb61387cf735676f69" compoundref="_constants_8h" startline="52">ERROR_OUT_OF_MEMORY</references>
        <references refid="_object_8c_1a8460165be167be3b0816d84f498e3733" compoundref="_object_8c" startline="42" endline="47">getObject</references>
        <references refid="_byte_array_8c_1afe08120f71b0234fb818b46311681573" compoundref="_byte_array_8c" startline="519" endline="543">initNewByteArrayUsingDataCopy</references>
        <referencedby refid="_script_8h_1a7da0d327f61176d21e35c3c88462a48b" compoundref="_script_8c" startline="269" endline="272">createNewScriptStackUsingCopyOfData</referencedby>
        <referencedby refid="_block_8h_1af1b6c7c59cf5fd4c7d9f94a6179dcb43" compoundref="_block_8c" startline="170" endline="190">initBlockWithGenesisBlockInfo</referencedby>
      </memberdef>
      <memberdef kind="function" id="_byte_array_8h_1a3c6396093509698d1346474653f63421" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
        <definition>ByteArray* getByteArray</definition>
        <argsstring>(void *self)</argsstring>
        <name>getByteArray</name>
        <param>
          <type>void *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Gets a <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> from another object. Use this to avoid casts. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object to obtain the <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> from. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.h" line="78" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.c" bodystart="61" bodyend="66"/>
        <referencedby refid="_version_checksum_bytes_8h_1a405a628eda9b41f28fdfb6266780d768" compoundref="_version_checksum_bytes_8c" startline="86" endline="90">FreeVersionChecksumBytes</referencedby>
        <referencedby refid="_transaction_8h_1afe08b91a59f175e55d9ca049e46749c2" compoundref="_transaction_8c" startline="536" endline="680">getTransactionInputHashForVerification</referencedby>
        <referencedby refid="_version_checksum_bytes_8h_1a04d489c466631d1e64fcfbeffc892830" compoundref="_version_checksum_bytes_8c" startline="74" endline="82">InitVersionChecksumBytesFromBytes</referencedby>
        <referencedby refid="_version_checksum_bytes_8h_1aea4c90e8f46d385322b8d3d5215634e2" compoundref="_version_checksum_bytes_8c" startline="31" endline="50">InitVersionChecksumBytesFromString</referencedby>
        <referencedby refid="_transaction_input_8h_1a9b0f805aed38d097be8bec7dd8701e50" compoundref="_transaction_input_8c" startline="134" endline="175">serializeTransactionInput</referencedby>
        <referencedby refid="_transaction_output_8h_1ae0ec9ca1d590685385987b26fbded266" compoundref="_transaction_output_8c" startline="127" endline="165">serializeTransactionOutput</referencedby>
        <referencedby refid="_version_checksum_bytes_8h_1a3cd3efddc0687f80b4ceacc3a67d83d1" compoundref="_version_checksum_bytes_8c" startline="94" endline="96">VersionChecksumBytesGetVersion</referencedby>
      </memberdef>
      <memberdef kind="function" id="_byte_array_8h_1a7a602e5e5f2d01b166f01b8263ef870c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int initByteArrayFromString</definition>
        <argsstring>(ByteArray *self, char *string, int terminator, void(*onErrorReceived)(Error error, char *,...))</argsstring>
        <name>initByteArrayFromString</name>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>char *</type>
          <declname>string</declname>
        </param>
        <param>
          <type>int</type>
          <declname>terminator</declname>
        </param>
        <param>
          <type>void(*)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref> error, char *,...)</type>
          <declname>onErrorReceived</declname>
        </param>
        <briefdescription>
<para>Initialises a <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object from a C string. The termination character is not included in the new <ref refid="struct_byte_array" kindref="compound">ByteArray</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object to initialise </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>string</parametername>
</parameternamelist>
<parameterdescription>
<para>The string to put into a <ref refid="struct_byte_array" kindref="compound">ByteArray</ref>. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>terminator</parametername>
</parameternamelist>
<parameterdescription>
<para>If tru, include the termination character. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>onErrorReceived</parametername>
</parameternamelist>
<parameterdescription>
<para>Engine for errors. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false on failure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.h" line="89"/>
      </memberdef>
      <memberdef kind="function" id="_byte_array_8h_1a55b26b3cc3bf85148001735579d832d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int initByteArrayOfSize</definition>
        <argsstring>(ByteArray *self, uint32_t size, void(*onErrorReceived)(Error error, char *,...))</argsstring>
        <name>initByteArrayOfSize</name>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>void(*)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref> error, char *,...)</type>
          <declname>onErrorReceived</declname>
        </param>
        <briefdescription>
<para>Initialises an empty <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object to initialise </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size in bytes for the new array. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>onErrorReceived</parametername>
</parameternamelist>
<parameterdescription>
<para>Engine for errors. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false on failure.</para></simplesect>
Initialises an empty <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ref</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.h" line="98" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.c" bodystart="443" bodyend="464"/>
        <references refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5ac0a554045048d2fb61387cf735676f69" compoundref="_constants_8h" startline="52">ERROR_OUT_OF_MEMORY</references>
        <references refid="_constants_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="_constants_8h" startline="89">FALSE</references>
        <references refid="_object_8c_1a8460165be167be3b0816d84f498e3733" compoundref="_object_8c" startline="42" endline="47">getObject</references>
        <references refid="struct_object_1ad83c3d5d3f46e6278a77cb80eb2a0705" compoundref="_object_8h" startline="30">Object::referenceCount</references>
        <references refid="_constants_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="_constants_8h" startline="90">TRUE</references>
        <referencedby refid="_byte_array_8h_1af6cc66b535ac00fe26f3e9b1870ccd3e" compoundref="_byte_array_8c" startline="400" endline="412">createNewByteArrayOfSize</referencedby>
      </memberdef>
      <memberdef kind="function" id="_byte_array_8h_1aeaa5d627e335dd6464668588ad9b0e21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int initNewByteArrayFromData</definition>
        <argsstring>(ByteArray *self, uint8_t *data, uint32_t size, void(*onErrorReceived)(Error error, char *,...))</argsstring>
        <name>initNewByteArrayFromData</name>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>void(*)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref> error, char *,...)</type>
          <declname>onErrorReceived</declname>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> using data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object to initialise </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data. This should be dynamically allocated. The new <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object will take care of it&apos;s memory management so do not free this data once passed into this constructor. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size in bytes for the new array. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>onErrorReceived</parametername>
</parameternamelist>
<parameterdescription>
<para>Engine for errors. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false on failure.</para></simplesect>
Creates a new <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> using data.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ref</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE/FALSE </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.h" line="108" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.c" bodystart="554" bodyend="573"/>
        <references refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5ac0a554045048d2fb61387cf735676f69" compoundref="_constants_8h" startline="52">ERROR_OUT_OF_MEMORY</references>
        <references refid="_constants_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="_constants_8h" startline="89">FALSE</references>
        <references refid="_object_8c_1a8460165be167be3b0816d84f498e3733" compoundref="_object_8c" startline="42" endline="47">getObject</references>
        <references refid="struct_object_1ad83c3d5d3f46e6278a77cb80eb2a0705" compoundref="_object_8h" startline="30">Object::referenceCount</references>
        <references refid="_constants_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="_constants_8h" startline="90">TRUE</references>
        <referencedby refid="_byte_array_8h_1a06e13f0329162e7477b021e38a3036b8" compoundref="_byte_array_8c" startline="474" endline="487">createNewByteArrayFromData</referencedby>
        <referencedby refid="_version_checksum_bytes_8h_1a04d489c466631d1e64fcfbeffc892830" compoundref="_version_checksum_bytes_8c" startline="74" endline="82">InitVersionChecksumBytesFromBytes</referencedby>
        <referencedby refid="_version_checksum_bytes_8h_1aea4c90e8f46d385322b8d3d5215634e2" compoundref="_version_checksum_bytes_8c" startline="31" endline="50">InitVersionChecksumBytesFromString</referencedby>
      </memberdef>
      <memberdef kind="function" id="_byte_array_8h_1afe08120f71b0234fb818b46311681573" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int initNewByteArrayUsingDataCopy</definition>
        <argsstring>(ByteArray *self, uint8_t *data, uint32_t size, void(*onErrorReceived)(Error error, char *,...))</argsstring>
        <name>initNewByteArrayUsingDataCopy</name>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>size</declname>
        </param>
        <param>
          <type>void(*)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref> error, char *,...)</type>
          <declname>onErrorReceived</declname>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> using data which is copied. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object to initialise </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The data. This data is copied. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para>Size in bytes for the new array. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>onErrorReceived</parametername>
</parameternamelist>
<parameterdescription>
<para>Engine for errors. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false on failure.</para></simplesect>
Creates a new <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> using data which is copied.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>size</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE/FALSE </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.h" line="118" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.c" bodystart="519" bodyend="543"/>
        <references refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5ac0a554045048d2fb61387cf735676f69" compoundref="_constants_8h" startline="52">ERROR_OUT_OF_MEMORY</references>
        <references refid="_constants_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="_constants_8h" startline="89">FALSE</references>
        <references refid="_object_8c_1a8460165be167be3b0816d84f498e3733" compoundref="_object_8c" startline="42" endline="47">getObject</references>
        <references refid="struct_object_1ad83c3d5d3f46e6278a77cb80eb2a0705" compoundref="_object_8h" startline="30">Object::referenceCount</references>
        <references refid="_constants_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="_constants_8h" startline="90">TRUE</references>
        <referencedby refid="_byte_array_8h_1a4ad354fbecf536784199dcf0d60a72af" compoundref="_byte_array_8c" startline="497" endline="509">createNewByteArrayUsingDataCopy</referencedby>
      </memberdef>
      <memberdef kind="function" id="_byte_array_8h_1a2811955249437e6f4f47a4fe3b706b2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int initializeByteArraySubsectionReference</definition>
        <argsstring>(ByteArray *self, ByteArray *refByteArray, uint32_t offset, uint32_t length)</argsstring>
        <name>initializeByteArraySubsectionReference</name>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>refByteArray</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Initialises a reference <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> to a subsection of an <ref refid="struct_byte_array" kindref="compound">ByteArray</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object to initialise. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>refByteArray</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object to reference. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset to the start of the reference. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the reference. If 0 the length is set to be the same as the reference <ref refid="struct_byte_array" kindref="compound">ByteArray</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false on failure.</para></simplesect>
Initialises a reference <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> to a subsection of an <ref refid="struct_byte_array" kindref="compound">ByteArray</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>refByteArray</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE/FALSE </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.h" line="128" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.c" bodystart="143" bodyend="168"/>
        <references refid="_constants_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="_constants_8h" startline="89">FALSE</references>
        <references refid="_object_8c_1a8460165be167be3b0816d84f498e3733" compoundref="_object_8c" startline="42" endline="47">getObject</references>
        <references refid="struct_byte_array_1aebb70c2aab3407a9f05334c47131a43b" compoundref="_byte_array_8h" startline="33">ByteArray::length</references>
        <references refid="struct_byte_array_1a894bdfa2d603d8343f8ef01dda6fcd23" compoundref="_byte_array_8h" startline="32">ByteArray::offset</references>
        <references refid="struct_byte_array_1a3c8af4f580f3041d046b7581f89a9695" compoundref="_byte_array_8h" startline="34">ByteArray::onErrorReceived</references>
        <references refid="struct_shared_data_1ad83c3d5d3f46e6278a77cb80eb2a0705" compoundref="_byte_array_8h" startline="23">SharedData::referenceCount</references>
        <references refid="struct_object_1ad83c3d5d3f46e6278a77cb80eb2a0705" compoundref="_object_8h" startline="30">Object::referenceCount</references>
        <references refid="struct_byte_array_1a0a0e8cb81138e26f1a3dba7c425f71e1" compoundref="_byte_array_8h" startline="31">ByteArray::sharedData</references>
        <references refid="_constants_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="_constants_8h" startline="90">TRUE</references>
        <referencedby refid="_byte_array_8h_1a2af99a2df572f9479c1f3a3445057475" compoundref="_byte_array_8c" startline="105" endline="131">getByteArraySubsectionReference</referencedby>
      </memberdef>
      <memberdef kind="function" id="_byte_array_8h_1a38e852a1c627acf4baa1159e1086927e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void destroyByteArray</definition>
        <argsstring>(void *self)</argsstring>
        <name>destroyByteArray</name>
        <param>
          <type>void *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Destroys a <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object to destroy.</para></parameterdescription>
</parameteritem>
</parameterlist>
Destroys a <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.h" line="134" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.c" bodystart="175" bodyend="181"/>
        <references refid="_object_8c_1a9773962d80072e39e235802b57907208" compoundref="_object_8c" startline="59" endline="63">destroyObject</references>
        <references refid="_object_8c_1a8460165be167be3b0816d84f498e3733" compoundref="_object_8c" startline="42" endline="47">getObject</references>
        <references refid="_byte_array_8c_1a3be6046f319ef59baf73dc0dfadd321d" compoundref="_byte_array_8c" startline="189" endline="201">releaseByteArraySharedDataReference</references>
        <referencedby refid="_byte_array_8h_1a06e13f0329162e7477b021e38a3036b8" compoundref="_byte_array_8c" startline="474" endline="487">createNewByteArrayFromData</referencedby>
        <referencedby refid="_byte_array_8h_1af6cc66b535ac00fe26f3e9b1870ccd3e" compoundref="_byte_array_8c" startline="400" endline="412">createNewByteArrayOfSize</referencedby>
        <referencedby refid="_byte_array_8h_1a4ad354fbecf536784199dcf0d60a72af" compoundref="_byte_array_8c" startline="497" endline="509">createNewByteArrayUsingDataCopy</referencedby>
        <referencedby refid="_version_checksum_bytes_8h_1a405a628eda9b41f28fdfb6266780d768" compoundref="_version_checksum_bytes_8c" startline="86" endline="90">FreeVersionChecksumBytes</referencedby>
        <referencedby refid="_byte_array_8h_1a2af99a2df572f9479c1f3a3445057475" compoundref="_byte_array_8c" startline="105" endline="131">getByteArraySubsectionReference</referencedby>
      </memberdef>
      <memberdef kind="function" id="_byte_array_8h_1a3be6046f319ef59baf73dc0dfadd321d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void releaseByteArraySharedDataReference</definition>
        <argsstring>(ByteArray *self)</argsstring>
        <name>releaseByteArraySharedDataReference</name>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Releases a reference to shared byte data and frees the data if necessary. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object with the <ref refid="struct_shared_data" kindref="compound">SharedData</ref></para></parameterdescription>
</parameteritem>
</parameterlist>
Releases a reference to shared byte data and frees the data if necessary.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.h" line="140" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.c" bodystart="189" bodyend="201"/>
        <referencedby refid="_byte_array_8h_1ad155de39b7e47d41778c0ec219aff1e6" compoundref="_byte_array_8c" startline="381" endline="390">changeByteArrayDataReference</referencedby>
        <referencedby refid="_byte_array_8h_1a38e852a1c627acf4baa1159e1086927e" compoundref="_byte_array_8c" startline="175" endline="181">destroyByteArray</referencedby>
      </memberdef>
      <memberdef kind="function" id="_byte_array_8h_1a49e0dcce3198b633d8f78dd56aa96597" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t readInt16AsLittleEndianFromByteArray</definition>
        <argsstring>(ByteArray *self, uint32_t offset)</argsstring>
        <name>readInt16AsLittleEndianFromByteArray</name>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Reads a 16 bit integer from a <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> as little-endian. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset to where to start the read </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A 16 bit integer. This can be cast to a signed integer if reading integer as a signed value.</para></simplesect>
Reads a 16 bit integer from a <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> as little-endian.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>result </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.h" line="149" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.c" bodystart="210" bodyend="222"/>
        <referencedby refid="_var_len_int_8h_1a4dd8c16aa70756e7ab6c0845a09358af" compoundref="_var_len_int_8c" startline="13" endline="43">decodeVarLenInt</referencedby>
        <referencedby refid="_script_8h_1acd97590583a26ab99944ec9e2217d879" compoundref="_script_8c" startline="274" endline="1300">executeScript</referencedby>
      </memberdef>
      <memberdef kind="function" id="_byte_array_8h_1a6fe303a6a14235d60ef9024a1463d630" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t readInt32AsLittleEndianFromByteArray</definition>
        <argsstring>(ByteArray *self, uint32_t offset)</argsstring>
        <name>readInt32AsLittleEndianFromByteArray</name>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Reads a 32 bit integer from a <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> as little-endian. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset to where to start the read </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A 32 bit integer. This can be cast to a signed integer if reading integer as a signed value</para></simplesect>
Reads a 32 bit integer from a <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> as little-endian.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>result </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.h" line="157" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.c" bodystart="231" bodyend="243"/>
        <referencedby refid="_var_len_int_8h_1a4dd8c16aa70756e7ab6c0845a09358af" compoundref="_var_len_int_8c" startline="13" endline="43">decodeVarLenInt</referencedby>
        <referencedby refid="_block_8h_1a9dcdbbf01ad57512119aa46013c7f92e" compoundref="_block_8c" startline="272" endline="312">deserializeBlock</referencedby>
        <referencedby refid="_get_blocks_8h_1ac6078bf7e22d0d785670ace084ac8ab6" compoundref="_get_blocks_8c" startline="82" endline="125">deserializeGetBlocks</referencedby>
        <referencedby refid="_inventory_vector_8h_1afe53d7aabd20f5c5748ea6058dfe21df" compoundref="_inventory_vector_8c" startline="105" endline="129">deserializeInventoryVector</referencedby>
        <referencedby refid="_transaction_8h_1ada5d9c85c4dc1ff7384ee49d6fd97ff8" compoundref="_transaction_8c" startline="384" endline="534">deserializeTransaction</referencedby>
        <referencedby refid="_transaction_input_8h_1a8eb115030448e943f94d8ecff0fa21a9" compoundref="_transaction_input_8c" startline="177" endline="225">deserializeTransactionInput</referencedby>
        <referencedby refid="_script_8h_1acd97590583a26ab99944ec9e2217d879" compoundref="_script_8c" startline="274" endline="1300">executeScript</referencedby>
      </memberdef>
      <memberdef kind="function" id="_byte_array_8h_1a94b973d5aa0c38c2d86c1fa48044f188" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint64_t</type>
        <definition>uint64_t readInt64AsLittleEndianFromByteArray</definition>
        <argsstring>(ByteArray *self, uint32_t offset)</argsstring>
        <name>readInt64AsLittleEndianFromByteArray</name>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Reads a 64 bit integer from the <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> as little-endian. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset to where to start the read </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A 64 bit integer. This can be cast to a signed integer if reading integer as a signed value</para></simplesect>
Reads a 64 bit integer from the <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> as little-endian.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>result </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.h" line="165" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.c" bodystart="254" bodyend="270"/>
        <referencedby refid="_var_len_int_8h_1a4dd8c16aa70756e7ab6c0845a09358af" compoundref="_var_len_int_8c" startline="13" endline="43">decodeVarLenInt</referencedby>
        <referencedby refid="_ping_pong_message_8h_1a198cd940373651273997143eab0bcde3" compoundref="_ping_pong_message_8c" startline="94" endline="109">deserializePingPongMessage</referencedby>
        <referencedby refid="_transaction_output_8h_1a484844cadde17ce53f58dcf0fceb52b2" compoundref="_transaction_output_8c" startline="167" endline="235">deserializeTransactionOutput</referencedby>
      </memberdef>
      <memberdef kind="function" id="_byte_array_8h_1a05fdf5ed430913399a5dd1078544210d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_constants_8h_1af5e6c1e42f1dbe27251f73c8b89d2504" kindref="member">Compare</ref></type>
        <definition>Compare compareByteArrays</definition>
        <argsstring>(ByteArray *self, ByteArray *second)</argsstring>
        <name>compareByteArrays</name>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>self</declname>
          <defname>first</defname>
        </param>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>second</declname>
        </param>
        <briefdescription>
<para>Compares a <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> to another <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> and returns with a Compare value. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object to compare </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>second</parametername>
</parameternamelist>
<parameterdescription>
<para>Another <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object to compare with </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>If the lengths are different, _COMPARE_MORE_THAN if &quot;self&quot; if longer, else _COMPARE_LESS_THAN. If the bytes are equal _COMPARE_EQUAL, else _COMPARE_MORE_THAN if the first different byte if higher in &quot;self&quot;, otherwise _COMPARE_LESS_THAN. The return value can be treated like the return value to memcmp.</para></simplesect>
Compares a <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> to another <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> and returns with a Compare value.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>second</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>memcmp </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.h" line="172" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.c" bodystart="422" bodyend="434"/>
        <references refid="_constants_8h_1af5e6c1e42f1dbe27251f73c8b89d2504a2222fe67d3866dd8e992fd5ef4b4d6ed" compoundref="_constants_8h" startline="59">COMPARE_LESS_THAN</references>
        <references refid="_constants_8h_1af5e6c1e42f1dbe27251f73c8b89d2504af1fd61c04c5a27e5ecef52d420467c76" compoundref="_constants_8h" startline="57">COMPARE_MORE_THAN</references>
        <references refid="_byte_array_8c_1aceedce9c30c691b211185ee9b454aae4" compoundref="_byte_array_8c" startline="74" endline="78">getByteArrayData</references>
        <references refid="struct_byte_array_1aebb70c2aab3407a9f05334c47131a43b" compoundref="_byte_array_8h" startline="33">ByteArray::length</references>
      </memberdef>
      <memberdef kind="function" id="_byte_array_8h_1a5f9cbb44e21cee66a7d6c1d9e91662d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
        <definition>ByteArray* copyByteArray</definition>
        <argsstring>(ByteArray *self)</argsstring>
        <name>copyByteArray</name>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Copies a <ref refid="struct_byte_array" kindref="compound">ByteArray</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object to copy </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The new <ref refid="struct_byte_array" kindref="compound">ByteArray</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.h" line="178"/>
      </memberdef>
      <memberdef kind="function" id="_byte_array_8h_1a7c9e6ea6d3022a2e858e91e207be9ec2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void copyByteArrayToByteArray</definition>
        <argsstring>(ByteArray *self, uint32_t writeOffset, ByteArray *source)</argsstring>
        <name>copyByteArrayToByteArray</name>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>writeOffset</declname>
        </param>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>source</declname>
        </param>
        <briefdescription>
<para>Copies another byte array to this byte array. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object to copy to. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>writeOffset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset to begin writing to in self. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> to copy from.</para></parameterdescription>
</parameteritem>
</parameterlist>
Copies another byte array to this byte array.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>writeOffset</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.h" line="186" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.c" bodystart="28" bodyend="35"/>
        <references refid="struct_shared_data_1abe222f6d3581e7920dcad5306cc906a8" compoundref="_byte_array_8h" startline="22">SharedData::data</references>
        <references refid="struct_byte_array_1aebb70c2aab3407a9f05334c47131a43b" compoundref="_byte_array_8h" startline="33">ByteArray::length</references>
        <references refid="struct_byte_array_1a894bdfa2d603d8343f8ef01dda6fcd23" compoundref="_byte_array_8h" startline="32">ByteArray::offset</references>
        <references refid="struct_byte_array_1a0a0e8cb81138e26f1a3dba7c425f71e1" compoundref="_byte_array_8h" startline="31">ByteArray::sharedData</references>
        <referencedby refid="_block_8h_1a4648ce410198b41749394a5c377ce73b" compoundref="_block_8c" startline="481" endline="491">dealWithSerializationHeader</referencedby>
        <referencedby refid="_transaction_8h_1afe08b91a59f175e55d9ca049e46749c2" compoundref="_transaction_8c" startline="536" endline="680">getTransactionInputHashForVerification</referencedby>
        <referencedby refid="_chain_descriptor_8h_1a4873951a3acf7e90e799c64a9d09455d" compoundref="_chain_descriptor_8c" startline="119" endline="140">serializeChainDescriptor</referencedby>
        <referencedby refid="_get_blocks_8h_1ae09f58674ed59b6d5f320cc588afdd14" compoundref="_get_blocks_8c" startline="127" endline="157">serializeGetBlocks</referencedby>
        <referencedby refid="_inventory_vector_8h_1a340bff34fb8ee996b53e0a61ebdd3e8a" compoundref="_inventory_vector_8c" startline="131" endline="153">serializeInventoryVector</referencedby>
        <referencedby refid="_transaction_input_8h_1a9b0f805aed38d097be8bec7dd8701e50" compoundref="_transaction_input_8c" startline="134" endline="175">serializeTransactionInput</referencedby>
        <referencedby refid="_transaction_output_8h_1ae0ec9ca1d590685385987b26fbded266" compoundref="_transaction_output_8c" startline="127" endline="165">serializeTransactionOutput</referencedby>
      </memberdef>
      <memberdef kind="function" id="_byte_array_8h_1ad0a1c8808facdb6dbb717edb8da0aa91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void copySubsectionOfByteArrayToByteArray</definition>
        <argsstring>(ByteArray *self, uint32_t writeOffset, ByteArray *source, uint32_t readOffset, uint32_t length)</argsstring>
        <name>copySubsectionOfByteArrayToByteArray</name>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>writeOffset</declname>
        </param>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>source</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>readOffset</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Copies a section of another byte array to this byte array. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>writeOffset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset to begin writing </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>source</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> to copy from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>readOffset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset of the source array to begin reading. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>The length to copy. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.h" line="197"/>
      </memberdef>
      <memberdef kind="function" id="_byte_array_8h_1a747ffce05b12489648adaf26fc882f5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
        <definition>ByteArray* createNewByteArrayFromSubsection</definition>
        <argsstring>(ByteArray *self, uint32_t offset, uint32_t length)</argsstring>
        <name>createNewByteArrayFromSubsection</name>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Copies a subsection of a <ref refid="struct_byte_array" kindref="compound">ByteArray</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object to copy from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset to the start of the copy. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the copy. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The new <ref refid="struct_byte_array" kindref="compound">ByteArray</ref>. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.h" line="206"/>
      </memberdef>
      <memberdef kind="function" id="_byte_array_8h_1a2af99a2df572f9479c1f3a3445057475" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
        <definition>ByteArray* getByteArraySubsectionReference</definition>
        <argsstring>(ByteArray *self, uint32_t offset, uint32_t length)</argsstring>
        <name>getByteArraySubsectionReference</name>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>self</declname>
          <defname>refByteArray</defname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>References a subsection of a <ref refid="struct_byte_array" kindref="compound">ByteArray</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object to reference. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset to the start of the reference. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>The length of the reference. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The new <ref refid="struct_byte_array" kindref="compound">ByteArray</ref>.</para></simplesect>
References a subsection of a <ref refid="struct_byte_array" kindref="compound">ByteArray</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>refByteArray</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>NULL </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.h" line="216" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.c" bodystart="105" bodyend="131"/>
        <references refid="struct_object_1aa353725933e843001d4feb03f8268121" compoundref="_object_8h" startline="29">Object::destroy</references>
        <references refid="_byte_array_8c_1a38e852a1c627acf4baa1159e1086927e" compoundref="_byte_array_8c" startline="175" endline="181">destroyByteArray</references>
        <references refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5ac0a554045048d2fb61387cf735676f69" compoundref="_constants_8h" startline="52">ERROR_OUT_OF_MEMORY</references>
        <references refid="_object_8c_1a8460165be167be3b0816d84f498e3733" compoundref="_object_8c" startline="42" endline="47">getObject</references>
        <references refid="_byte_array_8c_1a2811955249437e6f4f47a4fe3b706b2e" compoundref="_byte_array_8c" startline="143" endline="168">initializeByteArraySubsectionReference</references>
        <references refid="struct_byte_array_1a3c8af4f580f3041d046b7581f89a9695" compoundref="_byte_array_8h" startline="34">ByteArray::onErrorReceived</references>
        <referencedby refid="_script_8h_1ae6cbd0324ea790261d8c56b9aeda0f78" compoundref="_script_8c" startline="16" endline="23">createNewScriptFromReference</referencedby>
        <referencedby refid="_block_8h_1aeb72d715416153dbd72e8f876fb19981" compoundref="_block_8c" startline="499" endline="532">dealWithSerializationTran</referencedby>
        <referencedby refid="_block_8h_1a9dcdbbf01ad57512119aa46013c7f92e" compoundref="_block_8c" startline="272" endline="312">deserializeBlock</referencedby>
        <referencedby refid="_block_headers_8h_1ace10b6ab479717f0540e5a5528ca3952" compoundref="_block_headers_8c" startline="89" endline="140">deserializeBlockHeaders</referencedby>
        <referencedby refid="_chain_descriptor_8h_1a6d7efa38f552f57c8f66ef6b7fdf103a" compoundref="_chain_descriptor_8c" startline="80" endline="118">deserializeChainDescriptor</referencedby>
        <referencedby refid="_get_blocks_8h_1ac6078bf7e22d0d785670ace084ac8ab6" compoundref="_get_blocks_8c" startline="82" endline="125">deserializeGetBlocks</referencedby>
        <referencedby refid="_inventory_8c_1a62e028868025b8a7e77dc71490b135ea" compoundref="_inventory_8c" startline="107" endline="167">deserializeInventory</referencedby>
        <referencedby refid="_inventory_vector_8h_1afe53d7aabd20f5c5748ea6058dfe21df" compoundref="_inventory_vector_8c" startline="105" endline="129">deserializeInventoryVector</referencedby>
        <referencedby refid="_transaction_8h_1ada5d9c85c4dc1ff7384ee49d6fd97ff8" compoundref="_transaction_8c" startline="384" endline="534">deserializeTransaction</referencedby>
        <referencedby refid="_transaction_input_8h_1a8eb115030448e943f94d8ecff0fa21a9" compoundref="_transaction_input_8c" startline="177" endline="225">deserializeTransactionInput</referencedby>
        <referencedby refid="_block_8h_1a219df1f8f05a691f09e283731eb86129" compoundref="_block_8c" startline="321" endline="384">deserializeWithTransactions</referencedby>
        <referencedby refid="_inventory_8h_1a67383f9aba234b390c4b5be54019c3f4" compoundref="_inventory_8c" startline="169" endline="213">serialiseInventory</referencedby>
        <referencedby refid="_block_headers_8h_1a06fe7338aa2dc8d104e7f8148674b202" compoundref="_block_headers_8c" startline="141" endline="176">serializeBlockHeaders</referencedby>
        <referencedby refid="_get_blocks_8h_1ae09f58674ed59b6d5f320cc588afdd14" compoundref="_get_blocks_8c" startline="127" endline="157">serializeGetBlocks</referencedby>
        <referencedby refid="_transaction_8h_1a61a0f76473a17de64dcecc04a3ce3b5f" compoundref="_transaction_8c" startline="259" endline="382">serializeTransaction</referencedby>
      </memberdef>
      <memberdef kind="function" id="_byte_array_8h_1ac37879c5183d813699af84e23e8137ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t getByteFromByteArray</definition>
        <argsstring>(ByteArray *self, uint32_t index)</argsstring>
        <name>getByteFromByteArray</name>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <briefdescription>
<para>Get a byte from the <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object. A byte will be returned from self-&gt;offset+index in the underlying data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index in the array to get the byte from </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The byte</para></simplesect>
Get a byte from the <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object. A byte will be returned from self-&gt;offset+index in the underlying data.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>uint8_t </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.h" line="224" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.c" bodystart="89" bodyend="95"/>
        <referencedby refid="_var_len_int_8h_1a4dd8c16aa70756e7ab6c0845a09358af" compoundref="_var_len_int_8c" startline="13" endline="43">decodeVarLenInt</referencedby>
        <referencedby refid="_block_8h_1a9dcdbbf01ad57512119aa46013c7f92e" compoundref="_block_8c" startline="272" endline="312">deserializeBlock</referencedby>
        <referencedby refid="_transaction_output_8h_1a484844cadde17ce53f58dcf0fceb52b2" compoundref="_transaction_output_8c" startline="167" endline="235">deserializeTransactionOutput</referencedby>
        <referencedby refid="_block_8h_1a2590af8eb87d088e41c0dfff66d41454" compoundref="_block_8c" startline="394" endline="421">deserializeWithOnlyHeaders</referencedby>
        <referencedby refid="_script_8h_1acd97590583a26ab99944ec9e2217d879" compoundref="_script_8c" startline="274" endline="1300">executeScript</referencedby>
        <referencedby refid="_script_8h_1ae63afad4294e52303b66f910fda58525" compoundref="_script_8c" startline="34" endline="42">isP2SHScript</referencedby>
        <referencedby refid="_version_checksum_bytes_8h_1a3cd3efddc0687f80b4ceacc3a67d83d1" compoundref="_version_checksum_bytes_8c" startline="94" endline="96">VersionChecksumBytesGetVersion</referencedby>
      </memberdef>
      <memberdef kind="function" id="_byte_array_8h_1aceedce9c30c691b211185ee9b454aae4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>uint8_t* getByteArrayData</definition>
        <argsstring>(ByteArray *self)</argsstring>
        <name>getByteArrayData</name>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Get a pointer to the underlying data starting at self-&gt;offset. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The pointer </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.h" line="230" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.c" bodystart="74" bodyend="78"/>
        <referencedby refid="_merkle_node_8h_1a211a27939356415dc6fb21842966706e" compoundref="_merkle_node_8c" startline="15" endline="73">BuildMerkleTree</referencedby>
        <referencedby refid="_block_8h_1a1dd38c9d32f6f6984930141d5ce01fba" compoundref="_block_8c" startline="232" endline="238">calculateBlockHash</referencedby>
        <referencedby refid="_transaction_8h_1ae53ed930910256b4620da39ebdcccdb5" compoundref="_transaction_8c" startline="191" endline="200">calculateTransactionHash</referencedby>
        <referencedby refid="_byte_array_8h_1a05fdf5ed430913399a5dd1078544210d" compoundref="_byte_array_8c" startline="422" endline="434">compareByteArrays</referencedby>
        <referencedby refid="_script_8h_1acd97590583a26ab99944ec9e2217d879" compoundref="_script_8c" startline="274" endline="1300">executeScript</referencedby>
        <referencedby refid="_transaction_8h_1afe08b91a59f175e55d9ca049e46749c2" compoundref="_transaction_8c" startline="536" endline="680">getTransactionInputHashForVerification</referencedby>
      </memberdef>
      <memberdef kind="function" id="_byte_array_8h_1a2a4210928f199642b8473f2de28ac0ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t</type>
        <definition>uint8_t getLastByteFromByteArray</definition>
        <argsstring>(ByteArray *self)</argsstring>
        <name>getLastByteFromByteArray</name>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Get the last byte from the <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object. A byte will be returned from self-&gt;offset+self-&gt;length in the underlying data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The last byte </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.h" line="236"/>
      </memberdef>
      <memberdef kind="function" id="_byte_array_8h_1a67c61be339ec259b4629e4b65d7ae510" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int isNullByteArray</definition>
        <argsstring>(ByteArray *self)</argsstring>
        <name>isNullByteArray</name>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Determines if a <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> is null. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if all bytes are zero, else false.</para></simplesect>
Determines if a <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> is null.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE/FALSE </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.h" line="242" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.c" bodystart="43" bodyend="52"/>
        <references refid="_constants_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="_constants_8h" startline="89">FALSE</references>
        <references refid="_constants_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="_constants_8h" startline="90">TRUE</references>
        <referencedby refid="_transaction_8h_1ad8a53667fdc74c2b586f973123e15cf3" compoundref="_transaction_8c" startline="248" endline="257">isCoinBase</referencedby>
      </memberdef>
      <memberdef kind="function" id="_byte_array_8h_1aa97aa7ca8177b767d78d5f85a00a00c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setByteInByteArray</definition>
        <argsstring>(ByteArray *self, uint32_t index, uint8_t byte)</argsstring>
        <name>setByteInByteArray</name>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>byte</declname>
        </param>
        <briefdescription>
<para>Set a byte into the array. This will be set at self-&gt;offset+index in the underlying data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index in the array to set the byte </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte</parametername>
</parameternamelist>
<parameterdescription>
<para>The byte to be set.</para></parameterdescription>
</parameteritem>
</parameterlist>
Set a byte into the array. This will be set at self-&gt;offset+index in the underlying data.</para><para>sets Bytes In <ref refid="struct_byte_array" kindref="compound">ByteArray</ref></para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>byte</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bytes</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.h" line="249" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.c" bodystart="280" bodyend="287"/>
        <referencedby refid="_block_8h_1aeb72d715416153dbd72e8f876fb19981" compoundref="_block_8c" startline="499" endline="532">dealWithSerializationTran</referencedby>
        <referencedby refid="_var_len_int_8h_1a12852f478f7fcd7cacc0b150fa7fe12a" compoundref="_var_len_int_8c" startline="45" endline="69">encodeVarLenInt</referencedby>
        <referencedby refid="_get_blocks_8h_1ae09f58674ed59b6d5f320cc588afdd14" compoundref="_get_blocks_8c" startline="127" endline="157">serializeGetBlocks</referencedby>
      </memberdef>
      <memberdef kind="function" id="_byte_array_8h_1a7ad896bb3a3311b92c4c772b24280b0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void setBytesInByteArray</definition>
        <argsstring>(ByteArray *self, uint32_t index, uint8_t *bytes, uint32_t length)</argsstring>
        <name>setBytesInByteArray</name>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>index</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>length</declname>
        </param>
        <briefdescription>
<para>Copies a length of bytes into the array. This will be set at self-&gt;offset+index in the underlying data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>index</parametername>
</parameternamelist>
<parameterdescription>
<para>The index in the array to start writing. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>bytes</parametername>
</parameternamelist>
<parameterdescription>
<para>The pointer to the bytes to be copied. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>length</parametername>
</parameternamelist>
<parameterdescription>
<para>The number of bytes to copy. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.h" line="258" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.c" bodystart="298" bodyend="306"/>
      </memberdef>
      <memberdef kind="function" id="_byte_array_8h_1aef95198f4933d68abf41255b67107b28" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void writeInt16AsLittleEndianIntoByteArray</definition>
        <argsstring>(ByteArray *self, uint32_t offset, uint16_t integer)</argsstring>
        <name>writeInt16AsLittleEndianIntoByteArray</name>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>uint16_t</type>
          <declname>integer</declname>
        </param>
        <briefdescription>
<para>Writes a 16 bit integer to a <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> as little-endian. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset to where to start the write </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>integer</parametername>
</parameternamelist>
<parameterdescription>
<para>The 16 bit integer to set. The argument is an unsigned integer but signed or unsigned integers are OK to pass.</para></parameterdescription>
</parameteritem>
</parameterlist>
Writes a 16 bit integer to a <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> as little-endian.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>integer</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.h" line="266" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.c" bodystart="315" bodyend="327"/>
        <referencedby refid="_var_len_int_8h_1a12852f478f7fcd7cacc0b150fa7fe12a" compoundref="_var_len_int_8c" startline="45" endline="69">encodeVarLenInt</referencedby>
      </memberdef>
      <memberdef kind="function" id="_byte_array_8h_1ab7e0f883b2d3ff4d4b253f4257f6916a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void writeInt32AsLittleEndianIntoByteArray</definition>
        <argsstring>(ByteArray *self, uint32_t offset, uint32_t integer)</argsstring>
        <name>writeInt32AsLittleEndianIntoByteArray</name>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>integer</declname>
        </param>
        <briefdescription>
<para>Writes a 32 bit integer to a <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> as little-endian. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset to where to start the write </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>integer</parametername>
</parameternamelist>
<parameterdescription>
<para>The 32 bit integer to set. The argument is an unsigned integer but signed or unsigned integers are OK to pass.</para></parameterdescription>
</parameteritem>
</parameterlist>
Writes a 32 bit integer to a <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> as little-endian.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>integer</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.h" line="274" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.c" bodystart="337" bodyend="347"/>
        <referencedby refid="_block_8h_1a4648ce410198b41749394a5c377ce73b" compoundref="_block_8c" startline="481" endline="491">dealWithSerializationHeader</referencedby>
        <referencedby refid="_var_len_int_8h_1a12852f478f7fcd7cacc0b150fa7fe12a" compoundref="_var_len_int_8c" startline="45" endline="69">encodeVarLenInt</referencedby>
        <referencedby refid="_transaction_8h_1afe08b91a59f175e55d9ca049e46749c2" compoundref="_transaction_8c" startline="536" endline="680">getTransactionInputHashForVerification</referencedby>
        <referencedby refid="_inventory_vector_8h_1a340bff34fb8ee996b53e0a61ebdd3e8a" compoundref="_inventory_vector_8c" startline="131" endline="153">serializeInventoryVector</referencedby>
        <referencedby refid="_transaction_8h_1a61a0f76473a17de64dcecc04a3ce3b5f" compoundref="_transaction_8c" startline="259" endline="382">serializeTransaction</referencedby>
        <referencedby refid="_transaction_input_8h_1a9b0f805aed38d097be8bec7dd8701e50" compoundref="_transaction_input_8c" startline="134" endline="175">serializeTransactionInput</referencedby>
      </memberdef>
      <memberdef kind="function" id="_byte_array_8h_1a7bed1ea7fa0945a98bc4548d72236446" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void writeInt64AsLittleEndianIntoByteArray</definition>
        <argsstring>(ByteArray *self, uint32_t offset, uint64_t integer)</argsstring>
        <name>writeInt64AsLittleEndianIntoByteArray</name>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>offset</declname>
        </param>
        <param>
          <type>uint64_t</type>
          <declname>integer</declname>
        </param>
        <briefdescription>
<para>Writes a 64 bit integer to a <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> as little-endian. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>Offset to where to start the write </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>integer</parametername>
</parameternamelist>
<parameterdescription>
<para>The 64 bit integer to set. The argument is an unsigned integer but signed or unsigned integers are OK to pass.</para></parameterdescription>
</parameteritem>
</parameterlist>
Writes a 64 bit integer to a <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> as little-endian.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>integer</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.h" line="282" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.c" bodystart="357" bodyend="371"/>
        <referencedby refid="_var_len_int_8h_1a12852f478f7fcd7cacc0b150fa7fe12a" compoundref="_var_len_int_8c" startline="45" endline="69">encodeVarLenInt</referencedby>
        <referencedby refid="_transaction_8h_1afe08b91a59f175e55d9ca049e46749c2" compoundref="_transaction_8c" startline="536" endline="680">getTransactionInputHashForVerification</referencedby>
        <referencedby refid="_ping_pong_message_8h_1ab1c318a0853f3a7e93e38d47d9dabd30" compoundref="_ping_pong_message_8c" startline="111" endline="126">serializePingPongMessage</referencedby>
        <referencedby refid="_transaction_output_8h_1ae0ec9ca1d590685385987b26fbded266" compoundref="_transaction_output_8c" startline="127" endline="165">serializeTransactionOutput</referencedby>
      </memberdef>
      <memberdef kind="function" id="_byte_array_8h_1a77965afc28ae0c5d447a5cc60f487f37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void reverseBytes</definition>
        <argsstring>(ByteArray *self)</argsstring>
        <name>reverseBytes</name>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Reverses the bytes. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object to reverse </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.h" line="287" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.c" bodystart="576" bodyend="583"/>
        <referencedby refid="_version_checksum_bytes_8h_1aea4c90e8f46d385322b8d3d5215634e2" compoundref="_version_checksum_bytes_8c" startline="31" endline="50">InitVersionChecksumBytesFromString</referencedby>
      </memberdef>
      <memberdef kind="function" id="_byte_array_8h_1ad155de39b7e47d41778c0ec219aff1e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void changeByteArrayDataReference</definition>
        <argsstring>(ByteArray *self, ByteArray *ref, uint32_t offset)</argsstring>
        <name>changeByteArrayDataReference</name>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>ref</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>offset</declname>
        </param>
        <briefdescription>
<para>Changes the reference of this <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object to reference the underlying data of another <ref refid="struct_byte_array" kindref="compound">ByteArray</ref>. Useful for moving byte data into single underlying data by copying the data into a larger <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> and then changing the reference to this new larger <ref refid="struct_byte_array" kindref="compound">ByteArray</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object to change the reference for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ref</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object to get the reference from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para>The offset to start the reference. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The new <ref refid="struct_byte_array" kindref="compound">ByteArray</ref>.</para></simplesect>
Changes the reference of this <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> object to reference the underlying data of another <ref refid="struct_byte_array" kindref="compound">ByteArray</ref>. Useful for moving byte data into single underlying data by copying the data into a larger <ref refid="struct_byte_array" kindref="compound">ByteArray</ref> and then changing the reference to this new larger <ref refid="struct_byte_array" kindref="compound">ByteArray</ref>.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ref</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>offset</parametername>
</parameternamelist>
<parameterdescription>
<para></para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.h" line="296" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.c" bodystart="381" bodyend="390"/>
        <references refid="struct_byte_array_1a894bdfa2d603d8343f8ef01dda6fcd23" compoundref="_byte_array_8h" startline="32">ByteArray::offset</references>
        <references refid="struct_shared_data_1ad83c3d5d3f46e6278a77cb80eb2a0705" compoundref="_byte_array_8h" startline="23">SharedData::referenceCount</references>
        <references refid="_byte_array_8c_1a3be6046f319ef59baf73dc0dfadd321d" compoundref="_byte_array_8c" startline="189" endline="201">releaseByteArraySharedDataReference</references>
        <references refid="struct_byte_array_1a0a0e8cb81138e26f1a3dba7c425f71e1" compoundref="_byte_array_8h" startline="31">ByteArray::sharedData</references>
        <referencedby refid="_block_8h_1a4648ce410198b41749394a5c377ce73b" compoundref="_block_8c" startline="481" endline="491">dealWithSerializationHeader</referencedby>
        <referencedby refid="_chain_descriptor_8h_1a4873951a3acf7e90e799c64a9d09455d" compoundref="_chain_descriptor_8c" startline="119" endline="140">serializeChainDescriptor</referencedby>
        <referencedby refid="_get_blocks_8h_1ae09f58674ed59b6d5f320cc588afdd14" compoundref="_get_blocks_8c" startline="127" endline="157">serializeGetBlocks</referencedby>
        <referencedby refid="_inventory_vector_8h_1a340bff34fb8ee996b53e0a61ebdd3e8a" compoundref="_inventory_vector_8c" startline="131" endline="153">serializeInventoryVector</referencedby>
        <referencedby refid="_transaction_input_8h_1a9b0f805aed38d097be8bec7dd8701e50" compoundref="_transaction_input_8c" startline="134" endline="175">serializeTransactionInput</referencedby>
        <referencedby refid="_transaction_output_8h_1ae0ec9ca1d590685385987b26fbded266" compoundref="_transaction_output_8c" startline="127" endline="165">serializeTransactionOutput</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>ByteArray.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>03/10/2012</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>by:<sp/>Abdulfatai<sp/>Popoola</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Modified<sp/>by:<sp/>Wen<sp/>Shen</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(c)<sp/>2012<sp/>Bitcoin<sp/>Project<sp/>Team</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>BYTEARRAY_H_</highlight></codeline>
<codeline lineno="11"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>BYTEARRAY_H_</highlight></codeline>
<codeline lineno="12"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_object_8h" kindref="compound" tooltip="Basic object which serves as a basic block for all other objects in the system.">Object.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Constants.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="21" refid="struct_shared_data" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="22" refid="struct_shared_data_1abe222f6d3581e7920dcad5306cc906a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*<sp/><ref refid="struct_shared_data_1abe222f6d3581e7920dcad5306cc906a8" kindref="member">data</ref>;<sp/></highlight></codeline>
<codeline lineno="23" refid="struct_shared_data_1ad83c3d5d3f46e6278a77cb80eb2a0705" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_shared_data_1ad83c3d5d3f46e6278a77cb80eb2a0705" kindref="member">referenceCount</ref>;<sp/></highlight></codeline>
<codeline lineno="24"><highlight class="normal">}<sp/><ref refid="struct_shared_data" kindref="compound" tooltip="Stores byte data that can be shared amongst many ByteArrays.">SharedData</ref>;</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="29" refid="struct_byte_array" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="30" refid="struct_byte_array_1a23cf4ef56ba22bed625eab08d6361fa7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_object" kindref="compound" tooltip="Base class.">Object</ref><sp/><ref refid="struct_byte_array_1a23cf4ef56ba22bed625eab08d6361fa7" kindref="member">base</ref>;<sp/></highlight></codeline>
<codeline lineno="31" refid="struct_byte_array_1a0a0e8cb81138e26f1a3dba7c425f71e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_shared_data" kindref="compound" tooltip="Stores byte data that can be shared amongst many ByteArrays.">SharedData</ref><sp/>*<sp/><ref refid="struct_byte_array_1a0a0e8cb81138e26f1a3dba7c425f71e1" kindref="member">sharedData</ref>;<sp/></highlight></codeline>
<codeline lineno="32" refid="struct_byte_array_1a894bdfa2d603d8343f8ef01dda6fcd23" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_byte_array_1a894bdfa2d603d8343f8ef01dda6fcd23" kindref="member">offset</ref>;<sp/></highlight></codeline>
<codeline lineno="33" refid="struct_byte_array_1aebb70c2aab3407a9f05334c47131a43b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_byte_array_1aebb70c2aab3407a9f05334c47131a43b" kindref="member">length</ref>;<sp/></highlight></codeline>
<codeline lineno="34" refid="struct_byte_array_1a3c8af4f580f3041d046b7581f89a9695" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>void<sp/>(*onErrorReceived)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref><sp/>error,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/>...);</highlight></codeline>
<codeline lineno="35"><highlight class="normal">}<sp/><ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref>;</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"><ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/><ref refid="_byte_array_8h_1a6cbc1ba8f97194319a90ac5ffd1d657d" kindref="member" tooltip="Creates a ByteArray object from a C string. The termination character is not included in the new Byte...">createNewByteArrayFromString</ref>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>terminator,</highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(*onErrorReceived)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref><sp/>error,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/>...));</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/><ref refid="_byte_array_8c_1ae7051cc025f26ae1c8ddf6e4f7fef597" kindref="member" tooltip="createNewByteArrayOfSize">createNewByteArrayOfSize</ref>(uint32_t<sp/>size,</highlight></codeline>
<codeline lineno="53"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(*onErrorReceived)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref><sp/>error,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/>...));</highlight></codeline>
<codeline lineno="61"><highlight class="normal"><ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/><ref refid="_byte_array_8c_1a106c7d7657b7f9758d5c1a2caa329ce4" kindref="member" tooltip="createNewByteArrayFromData">createNewByteArrayFromData</ref>(uint8_t<sp/>*<sp/>data,<sp/>uint32_t<sp/>size,</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(*onErrorReceived)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref><sp/>error,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/>...));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/><ref refid="_byte_array_8c_1a3affebc3c5fab0302f7d3163445c12da" kindref="member" tooltip="createNewByteArrayUsingDataCopy">createNewByteArrayUsingDataCopy</ref>(uint8_t<sp/>*<sp/>data,<sp/>uint32_t<sp/>size,</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(*onErrorReceived)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref><sp/>error,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/>...));</highlight></codeline>
<codeline lineno="72"><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/><ref refid="_byte_array_8c_1a3c6396093509698d1346474653f63421" kindref="member" tooltip="Gets a ByteArray from another object. Use this to avoid casts.">getByteArray</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="88"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_byte_array_8h_1a7a602e5e5f2d01b166f01b8263ef870c" kindref="member" tooltip="Initialises a ByteArray object from a C string. The termination character is not included in the new ...">initByteArrayFromString</ref>(<ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keywordtype">string</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>terminator,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(*onErrorReceived)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref><sp/>error,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/>...));</highlight></codeline>
<codeline lineno="97"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_byte_array_8c_1a55b26b3cc3bf85148001735579d832d3" kindref="member" tooltip="initByteArrayOfSize">initByteArrayOfSize</ref>(<ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>uint32_t<sp/>size,</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(*onErrorReceived)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref><sp/>error,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/>...));</highlight></codeline>
<codeline lineno="107"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_byte_array_8c_1aeaa5d627e335dd6464668588ad9b0e21" kindref="member" tooltip="createNewByteArrayUsingDataCopy">initNewByteArrayFromData</ref>(<ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>uint8_t<sp/>*<sp/>data,</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>size,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(*onErrorReceived)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref><sp/>error,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/>...));</highlight></codeline>
<codeline lineno="117"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_byte_array_8c_1afe08120f71b0234fb818b46311681573" kindref="member" tooltip="initNewByteArrayUsingDataCopy">initNewByteArrayUsingDataCopy</ref>(<ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>uint8_t<sp/>*<sp/>data,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>size,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">(*onErrorReceived)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref><sp/>error,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,<sp/>...));</highlight></codeline>
<codeline lineno="127"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_byte_array_8c_1a2811955249437e6f4f47a4fe3b706b2e" kindref="member" tooltip="initializes ByteArray Subsection Reference">initializeByteArraySubsectionReference</ref>(<ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/>refByteArray,<sp/>uint32_t<sp/>offset,<sp/>uint32_t<sp/>length);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"></highlight></codeline>
<codeline lineno="134"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_byte_array_8c_1a38e852a1c627acf4baa1159e1086927e" kindref="member" tooltip="destorys byte array">destroyByteArray</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight><highlight class="comment">/*destroyByteArray<sp/>was<sp/>renamed<sp/>to<sp/>destroyByteArray<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_byte_array_8c_1a3be6046f319ef59baf73dc0dfadd321d" kindref="member" tooltip="release Byte Array SharedData Reference">releaseByteArraySharedDataReference</ref>(<ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal">uint16_t<sp/><ref refid="_byte_array_8c_1a49e0dcce3198b633d8f78dd56aa96597" kindref="member" tooltip="read an int 16 As little Endian from ByteArray">readInt16AsLittleEndianFromByteArray</ref>(<ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>offset);</highlight></codeline>
<codeline lineno="156"><highlight class="normal">uint32_t<sp/><ref refid="_byte_array_8c_1a6fe303a6a14235d60ef9024a1463d630" kindref="member" tooltip="read an int 32 As little Endian from ByteArray">readInt32AsLittleEndianFromByteArray</ref>(<ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>offset);</highlight></codeline>
<codeline lineno="164"><highlight class="normal">uint64_t<sp/><ref refid="_byte_array_8c_1a670796ed60ca7c23ac314f0aab3c68c7" kindref="member" tooltip="read an int 64 As little Endian from ByteArray">readInt64AsLittleEndianFromByteArray</ref>(<ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>offset);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><ref refid="_constants_8h_1af5e6c1e42f1dbe27251f73c8b89d2504" kindref="member">Compare</ref><sp/><ref refid="_byte_array_8c_1a3e7114658aecd39f12bbe167dfe83aea" kindref="member" tooltip="initByteArrayOfSize">compareByteArrays</ref>(<ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/>second);</highlight></codeline>
<codeline lineno="178"><highlight class="normal"><ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/><ref refid="_byte_array_8h_1a5f9cbb44e21cee66a7d6c1d9e91662d0" kindref="member" tooltip="Copies a ByteArray.">copyByteArray</ref>(<ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">);<sp/></highlight><highlight class="comment">/*TODO<sp/>refactor<sp/>and<sp/>rename<sp/>to<sp/>better<sp/>name<sp/>*/</highlight></codeline>
<codeline lineno="185"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_byte_array_8c_1a7c9e6ea6d3022a2e858e91e207be9ec2" kindref="member" tooltip="copy a ByteArray To another ByteArray">copyByteArrayToByteArray</ref>(<ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>uint32_t<sp/>writeOffset,</highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/>source);</highlight></codeline>
<codeline lineno="195"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_byte_array_8h_1ad0a1c8808facdb6dbb717edb8da0aa91" kindref="member" tooltip="Copies a section of another byte array to this byte array.">copySubsectionOfByteArrayToByteArray</ref>(<ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>writeOffset,<sp/><ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/>source,<sp/>uint32_t<sp/>readOffset,</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>length);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"><ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/><ref refid="_byte_array_8h_1a747ffce05b12489648adaf26fc882f5a" kindref="member" tooltip="Copies a subsection of a ByteArray.">createNewByteArrayFromSubsection</ref>(<ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>offset,<sp/>uint32_t<sp/>length);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/><ref refid="_byte_array_8c_1aefe112436e17fc5a1c56d263596a612b" kindref="member" tooltip="gets ByteArray Subsection Reference">getByteArraySubsectionReference</ref>(<ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>offset,<sp/>uint32_t<sp/>length);</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight></codeline>
<codeline lineno="224"><highlight class="normal">uint8_t<sp/><ref refid="_byte_array_8c_1ac37879c5183d813699af84e23e8137ee" kindref="member" tooltip="gets Byte from ByteArray">getByteFromByteArray</ref>(<ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>uint32_t<sp/>index);</highlight></codeline>
<codeline lineno="230"><highlight class="normal">uint8_t<sp/>*<sp/><ref refid="_byte_array_8c_1aceedce9c30c691b211185ee9b454aae4" kindref="member" tooltip="Get a pointer to the underlying data starting at self-&amp;gt;offset.">getByteArrayData</ref>(<ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="236"><highlight class="normal">uint8_t<sp/><ref refid="_byte_array_8h_1a2a4210928f199642b8473f2de28ac0ca" kindref="member" tooltip="Get the last byte from the ByteArray object. A byte will be returned from self-&amp;gt;offset+self-&amp;gt;length i...">getLastByteFromByteArray</ref>(<ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="242"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_byte_array_8c_1a67c61be339ec259b4629e4b65d7ae510" kindref="member" tooltip="Checks if the byte array is null or not.">isNullByteArray</ref>(<ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="249"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_byte_array_8c_1aa97aa7ca8177b767d78d5f85a00a00c9" kindref="member" tooltip="sets Byte In ByteArray">setByteInByteArray</ref>(<ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>uint32_t<sp/>index,<sp/>uint8_t<sp/>byte);</highlight></codeline>
<codeline lineno="257"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_byte_array_8c_1a7ad896bb3a3311b92c4c772b24280b0d" kindref="member" tooltip="Copies a length of bytes into the array. This will be set at self-&amp;gt;offset+index in the underlying dat...">setBytesInByteArray</ref>(<ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>uint32_t<sp/>index,<sp/>uint8_t<sp/>*<sp/>bytes,</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>length);</highlight></codeline>
<codeline lineno="265"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_byte_array_8c_1aef95198f4933d68abf41255b67107b28" kindref="member" tooltip="writes Integer_16 as Little-Endian Into ByteArray">writeInt16AsLittleEndianIntoByteArray</ref>(<ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>offset,<sp/>uint16_t<sp/>integer);</highlight></codeline>
<codeline lineno="273"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_byte_array_8c_1ab7e0f883b2d3ff4d4b253f4257f6916a" kindref="member" tooltip="writes Integer_32 as Little-Endian Into ByteArray">writeInt32AsLittleEndianIntoByteArray</ref>(<ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>offset,<sp/>uint32_t<sp/>integer);</highlight></codeline>
<codeline lineno="281"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_byte_array_8c_1a7bed1ea7fa0945a98bc4548d72236446" kindref="member" tooltip="writes Integer_64 as Little-Endian Into ByteArray">writeInt64AsLittleEndianIntoByteArray</ref>(<ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>offset,<sp/>uint64_t<sp/>integer);</highlight></codeline>
<codeline lineno="287"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_byte_array_8c_1a77965afc28ae0c5d447a5cc60f487f37" kindref="member" tooltip="Reverses the bytes.">reverseBytes</ref>(<ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="295"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_byte_array_8c_1ad155de39b7e47d41778c0ec219aff1e6" kindref="member" tooltip="changes ByteArray Data&amp;#39;s Reference">changeByteArrayDataReference</ref>(<ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/>ref,</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>offset);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>BYTEARRAY_H_<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/ByteArray.h"/>
  </compounddef>
</doxygen>
