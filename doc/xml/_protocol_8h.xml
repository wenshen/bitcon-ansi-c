<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="_protocol_8h" kind="file">
    <compoundname>Protocol.h</compoundname>
    <includedby refid="_protocol_8c" local="yes">src/Object/NetworkProtocol/Protocol.c</includedby>
    <invincdepgraph>
      <node id="1047">
        <label>src/Object/NetworkProtocol/Protocol.c</label>
        <link refid="_protocol_8c"/>
      </node>
      <node id="1046">
        <label>src/Object/NetworkProtocol/Protocol.h</label>
        <link refid="Protocol.h"/>
        <childnode refid="1047" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_irc_addr" prot="public">IrcAddr</innerclass>
    <innerclass refid="struct_net_addr" prot="public">NetAddr</innerclass>
    <innerclass refid="struct_cmd_header" prot="public">CmdHeader</innerclass>
    <innerclass refid="struct_cmd_header_check_sum" prot="public">CmdHeaderCheckSum</innerclass>
    <innerclass refid="struct_cmd_version" prot="public">CmdVersion</innerclass>
    <innerclass refid="struct_block_header" prot="public">BlockHeader</innerclass>
    <innerclass refid="struct_cmd_addr" prot="public">CmdAddr</innerclass>
    <innerclass refid="struct_inventory_vector" prot="public">InventoryVector</innerclass>
    <innerclass refid="struct_cmd_inv" prot="public">CmdInv</innerclass>
    <innerclass refid="struct_block_spck" prot="public">BlockSpck</innerclass>
    <innerclass refid="struct_header_spck" prot="public">HeaderSpck</innerclass>
    <innerclass refid="struct_outpoint" prot="public">Outpoint</innerclass>
    <innerclass refid="struct_tranx_in" prot="public">TranxIn</innerclass>
    <innerclass refid="struct_tranx_out" prot="public">TranxOut</innerclass>
    <innerclass refid="struct_cmd_tranx" prot="public">CmdTranx</innerclass>
    <innerclass refid="struct_cmd_block" prot="public">CmdBlock</innerclass>
    <innerclass refid="struct_headers" prot="public">Headers</innerclass>
    <briefdescription>
<para>This class is responsible for the Protocol functionality described in the Bitcoin. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment">*<sp/><sp/>Protocol.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment">*</highlight></codeline>
<codeline lineno="4"><highlight class="comment">*<sp/><sp/>Created<sp/>on:<sp/>23/10/2012.</highlight></codeline>
<codeline lineno="5"><highlight class="comment">*<sp/><sp/>Created<sp/>by:<sp/>Prajowal<sp/>Manandhar</highlight></codeline>
<codeline lineno="6"><highlight class="comment">*<sp/><sp/>Modified<sp/>by:</highlight></codeline>
<codeline lineno="7"><highlight class="comment">*<sp/><sp/>Copyright<sp/>(c)<sp/>2012<sp/>Bitcoin<sp/>Project<sp/>Team</highlight></codeline>
<codeline lineno="8"><highlight class="comment">*/</highlight></codeline>
<codeline lineno="14"><highlight class="preprocessor">#ifndef<sp/>PROTOCOL_H_</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>PROTOCOL_H_</highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(push,<sp/>1)</highlight></codeline>
<codeline lineno="20" refid="struct_irc_addr" refkind="compound"><highlight class="preprocessor"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_irc_addr" kindref="compound">IrcAddr</ref></highlight></codeline>
<codeline lineno="21"><highlight class="normal">{</highlight></codeline>
<codeline lineno="22" refid="struct_irc_addr_1addd335afdb9230f431842ebb6cbbce62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_irc_addr_1addd335afdb9230f431842ebb6cbbce62" kindref="member">ip</ref>;</highlight></codeline>
<codeline lineno="23" refid="struct_irc_addr_1aee6a7f5f7c1e964cbd84deec9c53ba15" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><ref refid="struct_irc_addr_1aee6a7f5f7c1e964cbd84deec9c53ba15" kindref="member">port</ref>;</highlight></codeline>
<codeline lineno="24"><highlight class="normal">};</highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(pop)</highlight></codeline>
<codeline lineno="26"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(push,<sp/>1)</highlight></codeline>
<codeline lineno="29" refid="struct_net_addr" refkind="compound"><highlight class="preprocessor"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_net_addr" kindref="compound">NetAddr</ref></highlight></codeline>
<codeline lineno="30"><highlight class="normal">{</highlight></codeline>
<codeline lineno="31" refid="struct_net_addr_1a83e57ce9bd59cfa0995c2e2c8589c274" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_net_addr_1a83e57ce9bd59cfa0995c2e2c8589c274" kindref="member">time</ref>;</highlight></codeline>
<codeline lineno="32" refid="struct_net_addr_1a7c2c2697560cb0d08fdca3bd4d10d07e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_net_addr_1a7c2c2697560cb0d08fdca3bd4d10d07e" kindref="member">services</ref>;</highlight></codeline>
<codeline lineno="33" refid="struct_net_addr_1a9799580e054ff5683ffbeb32502f7475" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_net_addr_1a9799580e054ff5683ffbeb32502f7475" kindref="member">ip</ref>[16];<sp/></highlight><highlight class="comment">/*<sp/>IPv4/6<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="struct_net_addr_1ab85ff85aa1f60f4a1c1ca1225a9dad06" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">short</highlight><highlight class="normal"><sp/><ref refid="struct_net_addr_1ab85ff85aa1f60f4a1c1ca1225a9dad06" kindref="member">port</ref>;</highlight></codeline>
<codeline lineno="35"><highlight class="normal">};</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(pop)</highlight></codeline>
<codeline lineno="37"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(push,<sp/>1)</highlight></codeline>
<codeline lineno="41" refid="struct_cmd_header" refkind="compound"><highlight class="preprocessor"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_cmd_header" kindref="compound">CmdHeader</ref><sp/>{</highlight></codeline>
<codeline lineno="42" refid="struct_cmd_header_1a7154179fe070a40c828f7c03f454d4d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_header_1a7154179fe070a40c828f7c03f454d4d6" kindref="member">magic</ref>;</highlight></codeline>
<codeline lineno="43" refid="struct_cmd_header_1a5b9e40150e73a908b8815ab282e5a4d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_header_1a5b9e40150e73a908b8815ab282e5a4d3" kindref="member">command</ref>[12];</highlight></codeline>
<codeline lineno="44" refid="struct_cmd_header_1ac8d42bcd4a44e078047ccd7291059238" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_header_1ac8d42bcd4a44e078047ccd7291059238" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="45" refid="struct_cmd_header_1ac1222a6e99fed2d4b20d0713ebf83f34" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_header_1ac1222a6e99fed2d4b20d0713ebf83f34" kindref="member">CheckSum</ref>[4];</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(pop)</highlight></codeline>
<codeline lineno="48"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(push,<sp/>1)</highlight></codeline>
<codeline lineno="50" refid="struct_cmd_header_check_sum" refkind="compound"><highlight class="preprocessor"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_cmd_header_check_sum" kindref="compound">CmdHeaderCheckSum</ref><sp/>{</highlight></codeline>
<codeline lineno="51" refid="struct_cmd_header_check_sum_1a7154179fe070a40c828f7c03f454d4d6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_header_check_sum_1a7154179fe070a40c828f7c03f454d4d6" kindref="member">magic</ref>;</highlight></codeline>
<codeline lineno="52" refid="struct_cmd_header_check_sum_1a5b9e40150e73a908b8815ab282e5a4d3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_header_check_sum_1a5b9e40150e73a908b8815ab282e5a4d3" kindref="member">command</ref>[12];</highlight></codeline>
<codeline lineno="53" refid="struct_cmd_header_check_sum_1ac8d42bcd4a44e078047ccd7291059238" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_header_check_sum_1ac8d42bcd4a44e078047ccd7291059238" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(pop)</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment">/*4<sp/><sp/><sp/><sp/><sp/>version<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>int32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Identifies<sp/>protocol<sp/>version<sp/>being<sp/>used<sp/>by<sp/>the<sp/>node</highlight></codeline>
<codeline lineno="58"><highlight class="comment">8<sp/><sp/><sp/><sp/><sp/><sp/><sp/>services<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint64_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bitfield<sp/>of<sp/>features<sp/>to<sp/>be<sp/>enabled<sp/>for<sp/>this<sp/>connection</highlight></codeline>
<codeline lineno="59"><highlight class="comment">8<sp/><sp/><sp/><sp/><sp/><sp/><sp/>timestamp<sp/><sp/><sp/><sp/><sp/><sp/><sp/>int64_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>standard<sp/>UNIX<sp/>timestamp<sp/>in<sp/>seconds</highlight></codeline>
<codeline lineno="60"><highlight class="comment">26<sp/><sp/><sp/><sp/><sp/><sp/>addrRecv<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NetAddr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>network<sp/>address<sp/>of<sp/>the<sp/>node<sp/>receiving<sp/>this<sp/>message</highlight></codeline>
<codeline lineno="61"><highlight class="comment">version<sp/>&gt;=<sp/>106</highlight></codeline>
<codeline lineno="62"><highlight class="comment">26<sp/><sp/><sp/><sp/><sp/><sp/>addrFrom<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>NetAddr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>network<sp/>address<sp/>of<sp/>the<sp/>node<sp/>emitting<sp/>this<sp/>message</highlight></codeline>
<codeline lineno="63"><highlight class="comment">8<sp/><sp/><sp/><sp/><sp/><sp/><sp/>nonce<sp/><sp/><sp/>uint64_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Node<sp/>random<sp/>nonce,<sp/>randomly<sp/>generated<sp/>every<sp/>time<sp/>a<sp/>version<sp/>packet<sp/>is<sp/>sent.<sp/>This<sp/>nonce<sp/>is<sp/>used<sp/>to<sp/>detect<sp/>connections<sp/>to<sp/>self.</highlight></codeline>
<codeline lineno="64"><highlight class="comment">?<sp/><sp/><sp/><sp/><sp/><sp/><sp/>sub_version_num<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var_str<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>Secondary<sp/>Version<sp/>information<sp/>(0x00<sp/>if<sp/>string<sp/>is<sp/>0<sp/>bytes<sp/>long)</highlight></codeline>
<codeline lineno="65"><highlight class="comment">version<sp/>&gt;=<sp/>209</highlight></codeline>
<codeline lineno="66"><highlight class="comment">4<sp/><sp/><sp/><sp/><sp/><sp/><sp/>start_height<sp/><sp/><sp/><sp/>int32_t<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>The<sp/>last<sp/>block<sp/>received<sp/>by<sp/>the<sp/>emitting<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(push,<sp/>1)</highlight></codeline>
<codeline lineno="68"><highlight class="preprocessor"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_cmd_version" kindref="compound">CmdVersion</ref></highlight></codeline>
<codeline lineno="69"><highlight class="normal">{</highlight></codeline>
<codeline lineno="70" refid="struct_cmd_version_1a5408ac5df4c170828874e1b10b4c35a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_version_1a5408ac5df4c170828874e1b10b4c35a0" kindref="member">version</ref>;</highlight></codeline>
<codeline lineno="71" refid="struct_cmd_version_1a7c2c2697560cb0d08fdca3bd4d10d07e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_version_1a7c2c2697560cb0d08fdca3bd4d10d07e" kindref="member">services</ref>;</highlight></codeline>
<codeline lineno="72" refid="struct_cmd_version_1ac402a8520447a72d85baad30fb7d66af" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_version_1ac402a8520447a72d85baad30fb7d66af" kindref="member">timestamp</ref>;</highlight></codeline>
<codeline lineno="73" refid="struct_cmd_version_1a252b04dc9767f81b38eccddcd72e74ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_net_addr" kindref="compound">NetAddr</ref><sp/><ref refid="struct_cmd_version_1a1c343f8763f536140c776a99d43ecde3" kindref="member">addrRecv</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="struct_cmd_version_1acbbb94e30bbe4e7c99be8e4c61f1e79c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_net_addr" kindref="compound">NetAddr</ref><sp/><ref refid="struct_cmd_version_1a459e4f223be92dc8d26e577d85ba4334" kindref="member">addrFrom</ref>;</highlight></codeline>
<codeline lineno="77" refid="struct_cmd_version_1ab0c4e6e9b4c0db0818ba6121afe137a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_version_1ab0c4e6e9b4c0db0818ba6121afe137a9" kindref="member">nonce</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal">};</highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(pop)</highlight></codeline>
<codeline lineno="81"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(push,<sp/>1)</highlight></codeline>
<codeline lineno="85" refid="struct_block_header" refkind="compound"><highlight class="preprocessor"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_block_header" kindref="compound">BlockHeader</ref></highlight></codeline>
<codeline lineno="86"><highlight class="normal">{</highlight></codeline>
<codeline lineno="87" refid="struct_block_header_1a5408ac5df4c170828874e1b10b4c35a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_block_header_1a5408ac5df4c170828874e1b10b4c35a0" kindref="member">version</ref>;</highlight></codeline>
<codeline lineno="88" refid="struct_block_header_1a099897f937ebe9e9634c5098e38c7cab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_block_header_1a099897f937ebe9e9634c5098e38c7cab" kindref="member">prevBlock</ref>[32];</highlight></codeline>
<codeline lineno="89" refid="struct_block_header_1ad4048a3c215cbfcdc127ada8e0fa5445" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_block_header_1ad4048a3c215cbfcdc127ada8e0fa5445" kindref="member">timestamp</ref>;</highlight></codeline>
<codeline lineno="90" refid="struct_block_header_1aa6da25dae1e7263af226d4b026811d7f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_block_header_1aa6da25dae1e7263af226d4b026811d7f" kindref="member">bits</ref>;</highlight></codeline>
<codeline lineno="91" refid="struct_block_header_1ad73ee4141a6536b03f4e493b56859e86" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_block_header_1ad73ee4141a6536b03f4e493b56859e86" kindref="member">nonce</ref>;</highlight></codeline>
<codeline lineno="92" refid="struct_block_header_1a343e4b09bfd545fad5745f6c48f15b69" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_block_header_1a343e4b09bfd545fad5745f6c48f15b69" kindref="member">transxCount</ref>;</highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(pop)</highlight></codeline>
<codeline lineno="95"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(push,<sp/>1)</highlight></codeline>
<codeline lineno="98"><highlight class="preprocessor"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_cmd_addr" kindref="compound">CmdAddr</ref><sp/>{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Number<sp/>of<sp/>address<sp/>entries<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="struct_cmd_addr_1a16ff2d8e15ade4948398b0aeb80124a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_addr_1a16ff2d8e15ade4948398b0aeb80124a8" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Divided<sp/>addr_list<sp/>to<sp/>two<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Corresponding<sp/>Timestamp<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="struct_cmd_addr_1af8bd06c27cd9c81c75e60853080e7e7e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*<ref refid="struct_cmd_addr_1af8bd06c27cd9c81c75e60853080e7e7e" kindref="member">tslist</ref>;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Network<sp/>addr<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="struct_cmd_addr_1a65d94e910a546e06b09f1daa9978e52c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_net_addr" kindref="compound">NetAddr</ref><sp/>*<ref refid="struct_cmd_addr_1a65d94e910a546e06b09f1daa9978e52c" kindref="member">naddrlist</ref>;</highlight></codeline>
<codeline lineno="107"><highlight class="normal">};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(pop)</highlight></codeline>
<codeline lineno="109"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(push,<sp/>1)</highlight></codeline>
<codeline lineno="112"><highlight class="preprocessor"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_inventory_vector" kindref="compound" tooltip="Structure for InventoryVector objects.">InventoryVector</ref><sp/>{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*0<sp/>for<sp/>ERROR,<sp/>1<sp/>for<sp/>MSG_TX<sp/>and<sp/>2<sp/>for<sp/>MSG_BLOCK<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114" refid="struct_inventory_vector_1a4bfea42429249a1f65204f0c0f34704a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_inventory_vector_1a4bfea42429249a1f65204f0c0f34704a" kindref="member">type</ref>;</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_inventory_vector_1a5309b3103b4345688327148e3c589014" kindref="member">hash</ref>[32];</highlight></codeline>
<codeline lineno="116"><highlight class="normal">};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(pop)</highlight></codeline>
<codeline lineno="118"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(push,<sp/>1)</highlight></codeline>
<codeline lineno="120"><highlight class="preprocessor"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_cmd_inv" kindref="compound">CmdInv</ref><sp/>{</highlight></codeline>
<codeline lineno="121" refid="struct_cmd_inv_1a16ff2d8e15ade4948398b0aeb80124a8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_inv_1a16ff2d8e15ade4948398b0aeb80124a8" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="122" refid="struct_cmd_inv_1ab98754c1df21fac25844fc908ecefe29" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_inventory_vector" kindref="compound" tooltip="Structure for InventoryVector objects.">InventoryVector</ref><sp/>*<ref refid="struct_cmd_inv_1ab98754c1df21fac25844fc908ecefe29" kindref="member">InventoryVectors</ref>;</highlight></codeline>
<codeline lineno="123"><highlight class="normal">};</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(pop)</highlight></codeline>
<codeline lineno="125"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(push,<sp/>1)</highlight></codeline>
<codeline lineno="127" refid="struct_block_spck" refkind="compound"><highlight class="preprocessor"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_block_spck" kindref="compound">BlockSpck</ref><sp/>{</highlight></codeline>
<codeline lineno="128" refid="struct_block_spck_1a5408ac5df4c170828874e1b10b4c35a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_block_spck_1a5408ac5df4c170828874e1b10b4c35a0" kindref="member">version</ref>;</highlight></codeline>
<codeline lineno="129" refid="struct_block_spck_1a8063bd9a895b61caa30d0ca876a6e300" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_block_spck_1a8063bd9a895b61caa30d0ca876a6e300" kindref="member">startCount</ref>;</highlight></codeline>
<codeline lineno="130" refid="struct_block_spck_1a95789ecf55183a47b1668d549ba4a927" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_block_spck_1a95789ecf55183a47b1668d549ba4a927" kindref="member">blockLocatorHashes</ref>[32];</highlight></codeline>
<codeline lineno="131" refid="struct_block_spck_1aa16ea670ce42c626f461fc49f74ddcd3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_block_spck_1aa16ea670ce42c626f461fc49f74ddcd3" kindref="member">hashStop</ref>[32];</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal">};</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(pop)</highlight></codeline>
<codeline lineno="135"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(push,<sp/>1)</highlight></codeline>
<codeline lineno="137" refid="struct_header_spck" refkind="compound"><highlight class="preprocessor"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_header_spck" kindref="compound">HeaderSpck</ref><sp/>{</highlight></codeline>
<codeline lineno="138" refid="struct_header_spck_1a9d86e57aaa1003de664fdbe3fe6bc35a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_header_spck_1a9d86e57aaa1003de664fdbe3fe6bc35a" kindref="member">startCount</ref>;</highlight></codeline>
<codeline lineno="139" refid="struct_header_spck_1afb278e99e58307608e33751cd490c97b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_header_spck_1afb278e99e58307608e33751cd490c97b" kindref="member">hashStart</ref>[32];</highlight></codeline>
<codeline lineno="140" refid="struct_header_spck_1aa16ea670ce42c626f461fc49f74ddcd3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_header_spck_1aa16ea670ce42c626f461fc49f74ddcd3" kindref="member">hashStop</ref>[32];</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal">};</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(pop)</highlight></codeline>
<codeline lineno="144"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(push,<sp/>1)</highlight></codeline>
<codeline lineno="146"><highlight class="preprocessor"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_outpoint" kindref="compound">Outpoint</ref><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_outpoint_1a49e83595c89cca1c8cd37b9af318a908" kindref="member">hash</ref>[32];</highlight></codeline>
<codeline lineno="148" refid="struct_outpoint_1a589d64202487f78e3cc30dd2e04c5201" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_outpoint_1a589d64202487f78e3cc30dd2e04c5201" kindref="member">index</ref>;</highlight></codeline>
<codeline lineno="149"><highlight class="normal">};</highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(pop)</highlight></codeline>
<codeline lineno="151"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(push,<sp/>1)</highlight></codeline>
<codeline lineno="153"><highlight class="preprocessor"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_tranx_in" kindref="compound">TranxIn</ref><sp/>{</highlight></codeline>
<codeline lineno="154" refid="struct_tranx_in_1a2889e84785c9df5cba88abaaa03eb206" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_outpoint" kindref="compound">Outpoint</ref><sp/><ref refid="struct_tranx_in_1a2889e84785c9df5cba88abaaa03eb206" kindref="member">previousOut</ref>;</highlight></codeline>
<codeline lineno="155" refid="struct_tranx_in_1a00601157399e1c73bddee66c716926f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_tranx_in_1a00601157399e1c73bddee66c716926f4" kindref="member">scriptLength</ref>;</highlight></codeline>
<codeline lineno="156" refid="struct_tranx_in_1a3d518a810ef5d47feb63829a61ced9e1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="struct_tranx_in_1a3d518a810ef5d47feb63829a61ced9e1" kindref="member">signatureScript</ref>;</highlight></codeline>
<codeline lineno="157" refid="struct_tranx_in_1a18ec6560d3738f9c1bc8ed50f2e570c1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_tranx_in_1a18ec6560d3738f9c1bc8ed50f2e570c1" kindref="member">sequence</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">};</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(pop)</highlight></codeline>
<codeline lineno="160"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(push,<sp/>1)</highlight></codeline>
<codeline lineno="163"><highlight class="preprocessor"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_tranx_out" kindref="compound">TranxOut</ref><sp/>{</highlight></codeline>
<codeline lineno="164" refid="struct_tranx_out_1a2a5a27690c40c531d0a8385dc4f66a95" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_tranx_out_1a2a5a27690c40c531d0a8385dc4f66a95" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="165" refid="struct_tranx_out_1a12d43c2eb75d61a2698e5c78f2f6122c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_tranx_out_1a12d43c2eb75d61a2698e5c78f2f6122c" kindref="member">pkScriptLength</ref>;</highlight></codeline>
<codeline lineno="166" refid="struct_tranx_out_1a1065be8e3e985afe6b60c410ca157d61" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="struct_tranx_out_1a1065be8e3e985afe6b60c410ca157d61" kindref="member">pkScript</ref>;</highlight></codeline>
<codeline lineno="167"><highlight class="normal">};</highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(pop)</highlight></codeline>
<codeline lineno="169"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(push,<sp/>1)</highlight></codeline>
<codeline lineno="172"><highlight class="preprocessor"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_cmd_tranx" kindref="compound">CmdTranx</ref><sp/>{</highlight></codeline>
<codeline lineno="173" refid="struct_cmd_tranx_1a5408ac5df4c170828874e1b10b4c35a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_tranx_1a5408ac5df4c170828874e1b10b4c35a0" kindref="member">version</ref>;</highlight></codeline>
<codeline lineno="174" refid="struct_cmd_tranx_1aee4a92ad1604309b8526009831b57c58" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_tranx_1aee4a92ad1604309b8526009831b57c58" kindref="member">tranxInCount</ref>;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_tranx_in" kindref="compound">TranxIn</ref><sp/>*<ref refid="struct_cmd_tranx_1a5b66f083197ffa9abe32484db40fcd39" kindref="member">TranxInput</ref>;</highlight></codeline>
<codeline lineno="176" refid="struct_cmd_tranx_1a6508946c345b4ea761a9d66c38a5fe7a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_tranx_1a6508946c345b4ea761a9d66c38a5fe7a" kindref="member">tranxOutCount</ref>;</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_tranx_out" kindref="compound">TranxOut</ref><sp/>*<ref refid="struct_cmd_tranx_1afd763f710fae1f1cefe4c6260c1a5568" kindref="member">TranxOutput</ref>;</highlight></codeline>
<codeline lineno="178" refid="struct_cmd_tranx_1ace6436ac55ff63b037da554bf1ddfc32" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_tranx_1ace6436ac55ff63b037da554bf1ddfc32" kindref="member">lockTime</ref>;</highlight></codeline>
<codeline lineno="179"><highlight class="normal">};</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(pop)</highlight></codeline>
<codeline lineno="181"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(push,<sp/>1)</highlight></codeline>
<codeline lineno="183" refid="struct_cmd_block" refkind="compound"><highlight class="preprocessor"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_cmd_block" kindref="compound">CmdBlock</ref><sp/>{</highlight></codeline>
<codeline lineno="184" refid="struct_cmd_block_1a5408ac5df4c170828874e1b10b4c35a0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_block_1a5408ac5df4c170828874e1b10b4c35a0" kindref="member">version</ref>;</highlight></codeline>
<codeline lineno="185" refid="struct_cmd_block_1a099897f937ebe9e9634c5098e38c7cab" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_block_1a099897f937ebe9e9634c5098e38c7cab" kindref="member">prevBlock</ref>[32];</highlight></codeline>
<codeline lineno="186" refid="struct_cmd_block_1ad4048a3c215cbfcdc127ada8e0fa5445" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_block_1ad4048a3c215cbfcdc127ada8e0fa5445" kindref="member">timestamp</ref>;</highlight></codeline>
<codeline lineno="187" refid="struct_cmd_block_1aa6da25dae1e7263af226d4b026811d7f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_block_1aa6da25dae1e7263af226d4b026811d7f" kindref="member">bits</ref>;</highlight></codeline>
<codeline lineno="188" refid="struct_cmd_block_1ad73ee4141a6536b03f4e493b56859e86" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_block_1ad73ee4141a6536b03f4e493b56859e86" kindref="member">nonce</ref>;</highlight></codeline>
<codeline lineno="189" refid="struct_cmd_block_1a74334da90ccc4ebde303deecbe77f9dd" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_cmd_block_1a74334da90ccc4ebde303deecbe77f9dd" kindref="member">transxCount</ref>;</highlight></codeline>
<codeline lineno="190" refid="struct_cmd_block_1a50142212678034606e6aa3304ea06fb7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_cmd_tranx" kindref="compound">CmdTranx</ref><sp/>*<ref refid="struct_cmd_block_1a50142212678034606e6aa3304ea06fb7" kindref="member">txns</ref>;</highlight></codeline>
<codeline lineno="191"><highlight class="normal">};</highlight></codeline>
<codeline lineno="192"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(pop)</highlight></codeline>
<codeline lineno="193"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(push,<sp/>1)</highlight></codeline>
<codeline lineno="195" refid="struct_headers" refkind="compound"><highlight class="preprocessor"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_headers" kindref="compound">Headers</ref><sp/>{</highlight></codeline>
<codeline lineno="196" refid="struct_headers_1aabbb2f7768ed83b49f05e7911e3a693a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="struct_headers_1aabbb2f7768ed83b49f05e7911e3a693a" kindref="member">count</ref>;</highlight></codeline>
<codeline lineno="197" refid="struct_headers_1a0b894950328debae0613f43ca1f0dc64" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="struct_block_header" kindref="compound">BlockHeader</ref><sp/>*<ref refid="struct_headers_1a0b894950328debae0613f43ca1f0dc64" kindref="member">headers</ref>;</highlight></codeline>
<codeline lineno="198"><highlight class="normal">};</highlight></codeline>
<codeline lineno="199"><highlight class="normal"></highlight><highlight class="preprocessor">#pragma<sp/>pack(pop)</highlight></codeline>
<codeline lineno="200"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>PROTOCOL_H_<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/NetworkProtocol/Protocol.h"/>
  </compounddef>
</doxygen>
