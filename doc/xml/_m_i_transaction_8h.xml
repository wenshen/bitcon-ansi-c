<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="_m_i_transaction_8h" kind="file">
    <compoundname>Transaction.h</compoundname>
    <includes refid="_m_i_message_8h" local="yes">Message.h</includes>
    <includes refid="_m_i_transaction_input_8h" local="yes">TransactionInput.h</includes>
    <includes refid="_m_i_transaction_output_8h" local="yes">TransactionOutput.h</includes>
    <includes local="yes">../../Utils/Cryptography/Crypt.h</includes>
    <includedby refid="_m_i_block_8h" local="yes">Object/Message/Block.h</includedby>
    <includedby refid="_m_i_block_8c" local="yes">Object/Message/Block.c</includedby>
    <includedby refid="_m_i_transaction_8c" local="yes">Object/Message/Transaction.c</includedby>
    <incdepgraph>
      <node id="412">
        <label>../../Utils/VariableLengthInteger/VarLenInt.h</label>
      </node>
      <node id="415">
        <label>TransactionOutput.h</label>
        <link refid="_m_i_transaction_output_8h"/>
        <childnode refid="406" relation="include">
        </childnode>
        <childnode refid="414" relation="include">
        </childnode>
      </node>
      <node id="411">
        <label>../Object.h</label>
      </node>
      <node id="414">
        <label>../Script.h</label>
      </node>
      <node id="408">
        <label>stdint.h</label>
      </node>
      <node id="407">
        <label>stdlib.h</label>
      </node>
      <node id="405">
        <label>Object/Message/Transaction.h</label>
        <link refid="Transaction.h"/>
        <childnode refid="406" relation="include">
        </childnode>
        <childnode refid="413" relation="include">
        </childnode>
        <childnode refid="415" relation="include">
        </childnode>
        <childnode refid="416" relation="include">
        </childnode>
      </node>
      <node id="413">
        <label>TransactionInput.h</label>
        <link refid="_m_i_transaction_input_8h"/>
        <childnode refid="406" relation="include">
        </childnode>
        <childnode refid="414" relation="include">
        </childnode>
        <childnode refid="415" relation="include">
        </childnode>
      </node>
      <node id="409">
        <label>../../Constants.h</label>
      </node>
      <node id="410">
        <label>../ByteArray.h</label>
      </node>
      <node id="406">
        <label>Message.h</label>
        <link refid="_m_i_message_8h"/>
        <childnode refid="407" relation="include">
        </childnode>
        <childnode refid="408" relation="include">
        </childnode>
        <childnode refid="409" relation="include">
        </childnode>
        <childnode refid="410" relation="include">
        </childnode>
        <childnode refid="411" relation="include">
        </childnode>
        <childnode refid="412" relation="include">
        </childnode>
      </node>
      <node id="416">
        <label>../../Utils/Cryptography/Crypt.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="419">
        <label>Object/Message/Block.c</label>
        <link refid="_m_i_block_8c"/>
      </node>
      <node id="418">
        <label>Object/Message/Block.h</label>
        <link refid="_m_i_block_8h"/>
        <childnode refid="419" relation="include">
        </childnode>
      </node>
      <node id="420">
        <label>Object/Message/Transaction.c</label>
        <link refid="_m_i_transaction_8c"/>
      </node>
      <node id="417">
        <label>Object/Message/Transaction.h</label>
        <link refid="Transaction.h"/>
        <childnode refid="418" relation="include">
        </childnode>
        <childnode refid="419" relation="include">
        </childnode>
        <childnode refid="420" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_m_i_transaction" prot="public">Transaction</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="_m_i_transaction_8h_1ad9c9cac2e7fd054ceff9c4a0053ec494" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> *</type>
        <definition>Transaction* createNewTransaction</definition>
        <argsstring>(uint32_t lockTime, uint32_t version, void(*onErrorReceived)(Error error, char *,...))</argsstring>
        <name>createNewTransaction</name>
        <param>
          <type>uint32_t</type>
          <declname>lockTime</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>version</declname>
        </param>
        <param>
          <type>void(*)(<ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968" kindref="member">Error</ref> error, char *,...)</type>
          <declname>onErrorReceived</declname>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object with no inputs or outputs. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A new <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.h" line="34" bodyfile="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" bodystart="17" bodyend="39"/>
        <references refid="struct_m_i_object_1aa353725933e843001d4feb03f8268121" compoundref="_m_i_object_8h" startline="29">Object::destroy</references>
        <references refid="_m_i_transaction_8c_1a51cc2a726480d71b2b08a871bc4aa8f2" compoundref="_m_i_transaction_8c" startline="98" endline="113">destroyTransaction</references>
        <references refid="_m_i_object_8c_1a0f72e3416dc7f6c52cfb1bf49baac3f2" compoundref="_m_i_object_8c" startline="42" endline="47">getObject</references>
        <references refid="_m_i_transaction_8c_1a8b299a1ed7ad62d46f4d2547463b95fe" compoundref="_m_i_transaction_8c" startline="60" endline="78">initializeTransaction</references>
        <references refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968ad4cc7a4523a7fd575f8d7ae42d20087f" compoundref="_m_i_constants_8h" startline="52">_ERROR_OUT_OF_MEMORY</references>
      </memberdef>
      <memberdef kind="function" id="_m_i_transaction_8h_1ac64b350eebd0ac111556c9323025a5bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> *</type>
        <definition>Transaction* createNewTransactionFromByteArray</definition>
        <argsstring>(ByteArray *bytes, void(*onErrorReceived)(Error error, char *,...))</argsstring>
        <name>createNewTransactionFromByteArray</name>
        <param>
          <type><ref refid="struct_m_i_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>void(*)(<ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968" kindref="member">Error</ref> error, char *,...)</type>
          <declname>onErrorReceived</declname>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object from byte data. Should be serialised for object data. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A new <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.h" line="41" bodyfile="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" bodystart="41" bodyend="57"/>
        <references refid="_m_i_transaction_8c_1addbf01b7d3012da33c2124db978f3424" compoundref="_m_i_transaction_8c" startline="80" endline="95">initializeTransactionFromByteArray</references>
        <references refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968ad4cc7a4523a7fd575f8d7ae42d20087f" compoundref="_m_i_constants_8h" startline="52">_ERROR_OUT_OF_MEMORY</references>
        <referencedby refid="_m_i_block_8h_1a04d2d2defba76492762c0eb4b7ccd206" compoundref="_m_i_block_8c" startline="261" endline="324">deserializeWithTransactions</referencedby>
      </memberdef>
      <memberdef kind="function" id="_m_i_transaction_8h_1a8b299a1ed7ad62d46f4d2547463b95fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int initializeTransaction</definition>
        <argsstring>(Transaction *self, uint32_t lockTime, uint32_t version, void(*onErrorReceived)(Error error, char *,...))</argsstring>
        <name>initializeTransaction</name>
        <param>
          <type><ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>lockTime</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>version</declname>
        </param>
        <param>
          <type>void(*)(<ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968" kindref="member">Error</ref> error, char *,...)</type>
          <declname>onErrorReceived</declname>
        </param>
        <briefdescription>
<para>Initialises a <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object to initialise </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false on failure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.h" line="48" bodyfile="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" bodystart="60" bodyend="78"/>
        <references refid="_m_i_constants_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="_m_i_constants_8h" startline="65">FALSE</references>
        <references refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" compoundref="_m_i_message_8c" startline="78" endline="82">getMessage</references>
        <references refid="_m_i_constants_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="_m_i_constants_8h" startline="66">TRUE</references>
        <referencedby refid="_m_i_transaction_8h_1ad9c9cac2e7fd054ceff9c4a0053ec494" compoundref="_m_i_transaction_8c" startline="17" endline="39">createNewTransaction</referencedby>
      </memberdef>
      <memberdef kind="function" id="_m_i_transaction_8h_1addbf01b7d3012da33c2124db978f3424" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int initializeTransactionFromByteArray</definition>
        <argsstring>(Transaction *self, ByteArray *data, void(*onErrorReceived)(Error error, char *,...))</argsstring>
        <name>initializeTransactionFromByteArray</name>
        <param>
          <type><ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct_m_i_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>void(*)(<ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968" kindref="member">Error</ref> error, char *,...)</type>
          <declname>onErrorReceived</declname>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object from byte data. Should be serialised for object data. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A new <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.h" line="54" bodyfile="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" bodystart="80" bodyend="95"/>
        <references refid="_m_i_constants_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="_m_i_constants_8h" startline="65">FALSE</references>
        <references refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" compoundref="_m_i_message_8c" startline="78" endline="82">getMessage</references>
        <references refid="_m_i_constants_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="_m_i_constants_8h" startline="66">TRUE</references>
        <referencedby refid="_m_i_transaction_8h_1ac64b350eebd0ac111556c9323025a5bc" compoundref="_m_i_transaction_8c" startline="41" endline="57">createNewTransactionFromByteArray</referencedby>
      </memberdef>
      <memberdef kind="function" id="_m_i_transaction_8h_1aa5860a9ff5209146c9b028103977bb5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void destroyTransaction</definition>
        <argsstring>(void *self)</argsstring>
        <name>destroyTransaction</name>
        <param>
          <type>void *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Destructor; destroys a <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object to free. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.h" line="60" bodyfile="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" bodystart="98" bodyend="113"/>
        <references refid="_m_i_object_8c_1a0407d34294cdc667982ffa9bd6f18cc9" compoundref="_m_i_object_8c" startline="57" endline="71">decrementReferenceCount</references>
        <references refid="_m_i_message_8c_1a17557bbd8e2e7b7d0736c88df25a389e" compoundref="_m_i_message_8c" startline="90" endline="99">destroyMessage</references>
        <references refid="_m_i_object_8c_1a0f72e3416dc7f6c52cfb1bf49baac3f2" compoundref="_m_i_object_8c" startline="42" endline="47">getObject</references>
        <referencedby refid="_m_i_transaction_8h_1ad9c9cac2e7fd054ceff9c4a0053ec494" compoundref="_m_i_transaction_8c" startline="17" endline="39">createNewTransaction</referencedby>
      </memberdef>
      <memberdef kind="function" id="_m_i_transaction_8h_1a52cbd0dba13db4b7356b3b35621dd007" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> *</type>
        <definition>Transaction* getTransaction</definition>
        <argsstring>(void *self)</argsstring>
        <name>getTransaction</name>
        <param>
          <type>void *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Gets a <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> from another object. Use this to avoid casts. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object to obtain the <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> from. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.h" line="67" bodyfile="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" bodystart="116" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="_m_i_transaction_8h_1aadb6dd710e8c2832fb88ba7b5b0cf409" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int addTransactionInput</definition>
        <argsstring>(Transaction *self, TransactionInput *input)</argsstring>
        <name>addTransactionInput</name>
        <param>
          <type><ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct_m_i_transaction_input" kindref="compound">TransactionInput</ref> *</type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>Adds an <ref refid="struct_m_i_transaction_input" kindref="compound">TransactionInput</ref> to the <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_m_i_transaction_input" kindref="compound">TransactionInput</ref> object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the transaction input was added successfully and false on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.h" line="77" bodyfile="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" bodystart="124" bodyend="131"/>
        <references refid="_m_i_transaction_8c_1a864921a54d52bf4d9223327b1ae4ba15" compoundref="_m_i_transaction_8c" startline="143" endline="158">addTransactionInputWithoutReference</references>
        <references refid="_m_i_object_8c_1a5f22211b2f99a33c1b4b7ad544ce108a" compoundref="_m_i_object_8c" startline="73" endline="84">incrementReferenceCount</references>
      </memberdef>
      <memberdef kind="function" id="_m_i_transaction_8h_1a322dff87e5fb717f9f21c482ce2fef10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int addTransactionOutput</definition>
        <argsstring>(Transaction *self, TransactionOutput *output)</argsstring>
        <name>addTransactionOutput</name>
        <param>
          <type><ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct_m_i_transaction_output" kindref="compound">TransactionOutput</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Adds an <ref refid="struct_m_i_transaction_input" kindref="compound">TransactionInput</ref> to the <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_m_i_transaction_output" kindref="compound">TransactionOutput</ref> object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the transaction output was added successfully and false on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.h" line="84" bodyfile="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" bodystart="133" bodyend="140"/>
        <references refid="_m_i_transaction_8c_1a864921a54d52bf4d9223327b1ae4ba15" compoundref="_m_i_transaction_8c" startline="143" endline="158">addTransactionInputWithoutReference</references>
        <references refid="_m_i_object_8c_1a5f22211b2f99a33c1b4b7ad544ce108a" compoundref="_m_i_object_8c" startline="73" endline="84">incrementReferenceCount</references>
      </memberdef>
      <memberdef kind="function" id="_m_i_transaction_8h_1a6d56a2cbd0b4d755eb1ea24da1f204d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateTransactionHash</definition>
        <argsstring>(Transaction *self, uint8_t *hash)</argsstring>
        <name>calculateTransactionHash</name>
        <param>
          <type><ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
<para>Calculates the hash for a transaction. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object. This should be serialised. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>hash for the transaction to be set. This should be 32 bytes long. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.h" line="90" bodyfile="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" bodystart="178" bodyend="188"/>
        <references refid="_m_i_byte_array_8c_1a29dc51ffba948226c028baf425096408" compoundref="_m_i_byte_array_8c" startline="46" endline="51">getDataFromByteArray</references>
        <references refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" compoundref="_m_i_message_8c" startline="78" endline="82">getMessage</references>
        <references refid="struct_m_i_byte_array_1aebb70c2aab3407a9f05334c47131a43b" compoundref="_m_i_byte_array_8h" startline="33">ByteArray::length</references>
        <references refid="_m_i_crypt_8c_1ab62ec3041775f1d56093fa4096c2ef84" compoundref="_m_i_crypt_8c" startline="26" endline="33">Sha256</references>
        <referencedby refid="_m_i_transaction_8h_1ae77b886a61562d010b212219acbeed9c" compoundref="_m_i_transaction_8c" startline="190" endline="199">getTransactionHash</referencedby>
      </memberdef>
      <memberdef kind="function" id="_m_i_transaction_8h_1ae77b886a61562d010b212219acbeed9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>uint8_t* getTransactionHash</definition>
        <argsstring>(Transaction *self)</argsstring>
        <name>getTransactionHash</name>
        <param>
          <type><ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Retrieves or calculates the hash for a transaction. Hashes taken from this function are cached. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object. This should be serialised. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The hash for the transaction. This is a 32 byte long, double SHA-256 hash and is a pointer to the hash field in the transaction. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.h" line="96" bodyfile="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" bodystart="190" bodyend="199"/>
        <references refid="_m_i_transaction_8c_1a6d56a2cbd0b4d755eb1ea24da1f204d1" compoundref="_m_i_transaction_8c" startline="178" endline="188">calculateTransactionHash</references>
      </memberdef>
      <memberdef kind="function" id="_m_i_transaction_8h_1a399ecdc9998cfe26c0f2a1928572b54b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t calculateTransactionLength</definition>
        <argsstring>(Transaction *self)</argsstring>
        <name>calculateTransactionLength</name>
        <param>
          <type><ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Calculates the length of an <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref>; this is needed to serialise the object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The length of the <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> on success, 0 on failure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.h" line="103" bodyfile="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" bodystart="201" bodyend="230"/>
        <references refid="_m_i_var_len_int_8c_1a960ae6b1a5365789aec7b7055a36dbd7" compoundref="_m_i_var_len_int_8c" startline="81" endline="93">getSizeOfVarLenInt</references>
        <referencedby refid="_m_i_block_8h_1ab3c577ac4b13bc68f0ac3f82159969a6" compoundref="_m_i_block_8c" startline="201" endline="216">calculateBlockLength</referencedby>
      </memberdef>
      <memberdef kind="function" id="_m_i_transaction_8h_1a61c55efd86e87797526fc63273ad61d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int isCoinBase</definition>
        <argsstring>(Transaction *self)</argsstring>
        <name>isCoinBase</name>
        <param>
          <type><ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Determines if a transaction is a coinbase transaction or not. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the transaction is a coin-base transaction or false if not. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.h" line="110" bodyfile="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" bodystart="232" bodyend="241"/>
        <references refid="_m_i_byte_array_8c_1aff8e512253db16092e10359b31e732b9" compoundref="_m_i_byte_array_8c" startline="27" endline="36">isNullByteArray</references>
      </memberdef>
      <memberdef kind="function" id="_m_i_transaction_8h_1a1abc45d369c2884698692d79091f5b2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t serializeTransaction</definition>
        <argsstring>(Transaction *self)</argsstring>
        <name>serializeTransaction</name>
        <param>
          <type><ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Serialises a <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> to byte data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The length read on success, 0 on failure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.h" line="116" bodyfile="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" bodystart="243" bodyend="366"/>
        <references refid="struct_m_i_message_1a8fb493ee3c32dd3a9fb29bc71c852f86" compoundref="_m_i_message_8h" startline="26">Message::bytes</references>
        <references refid="_m_i_var_len_int_8c_1ab415150158b7af4b63eb360b384b5ec0" compoundref="_m_i_var_len_int_8c" startline="71" endline="79">createVarLenIntFromUInt64</references>
        <references refid="_m_i_object_8c_1a0407d34294cdc667982ffa9bd6f18cc9" compoundref="_m_i_object_8c" startline="57" endline="71">decrementReferenceCount</references>
        <references refid="_m_i_object_8c_1a71704ab4fbecb7d85276d32649b5349a" compoundref="_m_i_object_8c" startline="51" endline="55">destroyObject</references>
        <references refid="_m_i_var_len_int_8c_1a332f03b156163565574788bc3cedd522" compoundref="_m_i_var_len_int_8c" startline="45" endline="69">encodeVarLenInt</references>
        <references refid="_m_i_byte_array_8c_1a22681d5a43566996273c64d34d669806" compoundref="_m_i_byte_array_8c" startline="61" endline="86">getByteArraySubsectionReference</references>
        <references refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" compoundref="_m_i_message_8c" startline="78" endline="82">getMessage</references>
        <references refid="struct_m_i_byte_array_1aebb70c2aab3407a9f05334c47131a43b" compoundref="_m_i_byte_array_8h" startline="33">ByteArray::length</references>
        <references refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968ac44c4a273612af5ceabd09df473706f4" compoundref="_m_i_constants_8h" startline="53">_ERROR_INIT_FAIL</references>
        <references refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968abd324fa69626e40713b7c4e1e6eef9f9" compoundref="_m_i_constants_8h" startline="39">_ERROR_MESSAGE_DESERIALISATION_BAD_BYTES</references>
        <references refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968aea18ededd7bee318c95d90cff53fffba" compoundref="_m_i_constants_8h" startline="41">_ERROR_MESSAGE_SERIALISATION_BAD_BYTES</references>
        <references refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968ac8ae144568e5761507c7d026a2531875" compoundref="_m_i_constants_8h" startline="42">_ERROR_MESSAGE_SERIALISATION_NULL_BYTES</references>
        <references refid="struct_m_i_message_1aeb0776cff292839518da5f5a48884fd9" compoundref="_m_i_message_8h" startline="28">Message::onErrorReceived</references>
        <references refid="_m_i_transaction_input_8c_1a1dc5b6d2e7b70e918572bedd9ee6abf9" compoundref="_m_i_transaction_input_8c" startline="128" endline="177">serializeTransactionInput</references>
        <references refid="_m_i_transaction_output_8c_1a16b79dfd79f1bec2dce3b0865766b48e" compoundref="_m_i_transaction_output_8c" startline="125" endline="163">serializeTransactionOutput</references>
        <references refid="struct_m_i_var_len_int_1af922c72fe1d5915971491918ff5f923e" compoundref="_m_i_var_len_int_8h" startline="28">VarLenInt::storageSize</references>
        <references refid="_m_i_byte_array_8c_1aa4d465553a3c7f80c1700316f2410b40" compoundref="_m_i_byte_array_8c" startline="207" endline="217">writeInt32AsLittleEndianIntoByteArray</references>
        <referencedby refid="_m_i_block_8h_1a3fa07e825a149c98d148b215a5d5a78a" compoundref="_m_i_block_8c" startline="416" endline="449">dealWithSerializationTran</referencedby>
      </memberdef>
      <memberdef kind="function" id="_m_i_transaction_8h_1a8777f695fbbb547e32b9c0347b6b2026" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t deserializeTransaction</definition>
        <argsstring>(Transaction *self)</argsstring>
        <name>deserializeTransaction</name>
        <param>
          <type><ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Deserialises a <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> so that it can be used as an object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The length read on success, 0 on failure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.h" line="122" bodyfile="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" bodystart="368" bodyend="518"/>
        <references refid="struct_m_i_message_1a8fb493ee3c32dd3a9fb29bc71c852f86" compoundref="_m_i_message_8h" startline="26">Message::bytes</references>
        <references refid="_m_i_transaction_input_8c_1a6ce74856deb61a054db563a0382b0ff2" compoundref="_m_i_transaction_input_8c" startline="43" endline="61">createNewTransactionInputFromData</references>
        <references refid="_m_i_transaction_output_8c_1ad147138cc70f16d81e3b66a00ae700af" compoundref="_m_i_transaction_output_8c" startline="40" endline="60">createNewTransactionOutputFromData</references>
        <references refid="_m_i_var_len_int_8c_1a0492e373e2d12e41b1764b580f287af9" compoundref="_m_i_var_len_int_8c" startline="13" endline="43">decodeVarLenInt</references>
        <references refid="_m_i_object_8c_1a0407d34294cdc667982ffa9bd6f18cc9" compoundref="_m_i_object_8c" startline="57" endline="71">decrementReferenceCount</references>
        <references refid="_m_i_transaction_input_8c_1ad375fb1ac6adc4cfeafc59b89ab811b9" compoundref="_m_i_transaction_input_8c" startline="179" endline="240">deserializeTransactionInput</references>
        <references refid="_m_i_transaction_output_8c_1aec03af57e070260915cbf2491802df55" compoundref="_m_i_transaction_output_8c" startline="165" endline="233">deserializeTransactionOutput</references>
        <references refid="_m_i_byte_array_8c_1a22681d5a43566996273c64d34d669806" compoundref="_m_i_byte_array_8c" startline="61" endline="86">getByteArraySubsectionReference</references>
        <references refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" compoundref="_m_i_message_8c" startline="78" endline="82">getMessage</references>
        <references refid="struct_m_i_byte_array_1aebb70c2aab3407a9f05334c47131a43b" compoundref="_m_i_byte_array_8h" startline="33">ByteArray::length</references>
        <references refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968ac44c4a273612af5ceabd09df473706f4" compoundref="_m_i_constants_8h" startline="53">_ERROR_INIT_FAIL</references>
        <references refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968abd324fa69626e40713b7c4e1e6eef9f9" compoundref="_m_i_constants_8h" startline="39">_ERROR_MESSAGE_DESERIALISATION_BAD_BYTES</references>
        <references refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968a92f5f1cd8d49eb6264885735124551cf" compoundref="_m_i_constants_8h" startline="40">_ERROR_MESSAGE_DESERIALISATION_NULL_BYTES</references>
        <references refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968ad4cc7a4523a7fd575f8d7ae42d20087f" compoundref="_m_i_constants_8h" startline="52">_ERROR_OUT_OF_MEMORY</references>
        <references refid="struct_m_i_message_1aeb0776cff292839518da5f5a48884fd9" compoundref="_m_i_message_8h" startline="28">Message::onErrorReceived</references>
        <references refid="_m_i_byte_array_8c_1aab10685017fe16769d5b22c826ada9f8" compoundref="_m_i_byte_array_8c" startline="144" endline="156">readInt32AsLittleEndianFromByteArray</references>
        <references refid="struct_m_i_var_len_int_1af922c72fe1d5915971491918ff5f923e" compoundref="_m_i_var_len_int_8h" startline="28">VarLenInt::storageSize</references>
        <references refid="struct_m_i_var_len_int_1a4e630859cc0e2a22bd6acf39a6a8e218" compoundref="_m_i_var_len_int_8h" startline="27">VarLenInt::value</references>
        <referencedby refid="_m_i_block_8h_1a04d2d2defba76492762c0eb4b7ccd206" compoundref="_m_i_block_8c" startline="261" endline="324">deserializeWithTransactions</referencedby>
      </memberdef>
      <memberdef kind="function" id="_m_i_transaction_8h_1a864921a54d52bf4d9223327b1ae4ba15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int addTransactionInputWithoutReference</definition>
        <argsstring>(Transaction *self, TransactionInput *input)</argsstring>
        <name>addTransactionInputWithoutReference</name>
        <param>
          <type><ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct_m_i_transaction_input" kindref="compound">TransactionInput</ref> *</type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>Adds an <ref refid="struct_m_i_transaction_input" kindref="compound">TransactionInput</ref> to the <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> without retaining it. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_m_i_transaction_input" kindref="compound">TransactionInput</ref> object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the transaction input was taken successfully and false on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.h" line="129" bodyfile="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" bodystart="143" bodyend="158"/>
        <references refid="_m_i_constants_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="_m_i_constants_8h" startline="65">FALSE</references>
        <references refid="_m_i_constants_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="_m_i_constants_8h" startline="66">TRUE</references>
        <referencedby refid="_m_i_transaction_8h_1aadb6dd710e8c2832fb88ba7b5b0cf409" compoundref="_m_i_transaction_8c" startline="124" endline="131">addTransactionInput</referencedby>
        <referencedby refid="_m_i_transaction_8h_1a322dff87e5fb717f9f21c482ce2fef10" compoundref="_m_i_transaction_8c" startline="133" endline="140">addTransactionOutput</referencedby>
      </memberdef>
      <memberdef kind="function" id="_m_i_transaction_8h_1a9d6b054174739ac0b68a197477e662e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int addTransactionOutputWithoutReference</definition>
        <argsstring>(Transaction *self, TransactionOutput *output)</argsstring>
        <name>addTransactionOutputWithoutReference</name>
        <param>
          <type><ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct_m_i_transaction_output" kindref="compound">TransactionOutput</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Adds an <ref refid="struct_m_i_transaction_output" kindref="compound">TransactionOutput</ref> to the <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> without retaining it. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_m_i_transaction_output" kindref="compound">TransactionOutput</ref> object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the transaction output was taken successfully and false on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.h" line="136" bodyfile="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" bodystart="161" bodyend="176"/>
        <references refid="_m_i_constants_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="_m_i_constants_8h" startline="65">FALSE</references>
        <references refid="_m_i_constants_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="_m_i_constants_8h" startline="66">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="_m_i_transaction_8h_1a6752846ad122c4320c07ea5cb51637d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_m_i_constants_8h_1a7e14717182fa5c1cd0fd5502ecaa04e0" kindref="member">TransactionHashStatus</ref></type>
        <definition>TransactionHashStatus getTransactionInputHashForVerification</definition>
        <argsstring>(void *vself, ByteArray *prevOutSubScript, uint32_t input, SignatureType signType, uint8_t *hash)</argsstring>
        <name>getTransactionInputHashForVerification</name>
        <param>
          <type>void *</type>
          <declname>vself</declname>
        </param>
        <param>
          <type><ref refid="struct_m_i_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>prevOutSubScript</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>input</declname>
        </param>
        <param>
          <type><ref refid="_m_i_constants_8h_1a4fd54932b907311989c5752c6942742a" kindref="member">SignatureType</ref></type>
          <declname>signType</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
<para>Gets the hash for signing or signature checking for a transaction input. The transaction input needs to contain the outPointerHash, outPointerIndex and sequence. If these are modifed afterwards then the signiture is invalid. </para>        </briefdescription>
        <detaileddescription>
<para>TRANSACTION SIGNING <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vself</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prevOutSubScript</parametername>
</parameternamelist>
<parameterdescription>
<para>The sub script from the output. Must be the correct one or the signiture will be invalid. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the input to sign. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>signType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of signature to get the data for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hash</parametername>
</parameternamelist>
<parameterdescription>
<para>The 32 byte data hash for signing or checking signatures. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>_TX_HASH_OK if the hash has been retreived with no problems. _TX_HASH_BAD is returned if the hash is invalid and _TX_HASH_ERR is returned upon an error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.h" line="148" bodyfile="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" bodystart="520" bodyend="664"/>
        <references refid="_m_i_byte_array_8c_1a949c73acfab0c6c4d83ad8c07d999364" compoundref="_m_i_byte_array_8c" startline="17" endline="24">copyByteArrayToByteArray</references>
        <references refid="_m_i_var_len_int_8c_1ab415150158b7af4b63eb360b384b5ec0" compoundref="_m_i_var_len_int_8c" startline="71" endline="79">createVarLenIntFromUInt64</references>
        <references refid="_m_i_byte_array_8c_1a2db5c01eeb9fbe1d8350ab99392be437" compoundref="_m_i_byte_array_8c" startline="243" endline="255">createNewByteArrayOfSize</references>
        <references refid="_m_i_var_len_int_8c_1a332f03b156163565574788bc3cedd522" compoundref="_m_i_var_len_int_8c" startline="45" endline="69">encodeVarLenInt</references>
        <references refid="_m_i_byte_array_8c_1a29dc51ffba948226c028baf425096408" compoundref="_m_i_byte_array_8c" startline="46" endline="51">getDataFromByteArray</references>
        <references refid="_m_i_byte_array_8c_1a673fc907bf90724f9fbfad124d3ed9e2" compoundref="_m_i_byte_array_8c" startline="39" endline="44">getByteArray</references>
        <references refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" compoundref="_m_i_message_8c" startline="78" endline="82">getMessage</references>
        <references refid="_m_i_var_len_int_8c_1a960ae6b1a5365789aec7b7055a36dbd7" compoundref="_m_i_var_len_int_8c" startline="81" endline="93">getSizeOfVarLenInt</references>
        <references refid="struct_m_i_byte_array_1aebb70c2aab3407a9f05334c47131a43b" compoundref="_m_i_byte_array_8h" startline="33">ByteArray::length</references>
        <references refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968a705f025e78042406ea8b25c6e574ed94" compoundref="_m_i_constants_8h" startline="47">_ERROR_TRANSACTION_FEW_INPUTS</references>
        <references refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968a83536036db8250da8add01626c09e3c3" compoundref="_m_i_constants_8h" startline="48">_ERROR_TRANSACTION_FEW_OUTPUTS</references>
        <references refid="_m_i_constants_8h_1a4fd54932b907311989c5752c6942742aa4cbb6f8e9c33007b0dd86139c5444d63" compoundref="_m_i_constants_8h" startline="85">_SIGHASH_ANYONECANPAY</references>
        <references refid="_m_i_constants_8h_1a4fd54932b907311989c5752c6942742aa4eb90e2ee630ba32437b0cbbe95b9ede" compoundref="_m_i_constants_8h" startline="83">_SIGHASH_NONE</references>
        <references refid="_m_i_constants_8h_1a4fd54932b907311989c5752c6942742aa032938cf4fbf7498b6f85f5659bc28c5" compoundref="_m_i_constants_8h" startline="84">_SIGHASH_SINGLE</references>
        <references refid="_m_i_crypt_8c_1ab62ec3041775f1d56093fa4096c2ef84" compoundref="_m_i_crypt_8c" startline="26" endline="33">Sha256</references>
        <references refid="struct_m_i_message_1aeb0776cff292839518da5f5a48884fd9" compoundref="_m_i_message_8h" startline="28">Message::onErrorReceived</references>
        <references refid="struct_m_i_var_len_int_1af922c72fe1d5915971491918ff5f923e" compoundref="_m_i_var_len_int_8h" startline="28">VarLenInt::storageSize</references>
        <references refid="_m_i_constants_8h_1a7e14717182fa5c1cd0fd5502ecaa04e0ab8cb7847f95d8209bd64c5bd4cdce830" compoundref="_m_i_constants_8h" startline="76">TX_HASH_BAD</references>
        <references refid="_m_i_constants_8h_1a7e14717182fa5c1cd0fd5502ecaa04e0ae372182e92ec6fd8774695846b3d8845" compoundref="_m_i_constants_8h" startline="77">TX_HASH_FAIL</references>
        <references refid="_m_i_constants_8h_1a7e14717182fa5c1cd0fd5502ecaa04e0a9f46366755423a053481edc37bd853d0" compoundref="_m_i_constants_8h" startline="75">TX_HASH_GOOD</references>
        <references refid="struct_m_i_var_len_int_1a4e630859cc0e2a22bd6acf39a6a8e218" compoundref="_m_i_var_len_int_8h" startline="27">VarLenInt::value</references>
        <references refid="_m_i_byte_array_8c_1aa4d465553a3c7f80c1700316f2410b40" compoundref="_m_i_byte_array_8c" startline="207" endline="217">writeInt32AsLittleEndianIntoByteArray</references>
        <references refid="_m_i_byte_array_8c_1ac10e90995fc8a98db44d71607ef0ede7" compoundref="_m_i_byte_array_8c" startline="218" endline="232">writeInt64AsLittleEndianIntoByteArray</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Transcation.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>03/10/2012</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>by:<sp/>Abdulfatai<sp/>Popoola</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(c)<sp/>2012<sp/>Bitcoin<sp/>Project<sp/>Team</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>TRANSACTION_H_</highlight></codeline>
<codeline lineno="9"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TRANSACTION_H_</highlight></codeline>
<codeline lineno="10"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_m_i_message_8h" kindref="compound">Message.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_m_i_transaction_input_8h" kindref="compound">TransactionInput.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_m_i_transaction_output_8h" kindref="compound">TransactionOutput.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../Utils/Cryptography/Crypt.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="19" refid="struct_m_i_transaction" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="20" refid="struct_m_i_transaction_1a487e4843cf1cf7397eb2e1bcf91cbf3b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="struct_m_i_message" kindref="compound" tooltip="Structure for Message objects.">Message</ref><sp/><ref refid="struct_m_i_transaction_1a487e4843cf1cf7397eb2e1bcf91cbf3b" kindref="member">base</ref>;<sp/></highlight></codeline>
<codeline lineno="21" refid="struct_m_i_transaction_1a7ff9da008bf055da1f1ba994c562057d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>hash[32];<sp/></highlight></codeline>
<codeline lineno="22" refid="struct_m_i_transaction_1acd99bb05ca015e7d74448acb1deba7ca" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_i_transaction_1acd99bb05ca015e7d74448acb1deba7ca" kindref="member">version</ref>;<sp/></highlight></codeline>
<codeline lineno="23" refid="struct_m_i_transaction_1a84a553b85f92fbe799c9e927aeae4491" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_i_transaction_1a84a553b85f92fbe799c9e927aeae4491" kindref="member">numOfTransactionInput</ref>;<sp/></highlight></codeline>
<codeline lineno="24" refid="struct_m_i_transaction_1ad10010cd6a4f129706cf61bd0dce100f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_m_i_transaction_input" kindref="compound" tooltip="Structure for TransactionInput objects.">TransactionInput</ref><sp/>**<sp/><ref refid="struct_m_i_transaction_1ad10010cd6a4f129706cf61bd0dce100f" kindref="member">inputs</ref>;</highlight></codeline>
<codeline lineno="25" refid="struct_m_i_transaction_1aa6fd5ebfb79f09bf74e1b0f63f557348" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_i_transaction_1aa6fd5ebfb79f09bf74e1b0f63f557348" kindref="member">numOfTransactionOutput</ref>;<sp/></highlight></codeline>
<codeline lineno="26" refid="struct_m_i_transaction_1af782b989431a6d6831659788e15004f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_m_i_transaction_output" kindref="compound">TransactionOutput</ref><sp/>**<sp/><ref refid="struct_m_i_transaction_1af782b989431a6d6831659788e15004f9" kindref="member">outputs</ref>;</highlight></codeline>
<codeline lineno="27" refid="struct_m_i_transaction_1aea4d95211b00c311b2d84c6177429162" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_m_i_transaction_1aea4d95211b00c311b2d84c6177429162" kindref="member">lockTime</ref>;<sp/></highlight></codeline>
<codeline lineno="28"><highlight class="normal">}<sp/><ref refid="struct_m_i_transaction" kindref="compound" tooltip="Structure for Transaction objects.">Transaction</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"><ref refid="struct_m_i_transaction" kindref="compound" tooltip="Structure for Transaction objects.">Transaction</ref><sp/>*<sp/><ref refid="_m_i_transaction_8c_1ad9c9cac2e7fd054ceff9c4a0053ec494" kindref="member" tooltip="Creates a new Transaction object with no inputs or outputs.">createNewTransaction</ref>(uint32_t<sp/>lockTime,<sp/>uint32_t<sp/>version,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*onErrorReceived)(<ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968" kindref="member">Error</ref><sp/>error,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,...));</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><ref refid="struct_m_i_transaction" kindref="compound" tooltip="Structure for Transaction objects.">Transaction</ref><sp/>*<sp/><ref refid="_m_i_transaction_8c_1ac64b350eebd0ac111556c9323025a5bc" kindref="member" tooltip="Creates a new Transaction object from byte data. Should be serialised for object data...">createNewTransactionFromByteArray</ref>(<ref refid="struct_m_i_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/>bytes,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*onErrorReceived)(<ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968" kindref="member">Error</ref><sp/>error,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,...));</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_m_i_transaction_8c_1a8b299a1ed7ad62d46f4d2547463b95fe" kindref="member" tooltip="Initialises a Transaction object.">initializeTransaction</ref>(<ref refid="struct_m_i_transaction" kindref="compound" tooltip="Structure for Transaction objects.">Transaction</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>uint32_t<sp/>lockTime,<sp/>uint32_t<sp/>version,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*onErrorReceived)(<ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968" kindref="member">Error</ref><sp/>error,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,...));</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_m_i_transaction_8c_1addbf01b7d3012da33c2124db978f3424" kindref="member" tooltip="Creates a new Transaction object from byte data. Should be serialised for object data...">initializeTransactionFromByteArray</ref>(<ref refid="struct_m_i_transaction" kindref="compound" tooltip="Structure for Transaction objects.">Transaction</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct_m_i_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/>data,</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*onErrorReceived)(<ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968" kindref="member">Error</ref><sp/>error,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,...));</highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_m_i_transaction_8c_1a51cc2a726480d71b2b08a871bc4aa8f2" kindref="member" tooltip="Destructor; destroys a Transaction object.">destroyTransaction</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><ref refid="struct_m_i_transaction" kindref="compound" tooltip="Structure for Transaction objects.">Transaction</ref><sp/>*<sp/><ref refid="_m_i_transaction_8c_1a52cbd0dba13db4b7356b3b35621dd007" kindref="member" tooltip="Gets a Transaction from another object. Use this to avoid casts.">getTransaction</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_m_i_transaction_8c_1aadb6dd710e8c2832fb88ba7b5b0cf409" kindref="member" tooltip="Adds an TransactionInput to the Transaction.">addTransactionInput</ref>(<ref refid="struct_m_i_transaction" kindref="compound" tooltip="Structure for Transaction objects.">Transaction</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct_m_i_transaction_input" kindref="compound" tooltip="Structure for TransactionInput objects.">TransactionInput</ref><sp/>*<sp/>input);</highlight><highlight class="comment">/*addTransactionInput<sp/>was<sp/>renamed<sp/>to<sp/>addTransactionInput*/</highlight></codeline>
<codeline lineno="84"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_m_i_transaction_8c_1a322dff87e5fb717f9f21c482ce2fef10" kindref="member" tooltip="Adds an TransactionInput to the Transaction.">addTransactionOutput</ref>(<ref refid="struct_m_i_transaction" kindref="compound" tooltip="Structure for Transaction objects.">Transaction</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct_m_i_transaction_output" kindref="compound">TransactionOutput</ref><sp/>*<sp/>output);</highlight><highlight class="comment">/*addTransactionOutput<sp/>was<sp/>renamed<sp/>to<sp/>addTransactionOutput*/</highlight></codeline>
<codeline lineno="90"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_m_i_transaction_8c_1a6d56a2cbd0b4d755eb1ea24da1f204d1" kindref="member" tooltip="Calculates the hash for a transaction.">calculateTransactionHash</ref>(<ref refid="struct_m_i_transaction" kindref="compound" tooltip="Structure for Transaction objects.">Transaction</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>uint8_t<sp/>*<sp/>hash);</highlight></codeline>
<codeline lineno="96"><highlight class="normal">uint8_t<sp/>*<sp/><ref refid="_m_i_transaction_8c_1ae77b886a61562d010b212219acbeed9c" kindref="member" tooltip="Retrieves or calculates the hash for a transaction. Hashes taken from this function are cached...">getTransactionHash</ref>(<ref refid="struct_m_i_transaction" kindref="compound" tooltip="Structure for Transaction objects.">Transaction</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal">uint32_t<sp/><ref refid="_m_i_transaction_8c_1a399ecdc9998cfe26c0f2a1928572b54b" kindref="member" tooltip="Calculates the length of an Transaction; this is needed to serialise the object.">calculateTransactionLength</ref>(<ref refid="struct_m_i_transaction" kindref="compound" tooltip="Structure for Transaction objects.">Transaction</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_m_i_transaction_8c_1a61c55efd86e87797526fc63273ad61d5" kindref="member" tooltip="Determines if a transaction is a coinbase transaction or not.">isCoinBase</ref>(<ref refid="struct_m_i_transaction" kindref="compound" tooltip="Structure for Transaction objects.">Transaction</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal">uint32_t<sp/><ref refid="_m_i_transaction_8c_1a1abc45d369c2884698692d79091f5b2c" kindref="member" tooltip="Serialises a Transaction to byte data.">serializeTransaction</ref>(<ref refid="struct_m_i_transaction" kindref="compound" tooltip="Structure for Transaction objects.">Transaction</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="122"><highlight class="normal">uint32_t<sp/><ref refid="_m_i_transaction_8c_1a8777f695fbbb547e32b9c0347b6b2026" kindref="member" tooltip="Deserialises a Transaction so that it can be used as an object.">deserializeTransaction</ref>(<ref refid="struct_m_i_transaction" kindref="compound" tooltip="Structure for Transaction objects.">Transaction</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="129"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_m_i_transaction_8c_1a864921a54d52bf4d9223327b1ae4ba15" kindref="member" tooltip="Adds an TransactionInput to the Transaction without retaining it.">addTransactionInputWithoutReference</ref>(<ref refid="struct_m_i_transaction" kindref="compound" tooltip="Structure for Transaction objects.">Transaction</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct_m_i_transaction_input" kindref="compound" tooltip="Structure for TransactionInput objects.">TransactionInput</ref><sp/>*<sp/>input);</highlight></codeline>
<codeline lineno="136"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_m_i_transaction_8c_1a9d6b054174739ac0b68a197477e662e6" kindref="member" tooltip="Adds an TransactionOutput to the Transaction without retaining it.">addTransactionOutputWithoutReference</ref>(<ref refid="struct_m_i_transaction" kindref="compound" tooltip="Structure for Transaction objects.">Transaction</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct_m_i_transaction_output" kindref="compound">TransactionOutput</ref><sp/>*<sp/>output);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><ref refid="_m_i_constants_8h_1a7e14717182fa5c1cd0fd5502ecaa04e0" kindref="member">TransactionHashStatus</ref><sp/><ref refid="_m_i_transaction_8c_1a66ab860229cbd11f1206df9bb9196728" kindref="member" tooltip="Gets the hash for signing or signature checking for a transaction input. The transaction input needs ...">getTransactionInputHashForVerification</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>vself,<sp/><ref refid="struct_m_i_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/>prevOutSubScript,<sp/>uint32_t<sp/>input,<sp/><ref refid="_m_i_constants_8h_1a4fd54932b907311989c5752c6942742a" kindref="member">SignatureType</ref><sp/>signType,<sp/>uint8_t<sp/>*<sp/>hash);</highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.h"/>
  </compounddef>
</doxygen>
