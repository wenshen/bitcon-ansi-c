<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="_chain_descriptor_8h" kind="file">
    <compoundname>ChainDescriptor.h</compoundname>
    <includes refid="_message_8h" local="yes">Message.h</includes>
    <includedby refid="_chain_descriptor_8c" local="yes">src/Object/Message/ChainDescriptor.c</includedby>
    <includedby refid="_get_blocks_8h" local="yes">src/Object/Message/GetBlocks.h</includedby>
    <incdepgraph>
      <node id="784">
        <label>stdint.h</label>
      </node>
      <node id="783">
        <label>stdlib.h</label>
      </node>
      <node id="785">
        <label>../../Constants.h</label>
      </node>
      <node id="782">
        <label>Message.h</label>
        <link refid="_message_8h"/>
        <childnode refid="783" relation="include">
        </childnode>
        <childnode refid="784" relation="include">
        </childnode>
        <childnode refid="785" relation="include">
        </childnode>
        <childnode refid="786" relation="include">
        </childnode>
        <childnode refid="787" relation="include">
        </childnode>
        <childnode refid="788" relation="include">
        </childnode>
      </node>
      <node id="786">
        <label>../ByteArray.h</label>
      </node>
      <node id="787">
        <label>../Object.h</label>
      </node>
      <node id="781">
        <label>src/Object/Message/ChainDescriptor.h</label>
        <link refid="ChainDescriptor.h"/>
        <childnode refid="782" relation="include">
        </childnode>
      </node>
      <node id="788">
        <label>../../Utils/VariableLengthInteger/VarLenInt.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="790">
        <label>src/Object/Message/ChainDescriptor.c</label>
        <link refid="_chain_descriptor_8c"/>
      </node>
      <node id="789">
        <label>src/Object/Message/ChainDescriptor.h</label>
        <link refid="ChainDescriptor.h"/>
        <childnode refid="790" relation="include">
        </childnode>
        <childnode refid="791" relation="include">
        </childnode>
      </node>
      <node id="792">
        <label>src/Object/Message/GetBlocks.c</label>
        <link refid="_get_blocks_8c"/>
      </node>
      <node id="791">
        <label>src/Object/Message/GetBlocks.h</label>
        <link refid="_get_blocks_8h"/>
        <childnode refid="792" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_chain_descriptor" prot="public">ChainDescriptor</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="_chain_descriptor_8h_1a7134595e37ebe8317011859df8925d77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_chain_descriptor" kindref="compound">ChainDescriptor</ref> *</type>
        <definition>ChainDescriptor* newChainDescriptor</definition>
        <argsstring>(void(*onErrorReceived)(Error error, char *,...))</argsstring>
        <name>newChainDescriptor</name>
        <param>
          <type>void(*)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref> error, char *,...)</type>
          <declname>onErrorReceived</declname>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="struct_chain_descriptor" kindref="compound">ChainDescriptor</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A new <ref refid="struct_chain_descriptor" kindref="compound">ChainDescriptor</ref> object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/ChainDescriptor.h" line="32" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/ChainDescriptor.c" bodystart="13" bodyend="25"/>
        <references refid="struct_object_1aa353725933e843001d4feb03f8268121" compoundref="_object_8h" startline="29">Object::destroy</references>
        <references refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5ac0a554045048d2fb61387cf735676f69" compoundref="_constants_8h" startline="52">ERROR_OUT_OF_MEMORY</references>
        <references refid="_chain_descriptor_8c_1a56699140e09809274873f7fb573dff37" compoundref="_chain_descriptor_8c" startline="63" endline="72">freeChainDescriptor</references>
        <references refid="_object_8c_1a8460165be167be3b0816d84f498e3733" compoundref="_object_8c" startline="42" endline="47">getObject</references>
        <references refid="_chain_descriptor_8c_1a257956d77d2cf4b5df5b59a448380009" compoundref="_chain_descriptor_8c" startline="46" endline="53">initChainDescriptor</references>
      </memberdef>
      <memberdef kind="function" id="_chain_descriptor_8h_1a0c79d5fbbf54e1affad172c3297cb163" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_chain_descriptor" kindref="compound">ChainDescriptor</ref> *</type>
        <definition>ChainDescriptor* newChainDescriptorFromData</definition>
        <argsstring>(ByteArray *data, void(*onErrorReceived)(Error error, char *,...))</argsstring>
        <name>newChainDescriptorFromData</name>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>void(*)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref> error, char *,...)</type>
          <declname>onErrorReceived</declname>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="struct_chain_descriptor" kindref="compound">ChainDescriptor</ref> object from serialized data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Serialized <ref refid="struct_chain_descriptor" kindref="compound">ChainDescriptor</ref> data. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A new <ref refid="struct_chain_descriptor" kindref="compound">ChainDescriptor</ref> object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/ChainDescriptor.h" line="38" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/ChainDescriptor.c" bodystart="26" bodyend="38"/>
        <references refid="struct_object_1aa353725933e843001d4feb03f8268121" compoundref="_object_8h" startline="29">Object::destroy</references>
        <references refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5ac0a554045048d2fb61387cf735676f69" compoundref="_constants_8h" startline="52">ERROR_OUT_OF_MEMORY</references>
        <references refid="_chain_descriptor_8c_1a56699140e09809274873f7fb573dff37" compoundref="_chain_descriptor_8c" startline="63" endline="72">freeChainDescriptor</references>
        <references refid="_object_8c_1a8460165be167be3b0816d84f498e3733" compoundref="_object_8c" startline="42" endline="47">getObject</references>
        <references refid="_chain_descriptor_8c_1a245a673315a06db0bd85529176152e6f" compoundref="_chain_descriptor_8c" startline="54" endline="61">initChainDescriptorFromData</references>
        <referencedby refid="_get_blocks_8h_1ac6078bf7e22d0d785670ace084ac8ab6" compoundref="_get_blocks_8c" startline="82" endline="125">deserializeGetBlocks</referencedby>
      </memberdef>
      <memberdef kind="function" id="_chain_descriptor_8h_1ac9fa36ed0cecbc79af292fe8e2e92e57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_chain_descriptor" kindref="compound">ChainDescriptor</ref> *</type>
        <definition>ChainDescriptor* getChainDescriptor</definition>
        <argsstring>(void *self)</argsstring>
        <name>getChainDescriptor</name>
        <param>
          <type>void *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Gets a <ref refid="struct_chain_descriptor" kindref="compound">ChainDescriptor</ref> from another object. Use this to avoid casts. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object to obtain the <ref refid="struct_chain_descriptor" kindref="compound">ChainDescriptor</ref> from. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The <ref refid="struct_chain_descriptor" kindref="compound">ChainDescriptor</ref> object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/ChainDescriptor.h" line="45" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/ChainDescriptor.c" bodystart="40" bodyend="43"/>
      </memberdef>
      <memberdef kind="function" id="_chain_descriptor_8h_1a257956d77d2cf4b5df5b59a448380009" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int initChainDescriptor</definition>
        <argsstring>(ChainDescriptor *self, void(*onErrorReceived)(Error error, char *,...))</argsstring>
        <name>initChainDescriptor</name>
        <param>
          <type><ref refid="struct_chain_descriptor" kindref="compound">ChainDescriptor</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>void(*)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref> error, char *,...)</type>
          <declname>onErrorReceived</declname>
        </param>
        <briefdescription>
<para>Initializes a <ref refid="struct_chain_descriptor" kindref="compound">ChainDescriptor</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_chain_descriptor" kindref="compound">ChainDescriptor</ref> object to initialize </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false on failure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/ChainDescriptor.h" line="52" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/ChainDescriptor.c" bodystart="46" bodyend="53"/>
        <references refid="_constants_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="_constants_8h" startline="89">FALSE</references>
        <references refid="_message_8c_1a9ab128ae9cafefd9b05e2e0bfa719770" compoundref="_message_8c" startline="131" endline="135">getMessage</references>
        <references refid="_message_8c_1abeae03d7e39e468bf5958d4d2b1dc61b" compoundref="_message_8c" startline="94" endline="106">initializeMessageFromObject</references>
        <references refid="_constants_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="_constants_8h" startline="90">TRUE</references>
        <referencedby refid="_chain_descriptor_8h_1a7134595e37ebe8317011859df8925d77" compoundref="_chain_descriptor_8c" startline="13" endline="25">newChainDescriptor</referencedby>
      </memberdef>
      <memberdef kind="function" id="_chain_descriptor_8h_1a245a673315a06db0bd85529176152e6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int initChainDescriptorFromData</definition>
        <argsstring>(ChainDescriptor *self, ByteArray *data, void(*onErrorReceived)(Error error, char *,...))</argsstring>
        <name>initChainDescriptorFromData</name>
        <param>
          <type><ref refid="struct_chain_descriptor" kindref="compound">ChainDescriptor</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>void(*)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref> error, char *,...)</type>
          <declname>onErrorReceived</declname>
        </param>
        <briefdescription>
<para>Initializes a <ref refid="struct_chain_descriptor" kindref="compound">ChainDescriptor</ref> object from serialized data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_chain_descriptor" kindref="compound">ChainDescriptor</ref> object to initialize </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The serialized data. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false on failure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/ChainDescriptor.h" line="59" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/ChainDescriptor.c" bodystart="54" bodyend="61"/>
        <references refid="_constants_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="_constants_8h" startline="89">FALSE</references>
        <references refid="_message_8c_1a9ab128ae9cafefd9b05e2e0bfa719770" compoundref="_message_8c" startline="131" endline="135">getMessage</references>
        <references refid="_message_8c_1a297413f770355bd4bd2212e999867031" compoundref="_message_8c" startline="108" endline="123">initializeMessageFromByteArrayData</references>
        <references refid="_constants_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="_constants_8h" startline="90">TRUE</references>
        <referencedby refid="_chain_descriptor_8h_1a0c79d5fbbf54e1affad172c3297cb163" compoundref="_chain_descriptor_8c" startline="26" endline="38">newChainDescriptorFromData</referencedby>
      </memberdef>
      <memberdef kind="function" id="_chain_descriptor_8h_1aeb861daeeddac3d16298e95c57c69c66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void freeChainDescriptor</definition>
        <argsstring>(void *self)</argsstring>
        <name>freeChainDescriptor</name>
        <param>
          <type>void *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Frees a <ref refid="struct_chain_descriptor" kindref="compound">ChainDescriptor</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_chain_descriptor" kindref="compound">ChainDescriptor</ref> object to free. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/ChainDescriptor.h" line="65" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/ChainDescriptor.c" bodystart="63" bodyend="72"/>
        <references refid="_message_8c_1ac2c2a78178aac5f9f228b51d01bf5fe3" compoundref="_message_8c" startline="145" endline="154">destroyMessage</references>
        <references refid="_object_8c_1a9773962d80072e39e235802b57907208" compoundref="_object_8c" startline="59" endline="63">destroyObject</references>
        <referencedby refid="_chain_descriptor_8h_1a7134595e37ebe8317011859df8925d77" compoundref="_chain_descriptor_8c" startline="13" endline="25">newChainDescriptor</referencedby>
        <referencedby refid="_chain_descriptor_8h_1a0c79d5fbbf54e1affad172c3297cb163" compoundref="_chain_descriptor_8c" startline="26" endline="38">newChainDescriptorFromData</referencedby>
      </memberdef>
      <memberdef kind="function" id="_chain_descriptor_8h_1a3c57dbdc000cbd20f5ae696a67791820" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int addHashToChainDescriptor</definition>
        <argsstring>(ChainDescriptor *self, ByteArray *hash)</argsstring>
        <name>addHashToChainDescriptor</name>
        <param>
          <type><ref refid="struct_chain_descriptor" kindref="compound">ChainDescriptor</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
<para>Adds a hash to the <ref refid="struct_chain_descriptor" kindref="compound">ChainDescriptor</ref> onto the end. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_chain_descriptor" kindref="compound">ChainDescriptor</ref> object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hash</parametername>
</parameternamelist>
<parameterdescription>
<para>The hash to add. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the hash was added successfully, false on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/ChainDescriptor.h" line="73" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/ChainDescriptor.c" bodystart="75" bodyend="79"/>
        <references refid="_object_8c_1a5f22211b2f99a33c1b4b7ad544ce108a" compoundref="_object_8c" startline="81" endline="92">incrementReferenceCount</references>
        <references refid="_chain_descriptor_8c_1a14840f0480c2a7b44857f514bc3d7859" compoundref="_chain_descriptor_8c" startline="141" endline="150">takeHashForChainDescriptor</references>
      </memberdef>
      <memberdef kind="function" id="_chain_descriptor_8h_1a6d7efa38f552f57c8f66ef6b7fdf103a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t deserializeChainDescriptor</definition>
        <argsstring>(ChainDescriptor *self)</argsstring>
        <name>deserializeChainDescriptor</name>
        <param>
          <type><ref refid="struct_chain_descriptor" kindref="compound">ChainDescriptor</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Deserializes a <ref refid="struct_chain_descriptor" kindref="compound">ChainDescriptor</ref> so that it can be used as an object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_chain_descriptor" kindref="compound">ChainDescriptor</ref> object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The length read on success, 0 on failure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/ChainDescriptor.h" line="79" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/ChainDescriptor.c" bodystart="80" bodyend="118"/>
        <references refid="struct_message_1affc357b616afe9b58c190ae4b21caa77" compoundref="_message_8h" startline="33">Message::bytes</references>
        <references refid="_var_len_int_8c_1a4dd8c16aa70756e7ab6c0845a09358af" compoundref="_var_len_int_8c" startline="13" endline="43">decodeVarLenInt</references>
        <references refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5a61583dbb5057f77e6fc74ab42bea43ce" compoundref="_constants_8h" startline="53">ERROR_INIT_FAIL</references>
        <references refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5a7017f9b2f86ff163d1d6e86cc89b7f63" compoundref="_constants_8h" startline="39">ERROR_MESSAGE_DESERIALISATION_BAD_BYTES</references>
        <references refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5a63040cd367f8f87162668c5853b98d26" compoundref="_constants_8h" startline="40">ERROR_MESSAGE_DESERIALISATION_NULL_BYTES</references>
        <references refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5ac0a554045048d2fb61387cf735676f69" compoundref="_constants_8h" startline="52">ERROR_OUT_OF_MEMORY</references>
        <references refid="_byte_array_8c_1aefe112436e17fc5a1c56d263596a612b" compoundref="_byte_array_8c" startline="105" endline="131">getByteArraySubsectionReference</references>
        <references refid="_message_8c_1a9ab128ae9cafefd9b05e2e0bfa719770" compoundref="_message_8c" startline="131" endline="135">getMessage</references>
        <references refid="struct_byte_array_1aebb70c2aab3407a9f05334c47131a43b" compoundref="_byte_array_8h" startline="33">ByteArray::length</references>
        <references refid="struct_message_1a3c8af4f580f3041d046b7581f89a9695" compoundref="_message_8h" startline="35">Message::onErrorReceived</references>
        <references refid="struct_var_len_int_1af922c72fe1d5915971491918ff5f923e" compoundref="_var_len_int_8h" startline="28">VarLenInt::storageSize</references>
        <references refid="struct_var_len_int_1a4e630859cc0e2a22bd6acf39a6a8e218" compoundref="_var_len_int_8h" startline="27">VarLenInt::value</references>
        <referencedby refid="_get_blocks_8h_1ac6078bf7e22d0d785670ace084ac8ab6" compoundref="_get_blocks_8c" startline="82" endline="125">deserializeGetBlocks</referencedby>
      </memberdef>
      <memberdef kind="function" id="_chain_descriptor_8h_1a4873951a3acf7e90e799c64a9d09455d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t serializeChainDescriptor</definition>
        <argsstring>(ChainDescriptor *self)</argsstring>
        <name>serializeChainDescriptor</name>
        <param>
          <type><ref refid="struct_chain_descriptor" kindref="compound">ChainDescriptor</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Serializes a <ref refid="struct_chain_descriptor" kindref="compound">ChainDescriptor</ref> to the byte data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_chain_descriptor" kindref="compound">ChainDescriptor</ref> object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The length written on success, 0 on failure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/ChainDescriptor.h" line="85" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/ChainDescriptor.c" bodystart="119" bodyend="140"/>
        <references refid="struct_message_1affc357b616afe9b58c190ae4b21caa77" compoundref="_message_8h" startline="33">Message::bytes</references>
        <references refid="_byte_array_8c_1ad155de39b7e47d41778c0ec219aff1e6" compoundref="_byte_array_8c" startline="381" endline="390">changeByteArrayDataReference</references>
        <references refid="_byte_array_8c_1a7c9e6ea6d3022a2e858e91e207be9ec2" compoundref="_byte_array_8c" startline="28" endline="35">copyByteArrayToByteArray</references>
        <references refid="_var_len_int_8c_1a784e8aad4e7aead2119ede96096f33a9" compoundref="_var_len_int_8c" startline="71" endline="80">createVarLenIntFromUInt64</references>
        <references refid="_var_len_int_8c_1a12852f478f7fcd7cacc0b150fa7fe12a" compoundref="_var_len_int_8c" startline="45" endline="69">encodeVarLenInt</references>
        <references refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5a60284f8679886500015725682ed0a10d" compoundref="_constants_8h" startline="41">ERROR_MESSAGE_SERIALISATION_BAD_BYTES</references>
        <references refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5a1574daad1526eb894269b75627d86b1e" compoundref="_constants_8h" startline="42">ERROR_MESSAGE_SERIALISATION_NULL_BYTES</references>
        <references refid="_message_8c_1a9ab128ae9cafefd9b05e2e0bfa719770" compoundref="_message_8c" startline="131" endline="135">getMessage</references>
        <references refid="struct_byte_array_1aebb70c2aab3407a9f05334c47131a43b" compoundref="_byte_array_8h" startline="33">ByteArray::length</references>
        <references refid="struct_message_1a3c8af4f580f3041d046b7581f89a9695" compoundref="_message_8h" startline="35">Message::onErrorReceived</references>
        <references refid="struct_var_len_int_1af922c72fe1d5915971491918ff5f923e" compoundref="_var_len_int_8h" startline="28">VarLenInt::storageSize</references>
        <referencedby refid="_get_blocks_8h_1ae09f58674ed59b6d5f320cc588afdd14" compoundref="_get_blocks_8c" startline="127" endline="157">serializeGetBlocks</referencedby>
      </memberdef>
      <memberdef kind="function" id="_chain_descriptor_8h_1a14840f0480c2a7b44857f514bc3d7859" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int takeHashForChainDescriptor</definition>
        <argsstring>(ChainDescriptor *self, ByteArray *hash)</argsstring>
        <name>takeHashForChainDescriptor</name>
        <param>
          <type><ref refid="struct_chain_descriptor" kindref="compound">ChainDescriptor</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
<para>Takes a hash for the <ref refid="struct_chain_descriptor" kindref="compound">ChainDescriptor</ref> and puts it on the end. The hash is not retained so the calling function is releasing control. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_chain_descriptor" kindref="compound">ChainDescriptor</ref> object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hash</parametername>
</parameternamelist>
<parameterdescription>
<para>The hash to take. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the hash was taken successfully, false on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/ChainDescriptor.h" line="92" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/ChainDescriptor.c" bodystart="141" bodyend="150"/>
        <references refid="_constants_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="_constants_8h" startline="89">FALSE</references>
        <references refid="_constants_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="_constants_8h" startline="90">TRUE</references>
        <referencedby refid="_chain_descriptor_8h_1a3c57dbdc000cbd20f5ae696a67791820" compoundref="_chain_descriptor_8c" startline="75" endline="79">addHashToChainDescriptor</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Stores up to 500 block hashes for a block chain to describe a block chain for a peer so that a peer can send relevent block data. Inherits from <ref refid="struct_message" kindref="compound">Message</ref>. </para>    </briefdescription>
    <detaileddescription>
<para>The Chain Descriptor Class </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>ChainDescriptor.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/>Created<sp/>on:<sp/>Nov<sp/>8,<sp/>2012</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/>Created<sp/>by:<sp/>Wen<sp/>Shen</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/>Copyright<sp/>(c)<sp/>2012<sp/>MIBitcoin<sp/>Project<sp/>Team</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="preprocessor">#ifndef<sp/>CHAINDESCRIPTOR_H_</highlight></codeline>
<codeline lineno="15"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>CHAINDESCRIPTOR_H_</highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_message_8h" kindref="compound" tooltip="Header file for the Message object.">Message.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="22" refid="struct_chain_descriptor" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="23" refid="struct_chain_descriptor_1a8987f797adf70c3e174fd64cc68bc933" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_message" kindref="compound" tooltip="Structure for Message objects.">Message</ref><sp/><ref refid="struct_chain_descriptor_1a8987f797adf70c3e174fd64cc68bc933" kindref="member">base</ref>;<sp/></highlight></codeline>
<codeline lineno="24" refid="struct_chain_descriptor_1a2a73cb6d678dd0457074398eb7c27584" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint16_t<sp/><ref refid="struct_chain_descriptor_1a2a73cb6d678dd0457074398eb7c27584" kindref="member">numOfHash</ref>;<sp/></highlight></codeline>
<codeline lineno="25" refid="struct_chain_descriptor_1accd2c3f99c875e8657d976fc264c7fc6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>**<sp/><ref refid="struct_chain_descriptor_1accd2c3f99c875e8657d976fc264c7fc6" kindref="member">hashes</ref>;<sp/></highlight></codeline>
<codeline lineno="26"><highlight class="normal">}<sp/><ref refid="struct_chain_descriptor" kindref="compound" tooltip="Structure for ChainDescriptor objects.">ChainDescriptor</ref>;</highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><ref refid="struct_chain_descriptor" kindref="compound" tooltip="Structure for ChainDescriptor objects.">ChainDescriptor</ref><sp/>*<sp/><ref refid="_chain_descriptor_8c_1a7134595e37ebe8317011859df8925d77" kindref="member" tooltip="Creates a new ChainDescriptor object.">newChainDescriptor</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*onErrorReceived)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref><sp/>error,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,...));</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><ref refid="struct_chain_descriptor" kindref="compound" tooltip="Structure for ChainDescriptor objects.">ChainDescriptor</ref><sp/>*<sp/><ref refid="_chain_descriptor_8c_1a0c79d5fbbf54e1affad172c3297cb163" kindref="member" tooltip="Creates a new ChainDescriptor object from serialized data.">newChainDescriptorFromData</ref>(<ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/>data,</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*onErrorReceived)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref><sp/>error,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,...));</highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><ref refid="struct_chain_descriptor" kindref="compound" tooltip="Structure for ChainDescriptor objects.">ChainDescriptor</ref><sp/>*<sp/><ref refid="_chain_descriptor_8c_1ac9fa36ed0cecbc79af292fe8e2e92e57" kindref="member" tooltip="Gets a ChainDescriptor from another object. Use this to avoid casts.">getChainDescriptor</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_chain_descriptor_8c_1a257956d77d2cf4b5df5b59a448380009" kindref="member" tooltip="Initializes a ChainDescriptor object.">initChainDescriptor</ref>(<ref refid="struct_chain_descriptor" kindref="compound" tooltip="Structure for ChainDescriptor objects.">ChainDescriptor</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*onErrorReceived)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref><sp/>error,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,...));</highlight></codeline>
<codeline lineno="59"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_chain_descriptor_8c_1a245a673315a06db0bd85529176152e6f" kindref="member" tooltip="Initializes a ChainDescriptor object from serialized data.">initChainDescriptorFromData</ref>(<ref refid="struct_chain_descriptor" kindref="compound" tooltip="Structure for ChainDescriptor objects.">ChainDescriptor</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/>data,</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*onErrorReceived)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref><sp/>error,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,...));</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_chain_descriptor_8c_1a56699140e09809274873f7fb573dff37" kindref="member" tooltip="Frees a ChainDescriptor object.">freeChainDescriptor</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_chain_descriptor_8c_1a3c57dbdc000cbd20f5ae696a67791820" kindref="member" tooltip="Adds a hash to the ChainDescriptor onto the end.">addHashToChainDescriptor</ref>(<ref refid="struct_chain_descriptor" kindref="compound" tooltip="Structure for ChainDescriptor objects.">ChainDescriptor</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/>hash);</highlight></codeline>
<codeline lineno="79"><highlight class="normal">uint16_t<sp/><ref refid="_chain_descriptor_8c_1a6d7efa38f552f57c8f66ef6b7fdf103a" kindref="member" tooltip="Deserializes a ChainDescriptor so that it can be used as an object.">deserializeChainDescriptor</ref>(<ref refid="struct_chain_descriptor" kindref="compound" tooltip="Structure for ChainDescriptor objects.">ChainDescriptor</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="85"><highlight class="normal">uint16_t<sp/><ref refid="_chain_descriptor_8c_1a4873951a3acf7e90e799c64a9d09455d" kindref="member" tooltip="Serializes a ChainDescriptor to the byte data.">serializeChainDescriptor</ref>(<ref refid="struct_chain_descriptor" kindref="compound" tooltip="Structure for ChainDescriptor objects.">ChainDescriptor</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="92"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_chain_descriptor_8c_1a14840f0480c2a7b44857f514bc3d7859" kindref="member" tooltip="Takes a hash for the ChainDescriptor and puts it on the end. The hash is not retained so the calling ...">takeHashForChainDescriptor</ref>(<ref refid="struct_chain_descriptor" kindref="compound" tooltip="Structure for ChainDescriptor objects.">ChainDescriptor</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/>hash);</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>CHAINDESCRIPTOR_H_<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/ChainDescriptor.h"/>
  </compounddef>
</doxygen>
