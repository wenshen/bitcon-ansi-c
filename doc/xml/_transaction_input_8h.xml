<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="_transaction_input_8h" kind="file">
    <compoundname>TransactionInput.h</compoundname>
    <includes refid="_message_8h" local="yes">Message.h</includes>
    <includes local="yes">../Script.h</includes>
    <includes refid="_transaction_output_8h" local="yes">TransactionOutput.h</includes>
    <includedby refid="_transaction_8h" local="yes">src/Object/Message/Transaction.h</includedby>
    <includedby refid="_transaction_8c" local="yes">src/Object/Message/Transaction.c</includedby>
    <includedby refid="_transaction_input_8c" local="yes">src/Object/Message/TransactionInput.c</includedby>
    <incdepgraph>
      <node id="971">
        <label>stdint.h</label>
      </node>
      <node id="970">
        <label>stdlib.h</label>
      </node>
      <node id="972">
        <label>../../Constants.h</label>
      </node>
      <node id="969">
        <label>Message.h</label>
        <link refid="_message_8h"/>
        <childnode refid="970" relation="include">
        </childnode>
        <childnode refid="971" relation="include">
        </childnode>
        <childnode refid="972" relation="include">
        </childnode>
        <childnode refid="973" relation="include">
        </childnode>
        <childnode refid="974" relation="include">
        </childnode>
        <childnode refid="975" relation="include">
        </childnode>
      </node>
      <node id="976">
        <label>../Script.h</label>
      </node>
      <node id="977">
        <label>TransactionOutput.h</label>
        <link refid="_transaction_output_8h"/>
        <childnode refid="969" relation="include">
        </childnode>
        <childnode refid="976" relation="include">
        </childnode>
      </node>
      <node id="968">
        <label>src/Object/Message/TransactionInput.h</label>
        <link refid="TransactionInput.h"/>
        <childnode refid="969" relation="include">
        </childnode>
        <childnode refid="976" relation="include">
        </childnode>
        <childnode refid="977" relation="include">
        </childnode>
      </node>
      <node id="973">
        <label>../ByteArray.h</label>
      </node>
      <node id="974">
        <label>../Object.h</label>
      </node>
      <node id="975">
        <label>../../Utils/VariableLengthInteger/VarLenInt.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="981">
        <label>src/Object/Message/Block.c</label>
        <link refid="_block_8c"/>
      </node>
      <node id="980">
        <label>src/Object/Message/Block.h</label>
        <link refid="_block_8h"/>
        <childnode refid="981" relation="include">
        </childnode>
        <childnode refid="982" relation="include">
        </childnode>
      </node>
      <node id="985">
        <label>src/Object/Message/TransactionInput.c</label>
        <link refid="_transaction_input_8c"/>
      </node>
      <node id="978">
        <label>src/Object/Message/TransactionInput.h</label>
        <link refid="TransactionInput.h"/>
        <childnode refid="979" relation="include">
        </childnode>
        <childnode refid="984" relation="include">
        </childnode>
        <childnode refid="985" relation="include">
        </childnode>
      </node>
      <node id="983">
        <label>src/Object/Message/BlockHeaders.c</label>
        <link refid="_block_headers_8c"/>
      </node>
      <node id="984">
        <label>src/Object/Message/Transaction.c</label>
        <link refid="_transaction_8c"/>
      </node>
      <node id="982">
        <label>src/Object/Message/BlockHeaders.h</label>
        <link refid="_block_headers_8h"/>
        <childnode refid="983" relation="include">
        </childnode>
      </node>
      <node id="979">
        <label>src/Object/Message/Transaction.h</label>
        <link refid="_transaction_8h"/>
        <childnode refid="980" relation="include">
        </childnode>
        <childnode refid="981" relation="include">
        </childnode>
        <childnode refid="984" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
    <innerclass refid="struct_previous_output" prot="public">PreviousOutput</innerclass>
    <innerclass refid="struct_transaction_input" prot="public">TransactionInput</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="_transaction_input_8h_1afdc626c464b97c0e972275510cefa83e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_transaction_input" kindref="compound">TransactionInput</ref> *</type>
        <definition>TransactionInput* createNewTransactionInput</definition>
        <argsstring>(Script *script, uint32_t sequence, ByteArray *prevOutputHash, uint32_t prevOutputIndex, void(*onErrorReceived)(Error error, char *,...))</argsstring>
        <name>createNewTransactionInput</name>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">Script</ref> *</type>
          <declname>script</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>sequence</declname>
        </param>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>prevOutputHash</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>prevOutputIndex</declname>
        </param>
        <param>
          <type>void(*)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref> error, char *,...)</type>
          <declname>onErrorReceived</declname>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="struct_transaction_input" kindref="compound">TransactionInput</ref> object with no inputs or outputs. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>script</parametername>
</parameternamelist>
<parameterdescription>
<para>Computational Script for confirming transaction authorization </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sequence</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_transaction" kindref="compound">Transaction</ref> version as defined by the sender. Intended for &quot;replacement&quot; of transactions when information is updated before inclusion into a block. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prevOutputHash.</parametername>
</parameternamelist>
<parameterdescription>
<para>The hash of the previous transaction. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prevOutputIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the previous transaction </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>onErrorReceived</parametername>
</parameternamelist>
<parameterdescription>
<para>Error handler </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>new <ref refid="struct_transaction_input" kindref="compound">TransactionInput</ref> object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/TransactionInput.h" line="69" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/TransactionInput.c" bodystart="16" bodyend="41"/>
        <references refid="struct_object_1aa353725933e843001d4feb03f8268121" compoundref="_object_8h" startline="29">Object::destroy</references>
        <references refid="_transaction_input_8c_1a69b2387c4e6546f4b33cd0dbfa8e8e10" compoundref="_transaction_input_8c" startline="116" endline="131">destroyTransactionInput</references>
        <references refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5ac0a554045048d2fb61387cf735676f69" compoundref="_constants_8h" startline="52">ERROR_OUT_OF_MEMORY</references>
        <references refid="_object_8c_1a8460165be167be3b0816d84f498e3733" compoundref="_object_8c" startline="42" endline="47">getObject</references>
        <references refid="_transaction_input_8c_1acc3a353fc22eba730627a67412f1c4ab" compoundref="_transaction_input_8c" startline="64" endline="91">initializeTransactionInput</references>
      </memberdef>
      <memberdef kind="function" id="_transaction_input_8h_1a9ad2a4f59818111f157b1386237b8f0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_transaction_input" kindref="compound">TransactionInput</ref> *</type>
        <definition>TransactionInput* createNewTransactionInputFromData</definition>
        <argsstring>(ByteArray *data, void(*onErrorReceived)(Error error, char *,...))</argsstring>
        <name>createNewTransactionInputFromData</name>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>void(*)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref> error, char *,...)</type>
          <declname>onErrorReceived</declname>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="struct_transaction_input" kindref="compound">TransactionInput</ref> from byteArray. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>data.</parametername>
</parameternamelist>
<parameterdescription>
<para>Raw data to create a transactionInput </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>onErrorReceived</parametername>
</parameternamelist>
<parameterdescription>
<para>Error handler </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>new <ref refid="struct_transaction_input" kindref="compound">TransactionInput</ref> object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/TransactionInput.h" line="80" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/TransactionInput.c" bodystart="43" bodyend="61"/>
        <references refid="struct_object_1aa353725933e843001d4feb03f8268121" compoundref="_object_8h" startline="29">Object::destroy</references>
        <references refid="_transaction_input_8c_1a69b2387c4e6546f4b33cd0dbfa8e8e10" compoundref="_transaction_input_8c" startline="116" endline="131">destroyTransactionInput</references>
        <references refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5ac0a554045048d2fb61387cf735676f69" compoundref="_constants_8h" startline="52">ERROR_OUT_OF_MEMORY</references>
        <references refid="_object_8c_1a8460165be167be3b0816d84f498e3733" compoundref="_object_8c" startline="42" endline="47">getObject</references>
        <references refid="_transaction_input_8c_1a1dcdf4361b9341e520e396cb787b5939" compoundref="_transaction_input_8c" startline="93" endline="106">initializeTransactionInputFromData</references>
        <referencedby refid="_transaction_8h_1ada5d9c85c4dc1ff7384ee49d6fd97ff8" compoundref="_transaction_8c" startline="384" endline="534">deserializeTransaction</referencedby>
      </memberdef>
      <memberdef kind="function" id="_transaction_input_8h_1a3ad0ecb9660744784184da2b4fdea805" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int initializeTransactionInput</definition>
        <argsstring>(TransactionInput *self, Script *script, uint32_t sequence, ByteArray *prevOutHash, uint32_t prevOutIndex, void(*onErrorReceived)(Error error, char *,...))</argsstring>
        <name>initializeTransactionInput</name>
        <param>
          <type><ref refid="struct_transaction_input" kindref="compound">TransactionInput</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">Script</ref> *</type>
          <declname>script</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>sequence</declname>
        </param>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>prevOutHash</declname>
          <defname>prevOutputHash</defname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>prevOutIndex</declname>
          <defname>prevOutputIndex</defname>
        </param>
        <param>
          <type>void(*)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref> error, char *,...)</type>
          <declname>onErrorReceived</declname>
        </param>
        <briefdescription>
<para>Initializes a <ref refid="struct_transaction_input" kindref="compound">TransactionInput</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_transaction_input" kindref="compound">TransactionInput</ref> object </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>script</parametername>
</parameternamelist>
<parameterdescription>
<para>Computational Script for confirming transaction authorization </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>sequence</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="struct_transaction" kindref="compound">Transaction</ref> version as defined by the sender. Intended for &quot;replacement&quot; of transactions when information is updated before inclusion into a block. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prevOutputHash.</parametername>
</parameternamelist>
<parameterdescription>
<para>The hash of the previous transaction. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prevOutputIndex</parametername>
</parameternamelist>
<parameterdescription>
<para>Index of the previous transaction </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>onErrorReceived</parametername>
</parameternamelist>
<parameterdescription>
<para>Error handler </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>TRUE on success, FALSE on failure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/TransactionInput.h" line="94" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/TransactionInput.c" bodystart="64" bodyend="91"/>
        <references refid="_constants_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="_constants_8h" startline="89">FALSE</references>
        <references refid="_message_8c_1a9ab128ae9cafefd9b05e2e0bfa719770" compoundref="_message_8c" startline="131" endline="135">getMessage</references>
        <references refid="_object_8c_1a5f22211b2f99a33c1b4b7ad544ce108a" compoundref="_object_8c" startline="81" endline="92">incrementReferenceCount</references>
        <references refid="_message_8c_1abeae03d7e39e468bf5958d4d2b1dc61b" compoundref="_message_8c" startline="94" endline="106">initializeMessageFromObject</references>
        <references refid="_constants_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="_constants_8h" startline="90">TRUE</references>
        <referencedby refid="_transaction_input_8h_1afdc626c464b97c0e972275510cefa83e" compoundref="_transaction_input_8c" startline="16" endline="41">createNewTransactionInput</referencedby>
      </memberdef>
      <memberdef kind="function" id="_transaction_input_8h_1a5dd458f9ef23c28acbc6e018810f578a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int initializeTransactionInputFromData</definition>
        <argsstring>(TransactionInput *self, ByteArray *data, void(*onErrorReceived)(Error error, char *,...))</argsstring>
        <name>initializeTransactionInputFromData</name>
        <param>
          <type><ref refid="struct_transaction_input" kindref="compound">TransactionInput</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>void(*)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref> error, char *,...)</type>
          <declname>onErrorReceived</declname>
        </param>
        <briefdescription>
<para>Initializes a new <ref refid="struct_transaction_input" kindref="compound">TransactionInput</ref> object from the <ref refid="struct_byte_array" kindref="compound">ByteArray</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_transaction_input" kindref="compound">TransactionInput</ref> object to initialize </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>The byte data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>onErrorReceived</parametername>
</parameternamelist>
<parameterdescription>
<para>Error handler </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false on failure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/TransactionInput.h" line="105" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/TransactionInput.c" bodystart="93" bodyend="106"/>
        <references refid="_constants_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="_constants_8h" startline="89">FALSE</references>
        <references refid="_message_8c_1a9ab128ae9cafefd9b05e2e0bfa719770" compoundref="_message_8c" startline="131" endline="135">getMessage</references>
        <references refid="_message_8c_1a297413f770355bd4bd2212e999867031" compoundref="_message_8c" startline="108" endline="123">initializeMessageFromByteArrayData</references>
        <references refid="_constants_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="_constants_8h" startline="90">TRUE</references>
        <referencedby refid="_transaction_input_8h_1a9ad2a4f59818111f157b1386237b8f0c" compoundref="_transaction_input_8c" startline="43" endline="61">createNewTransactionInputFromData</referencedby>
      </memberdef>
      <memberdef kind="function" id="_transaction_input_8h_1ac1ff4d6ebd787ee0314c81a59b99cc11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_transaction_input" kindref="compound">TransactionInput</ref> *</type>
        <definition>TransactionInput* getTransactionInput</definition>
        <argsstring>(void *self)</argsstring>
        <name>getTransactionInput</name>
        <param>
          <type>void *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>brief Gets a <ref refid="struct_transaction_input" kindref="compound">TransactionInput</ref> from another object. Use this to avoid casts </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_transaction_input" kindref="compound">TransactionInput</ref> object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="struct_transaction_input" kindref="compound">TransactionInput</ref> object </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/TransactionInput.h" line="115" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/TransactionInput.c" bodystart="109" bodyend="113"/>
      </memberdef>
      <memberdef kind="function" id="_transaction_input_8h_1a59839939e715a79be4ce4fa8f090d232" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void destroyTransactionInput</definition>
        <argsstring>(void *self)</argsstring>
        <name>destroyTransactionInput</name>
        <param>
          <type>void *</type>
          <declname>self</declname>
          <defname>txIn</defname>
        </param>
        <briefdescription>
<para>Frees a <ref refid="struct_transaction_input" kindref="compound">TransactionInput</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="struct_transaction_input" kindref="compound">TransactionInput</ref> object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>void </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/TransactionInput.h" line="124" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/TransactionInput.c" bodystart="116" bodyend="131"/>
        <references refid="_object_8c_1a0407d34294cdc667982ffa9bd6f18cc9" compoundref="_object_8c" startline="65" endline="79">decrementReferenceCount</references>
        <references refid="_message_8c_1ac2c2a78178aac5f9f228b51d01bf5fe3" compoundref="_message_8c" startline="145" endline="154">destroyMessage</references>
        <referencedby refid="_transaction_input_8h_1afdc626c464b97c0e972275510cefa83e" compoundref="_transaction_input_8c" startline="16" endline="41">createNewTransactionInput</referencedby>
        <referencedby refid="_transaction_input_8h_1a9ad2a4f59818111f157b1386237b8f0c" compoundref="_transaction_input_8c" startline="43" endline="61">createNewTransactionInputFromData</referencedby>
      </memberdef>
      <memberdef kind="function" id="_transaction_input_8h_1a9b0f805aed38d097be8bec7dd8701e50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t serializeTransactionInput</definition>
        <argsstring>(TransactionInput *self)</argsstring>
        <name>serializeTransactionInput</name>
        <param>
          <type><ref refid="struct_transaction_input" kindref="compound">TransactionInput</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Serializes a <ref refid="struct_transaction_input" kindref="compound">TransactionInput</ref> to byte data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>the <ref refid="struct_transaction_input" kindref="compound">TransactionInput</ref> object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the length written on success, 0 on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/TransactionInput.h" line="133" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/TransactionInput.c" bodystart="134" bodyend="175"/>
        <references refid="struct_message_1affc357b616afe9b58c190ae4b21caa77" compoundref="_message_8h" startline="33">Message::bytes</references>
        <references refid="_byte_array_8c_1ad155de39b7e47d41778c0ec219aff1e6" compoundref="_byte_array_8c" startline="381" endline="390">changeByteArrayDataReference</references>
        <references refid="_byte_array_8c_1a7c9e6ea6d3022a2e858e91e207be9ec2" compoundref="_byte_array_8c" startline="28" endline="35">copyByteArrayToByteArray</references>
        <references refid="_var_len_int_8c_1a784e8aad4e7aead2119ede96096f33a9" compoundref="_var_len_int_8c" startline="71" endline="80">createVarLenIntFromUInt64</references>
        <references refid="_var_len_int_8c_1a12852f478f7fcd7cacc0b150fa7fe12a" compoundref="_var_len_int_8c" startline="45" endline="69">encodeVarLenInt</references>
        <references refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5a60284f8679886500015725682ed0a10d" compoundref="_constants_8h" startline="41">ERROR_MESSAGE_SERIALISATION_BAD_BYTES</references>
        <references refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5ab302761b8ba6c3fcab51ef4777465b9d" compoundref="_constants_8h" startline="43">ERROR_MESSAGE_SERIALISATION_BAD_DATA</references>
        <references refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5a1574daad1526eb894269b75627d86b1e" compoundref="_constants_8h" startline="42">ERROR_MESSAGE_SERIALISATION_NULL_BYTES</references>
        <references refid="_byte_array_8c_1a3c6396093509698d1346474653f63421" compoundref="_byte_array_8c" startline="61" endline="66">getByteArray</references>
        <references refid="_message_8c_1a9ab128ae9cafefd9b05e2e0bfa719770" compoundref="_message_8c" startline="131" endline="135">getMessage</references>
        <references refid="struct_byte_array_1aebb70c2aab3407a9f05334c47131a43b" compoundref="_byte_array_8h" startline="33">ByteArray::length</references>
        <references refid="struct_message_1a3c8af4f580f3041d046b7581f89a9695" compoundref="_message_8h" startline="35">Message::onErrorReceived</references>
        <references refid="struct_var_len_int_1af922c72fe1d5915971491918ff5f923e" compoundref="_var_len_int_8h" startline="28">VarLenInt::storageSize</references>
        <references refid="_byte_array_8c_1ab7e0f883b2d3ff4d4b253f4257f6916a" compoundref="_byte_array_8c" startline="337" endline="347">writeInt32AsLittleEndianIntoByteArray</references>
        <referencedby refid="_transaction_8h_1a61a0f76473a17de64dcecc04a3ce3b5f" compoundref="_transaction_8c" startline="259" endline="382">serializeTransaction</referencedby>
      </memberdef>
      <memberdef kind="function" id="_transaction_input_8h_1a8eb115030448e943f94d8ecff0fa21a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t deserializeTransactionInput</definition>
        <argsstring>(TransactionInput *self)</argsstring>
        <name>deserializeTransactionInput</name>
        <param>
          <type><ref refid="struct_transaction_input" kindref="compound">TransactionInput</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>deserializes a <ref refid="struct_transaction_input" kindref="compound">TransactionInput</ref> so that it can be used as an object </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_transaction_input" kindref="compound">TransactionInput</ref> object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The length read on success, 0 on failure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/TransactionInput.h" line="142" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/TransactionInput.c" bodystart="177" bodyend="225"/>
        <references refid="struct_message_1affc357b616afe9b58c190ae4b21caa77" compoundref="_message_8h" startline="33">Message::bytes</references>
        <references refid="_script_8c_1a31a3d8cdecb826da19038679922570d6" compoundref="_script_8c" startline="16" endline="23">createNewScriptFromReference</references>
        <references refid="_var_len_int_8c_1a4dd8c16aa70756e7ab6c0845a09358af" compoundref="_var_len_int_8c" startline="13" endline="43">decodeVarLenInt</references>
        <references refid="_object_8c_1a0407d34294cdc667982ffa9bd6f18cc9" compoundref="_object_8c" startline="65" endline="79">decrementReferenceCount</references>
        <references refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5a61583dbb5057f77e6fc74ab42bea43ce" compoundref="_constants_8h" startline="53">ERROR_INIT_FAIL</references>
        <references refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5a7017f9b2f86ff163d1d6e86cc89b7f63" compoundref="_constants_8h" startline="39">ERROR_MESSAGE_DESERIALISATION_BAD_BYTES</references>
        <references refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5a63040cd367f8f87162668c5853b98d26" compoundref="_constants_8h" startline="40">ERROR_MESSAGE_DESERIALISATION_NULL_BYTES</references>
        <references refid="_byte_array_8c_1aefe112436e17fc5a1c56d263596a612b" compoundref="_byte_array_8c" startline="105" endline="131">getByteArraySubsectionReference</references>
        <references refid="_message_8c_1a9ab128ae9cafefd9b05e2e0bfa719770" compoundref="_message_8c" startline="131" endline="135">getMessage</references>
        <references refid="struct_byte_array_1aebb70c2aab3407a9f05334c47131a43b" compoundref="_byte_array_8h" startline="33">ByteArray::length</references>
        <references refid="struct_message_1a3c8af4f580f3041d046b7581f89a9695" compoundref="_message_8h" startline="35">Message::onErrorReceived</references>
        <references refid="_byte_array_8c_1a6fe303a6a14235d60ef9024a1463d630" compoundref="_byte_array_8c" startline="231" endline="243">readInt32AsLittleEndianFromByteArray</references>
        <references refid="struct_var_len_int_1af922c72fe1d5915971491918ff5f923e" compoundref="_var_len_int_8h" startline="28">VarLenInt::storageSize</references>
        <references refid="struct_var_len_int_1a4e630859cc0e2a22bd6acf39a6a8e218" compoundref="_var_len_int_8h" startline="27">VarLenInt::value</references>
        <referencedby refid="_transaction_8h_1ada5d9c85c4dc1ff7384ee49d6fd97ff8" compoundref="_transaction_8c" startline="384" endline="534">deserializeTransaction</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="struct_transaction_input" kindref="compound">TransactionInput</ref> object. </para>    </briefdescription>
    <detaileddescription>
<para>handles additional structure (transactionIn) for transaction. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>TransactionInput.h</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>07/10/2012</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>by:<sp/>Abdulfatai<sp/>Popoola</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Modified<sp/>by:<sp/>Wen<sp/>Shen,<sp/>Krasnoshtan<sp/>Dmytro</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(c)<sp/>2012<sp/>Bitcoin<sp/>Project<sp/>Team</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="preprocessor">#ifndef<sp/>TRANSACTIONINPUT_H_</highlight></codeline>
<codeline lineno="17"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>TRANSACTIONINPUT_H_</highlight></codeline>
<codeline lineno="18"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_message_8h" kindref="compound" tooltip="Header file for the Message object.">Message.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../Script.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_transaction_output_8h" kindref="compound">TransactionOutput.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="33" refid="struct_previous_output" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="34" refid="struct_previous_output_1a5695540112ce950745e15ab422b3f067" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/><ref refid="struct_previous_output_1a5695540112ce950745e15ab422b3f067" kindref="member">hash</ref>;<sp/></highlight></codeline>
<codeline lineno="35" refid="struct_previous_output_1aafd95f8c7a99b9189ede7cdf0871ebe8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_previous_output_1aafd95f8c7a99b9189ede7cdf0871ebe8" kindref="member">index</ref>;<sp/></highlight></codeline>
<codeline lineno="36"><highlight class="normal">}<sp/><ref refid="struct_previous_output" kindref="compound" tooltip="contains hash of the transaction and the number of outputs. Example of the structure: { hash: &amp;quot;000000...">PreviousOutput</ref>;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="struct_transaction_input" refkind="compound"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal">{</highlight></codeline>
<codeline lineno="52" refid="struct_transaction_input_1a8987f797adf70c3e174fd64cc68bc933" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_message" kindref="compound" tooltip="Structure for Message objects.">Message</ref><sp/><ref refid="struct_transaction_input_1a8987f797adf70c3e174fd64cc68bc933" kindref="member">base</ref>;<sp/></highlight></codeline>
<codeline lineno="53" refid="struct_transaction_input_1a0ab03ef2cc38198d3666a992a245fddf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/><ref refid="struct_transaction_input_1a0ab03ef2cc38198d3666a992a245fddf" kindref="member">sequence</ref>;<sp/></highlight></codeline>
<codeline lineno="54" refid="struct_transaction_input_1ac420de2766b1358b5e325cfc21a76aa3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">Script</ref><sp/>*<sp/><ref refid="struct_transaction_input_1ac420de2766b1358b5e325cfc21a76aa3" kindref="member">scriptObject</ref>;<sp/></highlight></codeline>
<codeline lineno="55" refid="struct_transaction_input_1a20cfe78368fb9825302ce5cdb076f8b1" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_previous_output" kindref="compound" tooltip="contains hash of the transaction and the number of outputs. Example of the structure: { hash: &amp;quot;000000...">PreviousOutput</ref><sp/><ref refid="struct_transaction_input_1a20cfe78368fb9825302ce5cdb076f8b1" kindref="member">prevOutput</ref>;<sp/></highlight></codeline>
<codeline lineno="56"><highlight class="normal">}<sp/><ref refid="struct_transaction_input" kindref="compound" tooltip="contains PreviousOutput structure and Example of the structure: { prev_out: { hash: &amp;quot;0000000000000000...">TransactionInput</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><ref refid="struct_transaction_input" kindref="compound" tooltip="contains PreviousOutput structure and Example of the structure: { prev_out: { hash: &amp;quot;0000000000000000...">TransactionInput</ref><sp/>*<sp/><ref refid="_transaction_input_8c_1a0e16f08f9c0708729d787359238f2f72" kindref="member" tooltip="Creates a new TransactionInput object with no inputs or outputs.">createNewTransactionInput</ref>(<ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">Script</ref><sp/>*<sp/>script,<sp/>uint32_t<sp/>sequence,<sp/><ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/>prevOutputHash,<sp/>uint32_t<sp/>prevOutputIndex,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*onErrorReceived)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref><sp/>error,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,...));</highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><ref refid="struct_transaction_input" kindref="compound" tooltip="contains PreviousOutput structure and Example of the structure: { prev_out: { hash: &amp;quot;0000000000000000...">TransactionInput</ref><sp/>*<sp/><ref refid="_transaction_input_8c_1a0a0421045b605a3baf534d5f32fc60f5" kindref="member" tooltip="Creates a new TransactionInput from byteArray.">createNewTransactionInputFromData</ref>(<ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/>data,</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*onErrorReceived)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref><sp/>error,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,...));</highlight></codeline>
<codeline lineno="81"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_transaction_input_8c_1acc3a353fc22eba730627a67412f1c4ab" kindref="member" tooltip="Initializes a TransactionInput object.">initializeTransactionInput</ref>(<ref refid="struct_transaction_input" kindref="compound" tooltip="contains PreviousOutput structure and Example of the structure: { prev_out: { hash: &amp;quot;0000000000000000...">TransactionInput</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">Script</ref><sp/>*<sp/>script,<sp/>uint32_t<sp/>sequence,<sp/><ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/>prevOutHash,<sp/>uint32_t<sp/>prevOutIndex,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*onErrorReceived)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref><sp/>error,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,...));</highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_transaction_input_8c_1a1dcdf4361b9341e520e396cb787b5939" kindref="member" tooltip="Initializes a new TransactionInput object from the ByteArray.">initializeTransactionInputFromData</ref>(<ref refid="struct_transaction_input" kindref="compound" tooltip="contains PreviousOutput structure and Example of the structure: { prev_out: { hash: &amp;quot;0000000000000000...">TransactionInput</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/>data,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*onErrorReceived)(<ref refid="_constants_8h_1a2c3e4bb40f36b262a5214e2da2bca9c5" kindref="member">Error</ref><sp/>error,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,...));</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><ref refid="struct_transaction_input" kindref="compound" tooltip="contains PreviousOutput structure and Example of the structure: { prev_out: { hash: &amp;quot;0000000000000000...">TransactionInput</ref><sp/>*<sp/><ref refid="_transaction_input_8c_1a2693aaef1ee234cf84ab329f7b259608" kindref="member" tooltip="brief Gets a TransactionInput from another object. Use this to avoid casts">getTransactionInput</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_transaction_input_8c_1a69b2387c4e6546f4b33cd0dbfa8e8e10" kindref="member" tooltip="Frees a TransactionInput object.">destroyTransactionInput</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal">uint32_t<sp/><ref refid="_transaction_input_8c_1addbcc4dbb795f83dc6354fb1cd090858" kindref="member" tooltip="Serializes a TransactionInput to byte data.">serializeTransactionInput</ref>(<ref refid="struct_transaction_input" kindref="compound" tooltip="contains PreviousOutput structure and Example of the structure: { prev_out: { hash: &amp;quot;0000000000000000...">TransactionInput</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal">uint32_t<sp/><ref refid="_transaction_input_8c_1a99fd2ba56d0e215ad42975d7091abbe7" kindref="member" tooltip="deserializes a TransactionInput so that it can be used as an object">deserializeTransactionInput</ref>(<ref refid="struct_transaction_input" kindref="compound" tooltip="contains PreviousOutput structure and Example of the structure: { prev_out: { hash: &amp;quot;0000000000000000...">TransactionInput</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>TRANSACTIONINPUT_H_<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/TransactionInput.h"/>
  </compounddef>
</doxygen>
