<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="_m_i_transaction_8c" kind="file">
    <compoundname>Transaction.c</compoundname>
    <includes refid="_m_i_transaction_8h" local="yes">Transaction.h</includes>
    <includes local="yes">../../Constants.h</includes>
    <includes local="no">stdint.h</includes>
    <includes local="no">assert.h</includes>
    <includes local="yes">../../Utils/VariableLengthInteger/VarLenInt.h</includes>
    <includes local="yes">../ByteArray.h</includes>
    <includes refid="_m_i_transaction_input_8h" local="yes">TransactionInput.h</includes>
    <incdepgraph>
      <node id="398">
        <label>../../Utils/VariableLengthInteger/VarLenInt.h</label>
      </node>
      <node id="403">
        <label>assert.h</label>
      </node>
      <node id="401">
        <label>TransactionOutput.h</label>
        <link refid="_m_i_transaction_output_8h"/>
        <childnode refid="392" relation="include">
        </childnode>
        <childnode refid="400" relation="include">
        </childnode>
      </node>
      <node id="397">
        <label>../Object.h</label>
      </node>
      <node id="400">
        <label>../Script.h</label>
      </node>
      <node id="394">
        <label>stdint.h</label>
      </node>
      <node id="393">
        <label>stdlib.h</label>
      </node>
      <node id="390">
        <label>Object/Message/Transaction.c</label>
        <link refid="Transaction.c"/>
        <childnode refid="391" relation="include">
        </childnode>
        <childnode refid="395" relation="include">
        </childnode>
        <childnode refid="394" relation="include">
        </childnode>
        <childnode refid="403" relation="include">
        </childnode>
        <childnode refid="398" relation="include">
        </childnode>
        <childnode refid="396" relation="include">
        </childnode>
        <childnode refid="399" relation="include">
        </childnode>
      </node>
      <node id="391">
        <label>Transaction.h</label>
        <link refid="_m_i_transaction_8h"/>
        <childnode refid="392" relation="include">
        </childnode>
        <childnode refid="399" relation="include">
        </childnode>
        <childnode refid="401" relation="include">
        </childnode>
        <childnode refid="402" relation="include">
        </childnode>
      </node>
      <node id="399">
        <label>TransactionInput.h</label>
        <link refid="_m_i_transaction_input_8h"/>
        <childnode refid="392" relation="include">
        </childnode>
        <childnode refid="400" relation="include">
        </childnode>
        <childnode refid="401" relation="include">
        </childnode>
      </node>
      <node id="395">
        <label>../../Constants.h</label>
      </node>
      <node id="396">
        <label>../ByteArray.h</label>
      </node>
      <node id="392">
        <label>Message.h</label>
        <link refid="_m_i_message_8h"/>
        <childnode refid="393" relation="include">
        </childnode>
        <childnode refid="394" relation="include">
        </childnode>
        <childnode refid="395" relation="include">
        </childnode>
        <childnode refid="396" relation="include">
        </childnode>
        <childnode refid="397" relation="include">
        </childnode>
        <childnode refid="398" relation="include">
        </childnode>
      </node>
      <node id="402">
        <label>../../Utils/Cryptography/Crypt.h</label>
      </node>
    </incdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="_m_i_transaction_8c_1ad9c9cac2e7fd054ceff9c4a0053ec494" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> *</type>
        <definition>Transaction* createNewTransaction</definition>
        <argsstring>(uint32_t lockTime, uint32_t version, void(*onErrorReceived)(Error error, char *,...))</argsstring>
        <name>createNewTransaction</name>
        <param>
          <type>uint32_t</type>
          <declname>lockTime</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>version</declname>
        </param>
        <param>
          <type>void(*)(<ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968" kindref="member">Error</ref> error, char *,...)</type>
          <declname>onErrorReceived</declname>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object with no inputs or outputs. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A new <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" line="18" bodyfile="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" bodystart="17" bodyend="39"/>
        <references refid="struct_m_i_object_1aa353725933e843001d4feb03f8268121" compoundref="_m_i_object_8h" startline="29">Object::destroy</references>
        <references refid="_m_i_transaction_8c_1a51cc2a726480d71b2b08a871bc4aa8f2" compoundref="_m_i_transaction_8c" startline="98" endline="113">destroyTransaction</references>
        <references refid="_m_i_object_8c_1a0f72e3416dc7f6c52cfb1bf49baac3f2" compoundref="_m_i_object_8c" startline="42" endline="47">getObject</references>
        <references refid="_m_i_transaction_8c_1a8b299a1ed7ad62d46f4d2547463b95fe" compoundref="_m_i_transaction_8c" startline="60" endline="78">initializeTransaction</references>
        <references refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968ad4cc7a4523a7fd575f8d7ae42d20087f" compoundref="_m_i_constants_8h" startline="52">_ERROR_OUT_OF_MEMORY</references>
      </memberdef>
      <memberdef kind="function" id="_m_i_transaction_8c_1ac64b350eebd0ac111556c9323025a5bc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> *</type>
        <definition>Transaction* createNewTransactionFromByteArray</definition>
        <argsstring>(ByteArray *bytes, void(*onErrorReceived)(Error error, char *,...))</argsstring>
        <name>createNewTransactionFromByteArray</name>
        <param>
          <type><ref refid="struct_m_i_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>bytes</declname>
        </param>
        <param>
          <type>void(*)(<ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968" kindref="member">Error</ref> error, char *,...)</type>
          <declname>onErrorReceived</declname>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object from byte data. Should be serialised for object data. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A new <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" line="42" bodyfile="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" bodystart="41" bodyend="57"/>
        <references refid="_m_i_transaction_8c_1addbf01b7d3012da33c2124db978f3424" compoundref="_m_i_transaction_8c" startline="80" endline="95">initializeTransactionFromByteArray</references>
        <references refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968ad4cc7a4523a7fd575f8d7ae42d20087f" compoundref="_m_i_constants_8h" startline="52">_ERROR_OUT_OF_MEMORY</references>
        <referencedby refid="_m_i_block_8h_1a04d2d2defba76492762c0eb4b7ccd206" compoundref="_m_i_block_8c" startline="261" endline="324">deserializeWithTransactions</referencedby>
      </memberdef>
      <memberdef kind="function" id="_m_i_transaction_8c_1a8b299a1ed7ad62d46f4d2547463b95fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int initializeTransaction</definition>
        <argsstring>(Transaction *self, uint32_t lockTime, uint32_t version, void(*onErrorReceived)(Error error, char *,...))</argsstring>
        <name>initializeTransaction</name>
        <param>
          <type><ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>lockTime</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>version</declname>
        </param>
        <param>
          <type>void(*)(<ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968" kindref="member">Error</ref> error, char *,...)</type>
          <declname>onErrorReceived</declname>
        </param>
        <briefdescription>
<para>Initialises a <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object to initialise </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true on success, false on failure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" line="61" bodyfile="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" bodystart="60" bodyend="78"/>
        <references refid="_m_i_constants_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="_m_i_constants_8h" startline="65">FALSE</references>
        <references refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" compoundref="_m_i_message_8c" startline="78" endline="82">getMessage</references>
        <references refid="_m_i_constants_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="_m_i_constants_8h" startline="66">TRUE</references>
        <referencedby refid="_m_i_transaction_8h_1ad9c9cac2e7fd054ceff9c4a0053ec494" compoundref="_m_i_transaction_8c" startline="17" endline="39">createNewTransaction</referencedby>
      </memberdef>
      <memberdef kind="function" id="_m_i_transaction_8c_1addbf01b7d3012da33c2124db978f3424" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int initializeTransactionFromByteArray</definition>
        <argsstring>(Transaction *self, ByteArray *data, void(*onErrorReceived)(Error error, char *,...))</argsstring>
        <name>initializeTransactionFromByteArray</name>
        <param>
          <type><ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct_m_i_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>void(*)(<ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968" kindref="member">Error</ref> error, char *,...)</type>
          <declname>onErrorReceived</declname>
        </param>
        <briefdescription>
<para>Creates a new <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object from byte data. Should be serialised for object data. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>A new <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" line="81" bodyfile="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" bodystart="80" bodyend="95"/>
        <references refid="_m_i_constants_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="_m_i_constants_8h" startline="65">FALSE</references>
        <references refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" compoundref="_m_i_message_8c" startline="78" endline="82">getMessage</references>
        <references refid="_m_i_constants_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="_m_i_constants_8h" startline="66">TRUE</references>
        <referencedby refid="_m_i_transaction_8h_1ac64b350eebd0ac111556c9323025a5bc" compoundref="_m_i_transaction_8c" startline="41" endline="57">createNewTransactionFromByteArray</referencedby>
      </memberdef>
      <memberdef kind="function" id="_m_i_transaction_8c_1a51cc2a726480d71b2b08a871bc4aa8f2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void destroyTransaction</definition>
        <argsstring>(void *transaction)</argsstring>
        <name>destroyTransaction</name>
        <param>
          <type>void *</type>
          <declname>self</declname>
          <defname>transaction</defname>
        </param>
        <briefdescription>
<para>Destructor; destroys a <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object to free. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" line="99" bodyfile="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" bodystart="98" bodyend="113"/>
        <references refid="_m_i_object_8c_1a0407d34294cdc667982ffa9bd6f18cc9" compoundref="_m_i_object_8c" startline="57" endline="71">decrementReferenceCount</references>
        <references refid="_m_i_message_8c_1a17557bbd8e2e7b7d0736c88df25a389e" compoundref="_m_i_message_8c" startline="90" endline="99">destroyMessage</references>
        <references refid="_m_i_object_8c_1a0f72e3416dc7f6c52cfb1bf49baac3f2" compoundref="_m_i_object_8c" startline="42" endline="47">getObject</references>
        <referencedby refid="_m_i_transaction_8h_1ad9c9cac2e7fd054ceff9c4a0053ec494" compoundref="_m_i_transaction_8c" startline="17" endline="39">createNewTransaction</referencedby>
      </memberdef>
      <memberdef kind="function" id="_m_i_transaction_8c_1a52cbd0dba13db4b7356b3b35621dd007" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> *</type>
        <definition>Transaction* getTransaction</definition>
        <argsstring>(void *self)</argsstring>
        <name>getTransaction</name>
        <param>
          <type>void *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Gets a <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> from another object. Use this to avoid casts. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The object to obtain the <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> from. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" line="117" bodyfile="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" bodystart="116" bodyend="120"/>
      </memberdef>
      <memberdef kind="function" id="_m_i_transaction_8c_1aadb6dd710e8c2832fb88ba7b5b0cf409" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int addTransactionInput</definition>
        <argsstring>(Transaction *self, TransactionInput *input)</argsstring>
        <name>addTransactionInput</name>
        <param>
          <type><ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct_m_i_transaction_input" kindref="compound">TransactionInput</ref> *</type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>Adds an <ref refid="struct_m_i_transaction_input" kindref="compound">TransactionInput</ref> to the <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_m_i_transaction_input" kindref="compound">TransactionInput</ref> object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the transaction input was added successfully and false on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" line="125" bodyfile="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" bodystart="124" bodyend="131"/>
        <references refid="_m_i_transaction_8c_1a864921a54d52bf4d9223327b1ae4ba15" compoundref="_m_i_transaction_8c" startline="143" endline="158">addTransactionInputWithoutReference</references>
        <references refid="_m_i_object_8c_1a5f22211b2f99a33c1b4b7ad544ce108a" compoundref="_m_i_object_8c" startline="73" endline="84">incrementReferenceCount</references>
      </memberdef>
      <memberdef kind="function" id="_m_i_transaction_8c_1a322dff87e5fb717f9f21c482ce2fef10" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int addTransactionOutput</definition>
        <argsstring>(Transaction *self, TransactionOutput *output)</argsstring>
        <name>addTransactionOutput</name>
        <param>
          <type><ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct_m_i_transaction_output" kindref="compound">TransactionOutput</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Adds an <ref refid="struct_m_i_transaction_input" kindref="compound">TransactionInput</ref> to the <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref>. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_m_i_transaction_output" kindref="compound">TransactionOutput</ref> object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the transaction output was added successfully and false on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" line="134" bodyfile="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" bodystart="133" bodyend="140"/>
        <references refid="_m_i_transaction_8c_1a864921a54d52bf4d9223327b1ae4ba15" compoundref="_m_i_transaction_8c" startline="143" endline="158">addTransactionInputWithoutReference</references>
        <references refid="_m_i_object_8c_1a5f22211b2f99a33c1b4b7ad544ce108a" compoundref="_m_i_object_8c" startline="73" endline="84">incrementReferenceCount</references>
      </memberdef>
      <memberdef kind="function" id="_m_i_transaction_8c_1a864921a54d52bf4d9223327b1ae4ba15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int addTransactionInputWithoutReference</definition>
        <argsstring>(Transaction *self, TransactionInput *input)</argsstring>
        <name>addTransactionInputWithoutReference</name>
        <param>
          <type><ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct_m_i_transaction_input" kindref="compound">TransactionInput</ref> *</type>
          <declname>input</declname>
        </param>
        <briefdescription>
<para>Adds an <ref refid="struct_m_i_transaction_input" kindref="compound">TransactionInput</ref> to the <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> without retaining it. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_m_i_transaction_input" kindref="compound">TransactionInput</ref> object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the transaction input was taken successfully and false on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" line="144" bodyfile="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" bodystart="143" bodyend="158"/>
        <references refid="_m_i_constants_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="_m_i_constants_8h" startline="65">FALSE</references>
        <references refid="_m_i_constants_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="_m_i_constants_8h" startline="66">TRUE</references>
        <referencedby refid="_m_i_transaction_8h_1aadb6dd710e8c2832fb88ba7b5b0cf409" compoundref="_m_i_transaction_8c" startline="124" endline="131">addTransactionInput</referencedby>
        <referencedby refid="_m_i_transaction_8h_1a322dff87e5fb717f9f21c482ce2fef10" compoundref="_m_i_transaction_8c" startline="133" endline="140">addTransactionOutput</referencedby>
      </memberdef>
      <memberdef kind="function" id="_m_i_transaction_8c_1a9d6b054174739ac0b68a197477e662e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int addTransactionOutputWithoutReference</definition>
        <argsstring>(Transaction *self, TransactionOutput *output)</argsstring>
        <name>addTransactionOutputWithoutReference</name>
        <param>
          <type><ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type><ref refid="struct_m_i_transaction_output" kindref="compound">TransactionOutput</ref> *</type>
          <declname>output</declname>
        </param>
        <briefdescription>
<para>Adds an <ref refid="struct_m_i_transaction_output" kindref="compound">TransactionOutput</ref> to the <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> without retaining it. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_m_i_transaction_output" kindref="compound">TransactionOutput</ref> object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the transaction output was taken successfully and false on error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" line="162" bodyfile="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" bodystart="161" bodyend="176"/>
        <references refid="_m_i_constants_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="_m_i_constants_8h" startline="65">FALSE</references>
        <references refid="_m_i_constants_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="_m_i_constants_8h" startline="66">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="_m_i_transaction_8c_1a6d56a2cbd0b4d755eb1ea24da1f204d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void calculateTransactionHash</definition>
        <argsstring>(Transaction *self, uint8_t *hash)</argsstring>
        <name>calculateTransactionHash</name>
        <param>
          <type><ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> *</type>
          <declname>self</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
<para>Calculates the hash for a transaction. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object. This should be serialised. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>The</parametername>
</parameternamelist>
<parameterdescription>
<para>hash for the transaction to be set. This should be 32 bytes long. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" line="179" bodyfile="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" bodystart="178" bodyend="188"/>
        <references refid="_m_i_byte_array_8c_1a29dc51ffba948226c028baf425096408" compoundref="_m_i_byte_array_8c" startline="46" endline="51">getDataFromByteArray</references>
        <references refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" compoundref="_m_i_message_8c" startline="78" endline="82">getMessage</references>
        <references refid="struct_m_i_byte_array_1aebb70c2aab3407a9f05334c47131a43b" compoundref="_m_i_byte_array_8h" startline="33">ByteArray::length</references>
        <references refid="_m_i_crypt_8c_1ab62ec3041775f1d56093fa4096c2ef84" compoundref="_m_i_crypt_8c" startline="26" endline="33">Sha256</references>
        <referencedby refid="_m_i_transaction_8h_1ae77b886a61562d010b212219acbeed9c" compoundref="_m_i_transaction_8c" startline="190" endline="199">getTransactionHash</referencedby>
      </memberdef>
      <memberdef kind="function" id="_m_i_transaction_8c_1ae77b886a61562d010b212219acbeed9c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint8_t *</type>
        <definition>uint8_t* getTransactionHash</definition>
        <argsstring>(Transaction *self)</argsstring>
        <name>getTransactionHash</name>
        <param>
          <type><ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Retrieves or calculates the hash for a transaction. Hashes taken from this function are cached. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object. This should be serialised. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The hash for the transaction. This is a 32 byte long, double SHA-256 hash and is a pointer to the hash field in the transaction. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" line="191" bodyfile="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" bodystart="190" bodyend="199"/>
        <references refid="_m_i_transaction_8c_1a6d56a2cbd0b4d755eb1ea24da1f204d1" compoundref="_m_i_transaction_8c" startline="178" endline="188">calculateTransactionHash</references>
      </memberdef>
      <memberdef kind="function" id="_m_i_transaction_8c_1a399ecdc9998cfe26c0f2a1928572b54b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t calculateTransactionLength</definition>
        <argsstring>(Transaction *self)</argsstring>
        <name>calculateTransactionLength</name>
        <param>
          <type><ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Calculates the length of an <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref>; this is needed to serialise the object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The length of the <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> on success, 0 on failure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" line="202" bodyfile="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" bodystart="201" bodyend="230"/>
        <references refid="_m_i_var_len_int_8c_1a960ae6b1a5365789aec7b7055a36dbd7" compoundref="_m_i_var_len_int_8c" startline="81" endline="93">getSizeOfVarLenInt</references>
        <referencedby refid="_m_i_block_8h_1ab3c577ac4b13bc68f0ac3f82159969a6" compoundref="_m_i_block_8c" startline="201" endline="216">calculateBlockLength</referencedby>
      </memberdef>
      <memberdef kind="function" id="_m_i_transaction_8c_1a61c55efd86e87797526fc63273ad61d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int isCoinBase</definition>
        <argsstring>(Transaction *self)</argsstring>
        <name>isCoinBase</name>
        <param>
          <type><ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Determines if a transaction is a coinbase transaction or not. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>true if the transaction is a coin-base transaction or false if not. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" line="233" bodyfile="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" bodystart="232" bodyend="241"/>
        <references refid="_m_i_byte_array_8c_1aff8e512253db16092e10359b31e732b9" compoundref="_m_i_byte_array_8c" startline="27" endline="36">isNullByteArray</references>
      </memberdef>
      <memberdef kind="function" id="_m_i_transaction_8c_1a1abc45d369c2884698692d79091f5b2c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t serializeTransaction</definition>
        <argsstring>(Transaction *self)</argsstring>
        <name>serializeTransaction</name>
        <param>
          <type><ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Serialises a <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> to byte data. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The length read on success, 0 on failure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" line="244" bodyfile="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" bodystart="243" bodyend="366"/>
        <references refid="struct_m_i_message_1a8fb493ee3c32dd3a9fb29bc71c852f86" compoundref="_m_i_message_8h" startline="26">Message::bytes</references>
        <references refid="_m_i_var_len_int_8c_1ab415150158b7af4b63eb360b384b5ec0" compoundref="_m_i_var_len_int_8c" startline="71" endline="79">createVarLenIntFromUInt64</references>
        <references refid="_m_i_object_8c_1a0407d34294cdc667982ffa9bd6f18cc9" compoundref="_m_i_object_8c" startline="57" endline="71">decrementReferenceCount</references>
        <references refid="_m_i_object_8c_1a71704ab4fbecb7d85276d32649b5349a" compoundref="_m_i_object_8c" startline="51" endline="55">destroyObject</references>
        <references refid="_m_i_var_len_int_8c_1a332f03b156163565574788bc3cedd522" compoundref="_m_i_var_len_int_8c" startline="45" endline="69">encodeVarLenInt</references>
        <references refid="_m_i_byte_array_8c_1a22681d5a43566996273c64d34d669806" compoundref="_m_i_byte_array_8c" startline="61" endline="86">getByteArraySubsectionReference</references>
        <references refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" compoundref="_m_i_message_8c" startline="78" endline="82">getMessage</references>
        <references refid="struct_m_i_byte_array_1aebb70c2aab3407a9f05334c47131a43b" compoundref="_m_i_byte_array_8h" startline="33">ByteArray::length</references>
        <references refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968ac44c4a273612af5ceabd09df473706f4" compoundref="_m_i_constants_8h" startline="53">_ERROR_INIT_FAIL</references>
        <references refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968abd324fa69626e40713b7c4e1e6eef9f9" compoundref="_m_i_constants_8h" startline="39">_ERROR_MESSAGE_DESERIALISATION_BAD_BYTES</references>
        <references refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968aea18ededd7bee318c95d90cff53fffba" compoundref="_m_i_constants_8h" startline="41">_ERROR_MESSAGE_SERIALISATION_BAD_BYTES</references>
        <references refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968ac8ae144568e5761507c7d026a2531875" compoundref="_m_i_constants_8h" startline="42">_ERROR_MESSAGE_SERIALISATION_NULL_BYTES</references>
        <references refid="struct_m_i_message_1aeb0776cff292839518da5f5a48884fd9" compoundref="_m_i_message_8h" startline="28">Message::onErrorReceived</references>
        <references refid="_m_i_transaction_input_8c_1a1dc5b6d2e7b70e918572bedd9ee6abf9" compoundref="_m_i_transaction_input_8c" startline="128" endline="177">serializeTransactionInput</references>
        <references refid="_m_i_transaction_output_8c_1a16b79dfd79f1bec2dce3b0865766b48e" compoundref="_m_i_transaction_output_8c" startline="125" endline="163">serializeTransactionOutput</references>
        <references refid="struct_m_i_var_len_int_1af922c72fe1d5915971491918ff5f923e" compoundref="_m_i_var_len_int_8h" startline="28">VarLenInt::storageSize</references>
        <references refid="_m_i_byte_array_8c_1aa4d465553a3c7f80c1700316f2410b40" compoundref="_m_i_byte_array_8c" startline="207" endline="217">writeInt32AsLittleEndianIntoByteArray</references>
        <referencedby refid="_m_i_block_8h_1a3fa07e825a149c98d148b215a5d5a78a" compoundref="_m_i_block_8c" startline="416" endline="449">dealWithSerializationTran</referencedby>
      </memberdef>
      <memberdef kind="function" id="_m_i_transaction_8c_1a8777f695fbbb547e32b9c0347b6b2026" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint32_t</type>
        <definition>uint32_t deserializeTransaction</definition>
        <argsstring>(Transaction *self)</argsstring>
        <name>deserializeTransaction</name>
        <param>
          <type><ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> *</type>
          <declname>self</declname>
        </param>
        <briefdescription>
<para>Deserialises a <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> so that it can be used as an object. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>self</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The length read on success, 0 on failure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" line="369" bodyfile="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" bodystart="368" bodyend="518"/>
        <references refid="struct_m_i_message_1a8fb493ee3c32dd3a9fb29bc71c852f86" compoundref="_m_i_message_8h" startline="26">Message::bytes</references>
        <references refid="_m_i_transaction_input_8c_1a6ce74856deb61a054db563a0382b0ff2" compoundref="_m_i_transaction_input_8c" startline="43" endline="61">createNewTransactionInputFromData</references>
        <references refid="_m_i_transaction_output_8c_1ad147138cc70f16d81e3b66a00ae700af" compoundref="_m_i_transaction_output_8c" startline="40" endline="60">createNewTransactionOutputFromData</references>
        <references refid="_m_i_var_len_int_8c_1a0492e373e2d12e41b1764b580f287af9" compoundref="_m_i_var_len_int_8c" startline="13" endline="43">decodeVarLenInt</references>
        <references refid="_m_i_object_8c_1a0407d34294cdc667982ffa9bd6f18cc9" compoundref="_m_i_object_8c" startline="57" endline="71">decrementReferenceCount</references>
        <references refid="_m_i_transaction_input_8c_1ad375fb1ac6adc4cfeafc59b89ab811b9" compoundref="_m_i_transaction_input_8c" startline="179" endline="240">deserializeTransactionInput</references>
        <references refid="_m_i_transaction_output_8c_1aec03af57e070260915cbf2491802df55" compoundref="_m_i_transaction_output_8c" startline="165" endline="233">deserializeTransactionOutput</references>
        <references refid="_m_i_byte_array_8c_1a22681d5a43566996273c64d34d669806" compoundref="_m_i_byte_array_8c" startline="61" endline="86">getByteArraySubsectionReference</references>
        <references refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" compoundref="_m_i_message_8c" startline="78" endline="82">getMessage</references>
        <references refid="struct_m_i_byte_array_1aebb70c2aab3407a9f05334c47131a43b" compoundref="_m_i_byte_array_8h" startline="33">ByteArray::length</references>
        <references refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968ac44c4a273612af5ceabd09df473706f4" compoundref="_m_i_constants_8h" startline="53">_ERROR_INIT_FAIL</references>
        <references refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968abd324fa69626e40713b7c4e1e6eef9f9" compoundref="_m_i_constants_8h" startline="39">_ERROR_MESSAGE_DESERIALISATION_BAD_BYTES</references>
        <references refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968a92f5f1cd8d49eb6264885735124551cf" compoundref="_m_i_constants_8h" startline="40">_ERROR_MESSAGE_DESERIALISATION_NULL_BYTES</references>
        <references refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968ad4cc7a4523a7fd575f8d7ae42d20087f" compoundref="_m_i_constants_8h" startline="52">_ERROR_OUT_OF_MEMORY</references>
        <references refid="struct_m_i_message_1aeb0776cff292839518da5f5a48884fd9" compoundref="_m_i_message_8h" startline="28">Message::onErrorReceived</references>
        <references refid="_m_i_byte_array_8c_1aab10685017fe16769d5b22c826ada9f8" compoundref="_m_i_byte_array_8c" startline="144" endline="156">readInt32AsLittleEndianFromByteArray</references>
        <references refid="struct_m_i_var_len_int_1af922c72fe1d5915971491918ff5f923e" compoundref="_m_i_var_len_int_8h" startline="28">VarLenInt::storageSize</references>
        <references refid="struct_m_i_var_len_int_1a4e630859cc0e2a22bd6acf39a6a8e218" compoundref="_m_i_var_len_int_8h" startline="27">VarLenInt::value</references>
        <referencedby refid="_m_i_block_8h_1a04d2d2defba76492762c0eb4b7ccd206" compoundref="_m_i_block_8c" startline="261" endline="324">deserializeWithTransactions</referencedby>
      </memberdef>
      <memberdef kind="function" id="_m_i_transaction_8c_1a66ab860229cbd11f1206df9bb9196728" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="_m_i_constants_8h_1a7e14717182fa5c1cd0fd5502ecaa04e0" kindref="member">TransactionHashStatus</ref></type>
        <definition>TransactionHashStatus getTransactionInputHashForVerification</definition>
        <argsstring>(void *txIn, ByteArray *prevOutSubScript, uint32_t input, SignatureType signType, uint8_t *hash)</argsstring>
        <name>getTransactionInputHashForVerification</name>
        <param>
          <type>void *</type>
          <declname>vself</declname>
          <defname>txIn</defname>
        </param>
        <param>
          <type><ref refid="struct_m_i_byte_array" kindref="compound">ByteArray</ref> *</type>
          <declname>prevOutSubScript</declname>
        </param>
        <param>
          <type>uint32_t</type>
          <declname>input</declname>
        </param>
        <param>
          <type><ref refid="_m_i_constants_8h_1a4fd54932b907311989c5752c6942742a" kindref="member">SignatureType</ref></type>
          <declname>signType</declname>
        </param>
        <param>
          <type>uint8_t *</type>
          <declname>hash</declname>
        </param>
        <briefdescription>
<para>Gets the hash for signing or signature checking for a transaction input. The transaction input needs to contain the outPointerHash, outPointerIndex and sequence. If these are modifed afterwards then the signiture is invalid. </para>        </briefdescription>
        <detaileddescription>
<para>TRANSACTION SIGNING <parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>vself</parametername>
</parameternamelist>
<parameterdescription>
<para>The <ref refid="struct_m_i_transaction" kindref="compound">Transaction</ref> object. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>prevOutSubScript</parametername>
</parameternamelist>
<parameterdescription>
<para>The sub script from the output. Must be the correct one or the signiture will be invalid. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>input</parametername>
</parameternamelist>
<parameterdescription>
<para>The index of the input to sign. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>signType</parametername>
</parameternamelist>
<parameterdescription>
<para>The type of signature to get the data for. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hash</parametername>
</parameternamelist>
<parameterdescription>
<para>The 32 byte data hash for signing or checking signatures. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>_TX_HASH_OK if the hash has been retreived with no problems. _TX_HASH_BAD is returned if the hash is invalid and _TX_HASH_ERR is returned upon an error. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" line="522" bodyfile="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c" bodystart="520" bodyend="664"/>
        <references refid="_m_i_byte_array_8c_1a949c73acfab0c6c4d83ad8c07d999364" compoundref="_m_i_byte_array_8c" startline="17" endline="24">copyByteArrayToByteArray</references>
        <references refid="_m_i_var_len_int_8c_1ab415150158b7af4b63eb360b384b5ec0" compoundref="_m_i_var_len_int_8c" startline="71" endline="79">createVarLenIntFromUInt64</references>
        <references refid="_m_i_byte_array_8c_1a2db5c01eeb9fbe1d8350ab99392be437" compoundref="_m_i_byte_array_8c" startline="243" endline="255">createNewByteArrayOfSize</references>
        <references refid="_m_i_var_len_int_8c_1a332f03b156163565574788bc3cedd522" compoundref="_m_i_var_len_int_8c" startline="45" endline="69">encodeVarLenInt</references>
        <references refid="_m_i_byte_array_8c_1a29dc51ffba948226c028baf425096408" compoundref="_m_i_byte_array_8c" startline="46" endline="51">getDataFromByteArray</references>
        <references refid="_m_i_byte_array_8c_1a673fc907bf90724f9fbfad124d3ed9e2" compoundref="_m_i_byte_array_8c" startline="39" endline="44">getByteArray</references>
        <references refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" compoundref="_m_i_message_8c" startline="78" endline="82">getMessage</references>
        <references refid="_m_i_var_len_int_8c_1a960ae6b1a5365789aec7b7055a36dbd7" compoundref="_m_i_var_len_int_8c" startline="81" endline="93">getSizeOfVarLenInt</references>
        <references refid="struct_m_i_byte_array_1aebb70c2aab3407a9f05334c47131a43b" compoundref="_m_i_byte_array_8h" startline="33">ByteArray::length</references>
        <references refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968a705f025e78042406ea8b25c6e574ed94" compoundref="_m_i_constants_8h" startline="47">_ERROR_TRANSACTION_FEW_INPUTS</references>
        <references refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968a83536036db8250da8add01626c09e3c3" compoundref="_m_i_constants_8h" startline="48">_ERROR_TRANSACTION_FEW_OUTPUTS</references>
        <references refid="_m_i_constants_8h_1a4fd54932b907311989c5752c6942742aa4cbb6f8e9c33007b0dd86139c5444d63" compoundref="_m_i_constants_8h" startline="85">_SIGHASH_ANYONECANPAY</references>
        <references refid="_m_i_constants_8h_1a4fd54932b907311989c5752c6942742aa4eb90e2ee630ba32437b0cbbe95b9ede" compoundref="_m_i_constants_8h" startline="83">_SIGHASH_NONE</references>
        <references refid="_m_i_constants_8h_1a4fd54932b907311989c5752c6942742aa032938cf4fbf7498b6f85f5659bc28c5" compoundref="_m_i_constants_8h" startline="84">_SIGHASH_SINGLE</references>
        <references refid="_m_i_crypt_8c_1ab62ec3041775f1d56093fa4096c2ef84" compoundref="_m_i_crypt_8c" startline="26" endline="33">Sha256</references>
        <references refid="struct_m_i_message_1aeb0776cff292839518da5f5a48884fd9" compoundref="_m_i_message_8h" startline="28">Message::onErrorReceived</references>
        <references refid="struct_m_i_var_len_int_1af922c72fe1d5915971491918ff5f923e" compoundref="_m_i_var_len_int_8h" startline="28">VarLenInt::storageSize</references>
        <references refid="_m_i_constants_8h_1a7e14717182fa5c1cd0fd5502ecaa04e0ab8cb7847f95d8209bd64c5bd4cdce830" compoundref="_m_i_constants_8h" startline="76">TX_HASH_BAD</references>
        <references refid="_m_i_constants_8h_1a7e14717182fa5c1cd0fd5502ecaa04e0ae372182e92ec6fd8774695846b3d8845" compoundref="_m_i_constants_8h" startline="77">TX_HASH_FAIL</references>
        <references refid="_m_i_constants_8h_1a7e14717182fa5c1cd0fd5502ecaa04e0a9f46366755423a053481edc37bd853d0" compoundref="_m_i_constants_8h" startline="75">TX_HASH_GOOD</references>
        <references refid="struct_m_i_var_len_int_1a4e630859cc0e2a22bd6acf39a6a8e218" compoundref="_m_i_var_len_int_8h" startline="27">VarLenInt::value</references>
        <references refid="_m_i_byte_array_8c_1aa4d465553a3c7f80c1700316f2410b40" compoundref="_m_i_byte_array_8c" startline="207" endline="217">writeInt32AsLittleEndianIntoByteArray</references>
        <references refid="_m_i_byte_array_8c_1ac10e90995fc8a98db44d71607ef0ede7" compoundref="_m_i_byte_array_8c" startline="218" endline="232">writeInt64AsLittleEndianIntoByteArray</references>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/>*<sp/>Transcation.c</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>on:<sp/>04/10/2012</highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/>*<sp/><sp/>Created<sp/>by:<sp/>Abdulfatai<sp/>Popoola</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/>*<sp/><sp/>Copyright<sp/>(c)<sp/>2012<sp/>Bitcoin<sp/>Project<sp/>Team</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_m_i_transaction_8h" kindref="compound">Transaction.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../Constants.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../../Utils/VariableLengthInteger/VarLenInt.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;../ByteArray.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="_m_i_transaction_input_8h" kindref="compound">TransactionInput.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Constructors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17" refid="_m_i_transaction_8h_1ad9c9cac2e7fd054ceff9c4a0053ec494" refkind="member"><highlight class="normal"><ref refid="struct_m_i_transaction" kindref="compound" tooltip="Structure for Transaction objects.">Transaction</ref><sp/>*<sp/><ref refid="_m_i_transaction_8c_1ad9c9cac2e7fd054ceff9c4a0053ec494" kindref="member" tooltip="Creates a new Transaction object with no inputs or outputs.">createNewTransaction</ref>(uint32_t<sp/>lockTime,<sp/>uint32_t<sp/>version,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*onErrorReceived)(<ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968" kindref="member">Error</ref><sp/>error,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,...))</highlight></codeline>
<codeline lineno="18"><highlight class="normal">{</highlight></codeline>
<codeline lineno="19"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(lockTime<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(version<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(onErrorReceived<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_m_i_transaction" kindref="compound" tooltip="Structure for Transaction objects.">Transaction</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">self</highlight><highlight class="normal">));<sp/></highlight><highlight class="comment">/*Create<sp/>memory<sp/>for<sp/>Transacton<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keyword">self</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="26"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>onErrorReceived(<ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968ad4cc7a4523a7fd575f8d7ae42d20087f" kindref="member">_ERROR_OUT_OF_MEMORY</ref>,</highlight><highlight class="stringliteral">&quot;Cannot<sp/>allocate<sp/>%i<sp/>bytes<sp/>of<sp/>memory<sp/>for<sp/>NewTransaction<sp/>in<sp/>createNewTransaction\n&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">self</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_object_8c_1a0f72e3416dc7f6c52cfb1bf49baac3f2" kindref="member" tooltip="Casts the pointer to the Object; use this to avoid explicitly casting.">getObject</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)-&gt;<ref refid="struct_m_i_object_1aa353725933e843001d4feb03f8268121" kindref="member">destroy</ref><sp/>=<sp/><ref refid="_m_i_transaction_8c_1a51cc2a726480d71b2b08a871bc4aa8f2" kindref="member" tooltip="Destructor; destroys a Transaction object.">destroyTransaction</ref>;<sp/></highlight><highlight class="comment">/*assign<sp/>destructor<sp/>function<sp/>to<sp/>object*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_m_i_transaction_8c_1a8b299a1ed7ad62d46f4d2547463b95fe" kindref="member" tooltip="Initialises a Transaction object.">initializeTransaction</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>lockTime,<sp/>version,<sp/>onErrorReceived)){</highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="34"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialization<sp/>failed;<sp/>Clean<sp/>up<sp/>everything<sp/>and<sp/>return<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="39"><highlight class="normal">}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41" refid="_m_i_transaction_8h_1ac64b350eebd0ac111556c9323025a5bc" refkind="member"><highlight class="normal"><ref refid="struct_m_i_transaction" kindref="compound" tooltip="Structure for Transaction objects.">Transaction</ref><sp/>*<sp/><ref refid="_m_i_transaction_8c_1ac64b350eebd0ac111556c9323025a5bc" kindref="member" tooltip="Creates a new Transaction object from byte data. Should be serialised for object data...">createNewTransactionFromByteArray</ref>(<ref refid="struct_m_i_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/>bytes,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*onErrorReceived)(<ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968" kindref="member">Error</ref><sp/>error,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,...))</highlight></codeline>
<codeline lineno="42"><highlight class="normal">{</highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_m_i_transaction" kindref="compound" tooltip="Structure for Transaction objects.">Transaction</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">self</highlight><highlight class="normal">));<sp/></highlight><highlight class="comment">/*Create<sp/>memory<sp/>for<sp/>Transacton*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!</highlight><highlight class="keyword">self</highlight><highlight class="normal">)<sp/>{</highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>onErrorReceived(<ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968ad4cc7a4523a7fd575f8d7ae42d20087f" kindref="member">_ERROR_OUT_OF_MEMORY</ref>,</highlight><highlight class="stringliteral">&quot;Cannot<sp/>allocate<sp/>%i<sp/>bytes<sp/>of<sp/>memory<sp/>for<sp/>NewTransaction<sp/>in<sp/>createNewTransactionFromByteArray\n&quot;</highlight><highlight class="normal">,</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">self</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<ref refid="_m_i_transaction_8c_1addbf01b7d3012da33c2124db978f3424" kindref="member" tooltip="Creates a new Transaction object from byte data. Should be serialised for object data...">initializeTransactionFromByteArray</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>bytes,<sp/>onErrorReceived)){</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Initialization<sp/>failed;<sp/>Clean<sp/>up<sp/>everything<sp/>and<sp/>return<sp/>NULL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(</highlight><highlight class="keyword">self</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="57"><highlight class="normal">}</highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment">/*Initializers*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="_m_i_transaction_8h_1a8b299a1ed7ad62d46f4d2547463b95fe" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_m_i_transaction_8c_1a8b299a1ed7ad62d46f4d2547463b95fe" kindref="member" tooltip="Initialises a Transaction object.">initializeTransaction</ref>(<ref refid="struct_m_i_transaction" kindref="compound" tooltip="Structure for Transaction objects.">Transaction</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>uint32_t<sp/>lockTime,<sp/>uint32_t<sp/>version,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*onErrorReceived)(<ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968" kindref="member">Error</ref><sp/>error,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,...))</highlight></codeline>
<codeline lineno="61"><highlight class="normal">{</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(lockTime<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(version<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(onErrorReceived<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;lockTime<sp/>=<sp/>lockTime;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numOfTransactionInput<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numOfTransactionOutput<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;inputs<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;outputs<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;version<sp/>=<sp/>version;</highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!initializeMessage(<ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">),<sp/>onErrorReceived)){</highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_m_i_constants_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Failed<sp/>initialization*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_m_i_constants_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="78"><highlight class="normal">}</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="_m_i_transaction_8h_1addbf01b7d3012da33c2124db978f3424" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_m_i_transaction_8c_1addbf01b7d3012da33c2124db978f3424" kindref="member" tooltip="Creates a new Transaction object from byte data. Should be serialised for object data...">initializeTransactionFromByteArray</ref>(<ref refid="struct_m_i_transaction" kindref="compound" tooltip="Structure for Transaction objects.">Transaction</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct_m_i_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/>data,</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>(*onErrorReceived)(<ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968" kindref="member">Error</ref><sp/>error,</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*,...))</highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(data<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(onErrorReceived<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numOfTransactionInput<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numOfTransactionOutput<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;inputs<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;outputs<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!initializeMessageFromByteArray(<ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">),<sp/>data,<sp/>onErrorReceived)){</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_m_i_constants_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;<sp/></highlight><highlight class="comment">/*Failed<sp/>initialization*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_m_i_constants_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="95"><highlight class="normal">}</highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment">/*Destructors*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98" refid="_m_i_transaction_8h_1aa5860a9ff5209146c9b028103977bb5b" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_m_i_transaction_8c_1a51cc2a726480d71b2b08a871bc4aa8f2" kindref="member" tooltip="Destructor; destroys a Transaction object.">destroyTransaction</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>transaction)</highlight></codeline>
<codeline lineno="99"><highlight class="normal">{</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_m_i_transaction" kindref="compound" tooltip="Structure for Transaction objects.">Transaction</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>transaction;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>i;</highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numOfTransactionInput;<sp/>i++){</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_object_8c_1a0407d34294cdc667982ffa9bd6f18cc9" kindref="member" tooltip="Decrease the number in the reference counter. (It keeps track of how many objects have been created)...">decrementReferenceCount</ref>(self-&gt;inputs[i]);<sp/></highlight><highlight class="comment">/*handles<sp/>cleaning<sp/>up<sp/>of<sp/>referenced<sp/>object<sp/>once<sp/>num<sp/>of<sp/>references<sp/>get<sp/>to<sp/>zero*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(self-&gt;numOfTransactionInput);</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>j;</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numOfTransactionOutput;<sp/>j++){</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_object_8c_1a0407d34294cdc667982ffa9bd6f18cc9" kindref="member" tooltip="Decrease the number in the reference counter. (It keeps track of how many objects have been created)...">decrementReferenceCount</ref>(self-&gt;outputs[j]);<sp/></highlight><highlight class="comment">/*handles<sp/>cleaning<sp/>up<sp/>of<sp/>referenced<sp/>object<sp/>once<sp/>num<sp/>of<sp/>references<sp/>get<sp/>to<sp/>zero*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free(self-&gt;numOfTransactionOutput);</highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_message_8c_1a17557bbd8e2e7b7d0736c88df25a389e" kindref="member" tooltip="destroys the memory allocated to a Message object.">destroyMessage</ref>(<ref refid="_m_i_object_8c_1a0f72e3416dc7f6c52cfb1bf49baac3f2" kindref="member" tooltip="Casts the pointer to the Object; use this to avoid explicitly casting.">getObject</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="113"><highlight class="normal">}</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Getter*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116" refid="_m_i_transaction_8h_1a52cbd0dba13db4b7356b3b35621dd007" refkind="member"><highlight class="normal"><ref refid="struct_m_i_transaction" kindref="compound" tooltip="Structure for Transaction objects.">Transaction</ref><sp/>*<sp/><ref refid="_m_i_transaction_8c_1a52cbd0dba13db4b7356b3b35621dd007" kindref="member" tooltip="Gets a Transaction from another object. Use this to avoid casts.">getTransaction</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="117"><highlight class="normal">{</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="120"><highlight class="normal">}</highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment">/*Methods*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124" refid="_m_i_transaction_8h_1aadb6dd710e8c2832fb88ba7b5b0cf409" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_m_i_transaction_8c_1aadb6dd710e8c2832fb88ba7b5b0cf409" kindref="member" tooltip="Adds an TransactionInput to the Transaction.">addTransactionInput</ref>(<ref refid="struct_m_i_transaction" kindref="compound" tooltip="Structure for Transaction objects.">Transaction</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct_m_i_transaction_input" kindref="compound" tooltip="Structure for TransactionInput objects.">TransactionInput</ref><sp/>*<sp/>input)</highlight></codeline>
<codeline lineno="125"><highlight class="normal">{</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(input<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_object_8c_1a5f22211b2f99a33c1b4b7ad544ce108a" kindref="member" tooltip="Increase the number in the reference counter. (It keeps track of how many objects have been created)...">incrementReferenceCount</ref>(input);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_m_i_transaction_8c_1a864921a54d52bf4d9223327b1ae4ba15" kindref="member" tooltip="Adds an TransactionInput to the Transaction without retaining it.">addTransactionInputWithoutReference</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>input);</highlight></codeline>
<codeline lineno="131"><highlight class="normal">}</highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133" refid="_m_i_transaction_8h_1a322dff87e5fb717f9f21c482ce2fef10" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_m_i_transaction_8c_1a322dff87e5fb717f9f21c482ce2fef10" kindref="member" tooltip="Adds an TransactionInput to the Transaction.">addTransactionOutput</ref>(<ref refid="struct_m_i_transaction" kindref="compound" tooltip="Structure for Transaction objects.">Transaction</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct_m_i_transaction_output" kindref="compound">TransactionOutput</ref><sp/>*<sp/>output)</highlight></codeline>
<codeline lineno="134"><highlight class="normal">{</highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(output<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_object_8c_1a5f22211b2f99a33c1b4b7ad544ce108a" kindref="member" tooltip="Increase the number in the reference counter. (It keeps track of how many objects have been created)...">incrementReferenceCount</ref>(output);</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_m_i_transaction_8c_1a864921a54d52bf4d9223327b1ae4ba15" kindref="member" tooltip="Adds an TransactionInput to the Transaction without retaining it.">addTransactionInputWithoutReference</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>output);</highlight></codeline>
<codeline lineno="140"><highlight class="normal">}</highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>TODO<sp/>Rename<sp/>to<sp/>addUnreferencedTransactionInput?*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143" refid="_m_i_transaction_8h_1a864921a54d52bf4d9223327b1ae4ba15" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_m_i_transaction_8c_1a864921a54d52bf4d9223327b1ae4ba15" kindref="member" tooltip="Adds an TransactionInput to the Transaction without retaining it.">addTransactionInputWithoutReference</ref>(<ref refid="struct_m_i_transaction" kindref="compound" tooltip="Structure for Transaction objects.">Transaction</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct_m_i_transaction_input" kindref="compound" tooltip="Structure for TransactionInput objects.">TransactionInput</ref><sp/>*<sp/>input)</highlight></codeline>
<codeline lineno="144"><highlight class="normal">{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(input<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numOfTransactionInput++;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;inputs)<sp/>*<sp/>self-&gt;numOfTransactionInput;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_m_i_transaction_input" kindref="compound" tooltip="Structure for TransactionInput objects.">TransactionInput</ref><sp/>**<sp/>tmp<sp/>=<sp/>realloc(self-&gt;inputs,<sp/>size);</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tmp){</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_m_i_constants_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;inputs<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;inputs[</highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numOfTransactionInput<sp/>-<sp/>1]<sp/>=<sp/>input;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_m_i_constants_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="158"><highlight class="normal">}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="comment">/*TODO<sp/>Rename<sp/>to<sp/>addUnreferencedTransactionOutput?*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161" refid="_m_i_transaction_8h_1a9d6b054174739ac0b68a197477e662e6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_m_i_transaction_8c_1a9d6b054174739ac0b68a197477e662e6" kindref="member" tooltip="Adds an TransactionOutput to the Transaction without retaining it.">addTransactionOutputWithoutReference</ref>(<ref refid="struct_m_i_transaction" kindref="compound" tooltip="Structure for Transaction objects.">Transaction</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/><ref refid="struct_m_i_transaction_output" kindref="compound">TransactionOutput</ref><sp/>*<sp/>output)</highlight></codeline>
<codeline lineno="162"><highlight class="normal">{</highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(output<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numOfTransactionOutput++;</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size<sp/>=<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*</highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;outputs)<sp/>*<sp/>self-&gt;numOfTransactionOutput;</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_m_i_transaction_output" kindref="compound">TransactionOutput</ref><sp/>**<sp/>tmp<sp/>=<sp/>realloc(self-&gt;inputs,<sp/>size);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!tmp){</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_m_i_constants_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;outputs<sp/>=<sp/>tmp;</highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;outputs[</highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numOfTransactionOutput<sp/>-<sp/>1]<sp/>=<sp/>output;</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_m_i_constants_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="176"><highlight class="normal">}</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="_m_i_transaction_8h_1a6d56a2cbd0b4d755eb1ea24da1f204d1" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="_m_i_transaction_8c_1a6d56a2cbd0b4d755eb1ea24da1f204d1" kindref="member" tooltip="Calculates the hash for a transaction.">calculateTransactionHash</ref>(<ref refid="struct_m_i_transaction" kindref="compound" tooltip="Structure for Transaction objects.">Transaction</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>uint8_t<sp/>*<sp/>hash)</highlight></codeline>
<codeline lineno="179"><highlight class="normal">{</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>assert(hash<sp/>!=<sp/>NULL);<sp/>The<sp/>hash<sp/>array<sp/>is<sp/>null<sp/>so<sp/>don&apos;t<sp/>assert*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>tmpHashStore[32];</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>*<sp/>data<sp/>=<sp/><ref refid="_m_i_byte_array_8c_1a29dc51ffba948226c028baf425096408" kindref="member" tooltip="Get a pointer to the underlying data starting at self-&amp;gt;offset.">getDataFromByteArray</ref>(<ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)-&gt;bytes);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_crypt_8c_1ab62ec3041775f1d56093fa4096c2ef84" kindref="member" tooltip="SHA-256 cryptographic hash function.">Sha256</ref>(data,<sp/><ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)-&gt;bytes-&gt;<ref refid="struct_m_i_byte_array_1aebb70c2aab3407a9f05334c47131a43b" kindref="member">length</ref>,<sp/>tmpHashStore);</highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_crypt_8c_1ab62ec3041775f1d56093fa4096c2ef84" kindref="member" tooltip="SHA-256 cryptographic hash function.">Sha256</ref>(tmpHashStore,<sp/>32,<sp/>hash);</highlight></codeline>
<codeline lineno="188"><highlight class="normal">}</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight></codeline>
<codeline lineno="190" refid="_m_i_transaction_8h_1ae77b886a61562d010b212219acbeed9c" refkind="member"><highlight class="normal">uint8_t<sp/>*<sp/><ref refid="_m_i_transaction_8c_1ae77b886a61562d010b212219acbeed9c" kindref="member" tooltip="Retrieves or calculates the hash for a transaction. Hashes taken from this function are cached...">getTransactionHash</ref>(<ref refid="struct_m_i_transaction" kindref="compound" tooltip="Structure for Transaction objects.">Transaction</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self-&gt;hash<sp/>==<sp/>NULL){</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_transaction_8c_1a6d56a2cbd0b4d755eb1ea24da1f204d1" kindref="member" tooltip="Calculates the hash for a transaction.">calculateTransactionHash</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>self-&gt;hash);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;hash;</highlight></codeline>
<codeline lineno="199"><highlight class="normal">}</highlight></codeline>
<codeline lineno="200"><highlight class="normal"></highlight></codeline>
<codeline lineno="201" refid="_m_i_transaction_8h_1a399ecdc9998cfe26c0f2a1928572b54b" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="_m_i_transaction_8c_1a399ecdc9998cfe26c0f2a1928572b54b" kindref="member" tooltip="Calculates the length of an Transaction; this is needed to serialise the object.">calculateTransactionLength</ref>(<ref refid="struct_m_i_transaction" kindref="compound" tooltip="Structure for Transaction objects.">Transaction</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="202"><highlight class="normal">{</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>len<sp/>=<sp/>8<sp/>+<sp/><ref refid="_m_i_var_len_int_8c_1a960ae6b1a5365789aec7b7055a36dbd7" kindref="member" tooltip="Returns the variable integer byte size of a 64 bit integer.">getSizeOfVarLenInt</ref>(self-&gt;numOfTransactionInput)</highlight></codeline>
<codeline lineno="206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numOfTransactionInput<sp/>*<sp/>40)</highlight></codeline>
<codeline lineno="207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/><ref refid="_m_i_var_len_int_8c_1a960ae6b1a5365789aec7b7055a36dbd7" kindref="member" tooltip="Returns the variable integer byte size of a 64 bit integer.">getSizeOfVarLenInt</ref>(self-&gt;numOfTransactionOutput)</highlight></codeline>
<codeline lineno="208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numOfTransactionInput<sp/>*<sp/>8);<sp/></highlight><highlight class="comment">/*<sp/>8<sp/>is<sp/>for<sp/>version<sp/>and<sp/>lockTime.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>i;</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numOfTransactionInput;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!self-&gt;inputs[i]-&gt;scriptObject){</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>+=<sp/><ref refid="_m_i_var_len_int_8c_1a960ae6b1a5365789aec7b7055a36dbd7" kindref="member" tooltip="Returns the variable integer byte size of a 64 bit integer.">getSizeOfVarLenInt</ref>(self-&gt;inputs[i]-&gt;scriptObject-&gt;length)</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;inputs[i]-&gt;scriptObject-&gt;length;</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>j;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numOfTransactionOutput;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!self-&gt;outputs[j]-&gt;scriptObject){</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/>+=<sp/><ref refid="_m_i_var_len_int_8c_1a960ae6b1a5365789aec7b7055a36dbd7" kindref="member" tooltip="Returns the variable integer byte size of a 64 bit integer.">getSizeOfVarLenInt</ref>(self-&gt;outputs[j]-&gt;scriptObject-&gt;length)</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>+<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;outputs[j]-&gt;scriptObject-&gt;length;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>len;</highlight></codeline>
<codeline lineno="230"><highlight class="normal">}</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight></codeline>
<codeline lineno="232" refid="_m_i_transaction_8h_1a61c55efd86e87797526fc63273ad61d5" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="_m_i_transaction_8c_1a61c55efd86e87797526fc63273ad61d5" kindref="member" tooltip="Determines if a transaction is a coinbase transaction or not.">isCoinBase</ref>(<ref refid="struct_m_i_transaction" kindref="compound" tooltip="Structure for Transaction objects.">Transaction</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="233"><highlight class="normal">{</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self-&gt;numOfTransactionInput<sp/>==<sp/>1</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>self-&gt;inputs[0]-&gt;prevOutput.index<sp/>==<sp/>0xFFFFFFFF</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/><ref refid="_m_i_byte_array_8c_1aff8e512253db16092e10359b31e732b9" kindref="member" tooltip="Determines if a ByteArray is null.">isNullByteArray</ref>(self-&gt;inputs[0]-&gt;prevOutput.hash)</highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="241"><highlight class="normal">}</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight></codeline>
<codeline lineno="243" refid="_m_i_transaction_8h_1a1abc45d369c2884698692d79091f5b2c" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="_m_i_transaction_8c_1a1abc45d369c2884698692d79091f5b2c" kindref="member" tooltip="Serialises a Transaction to byte data.">serializeTransaction</ref>(<ref refid="struct_m_i_transaction" kindref="compound" tooltip="Structure for Transaction objects.">Transaction</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="244"><highlight class="normal">{</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_m_i_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/>bytes<sp/>=<sp/><ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)-&gt;<ref refid="struct_m_i_message_1a8fb493ee3c32dd3a9fb29bc71c852f86" kindref="member">bytes</ref>;</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bytes)<sp/>{</highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)-&gt;<ref refid="struct_m_i_message_1aeb0776cff292839518da5f5a48884fd9" kindref="member">onErrorReceived</ref>(</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968ac8ae144568e5761507c7d026a2531875" kindref="member">_ERROR_MESSAGE_SERIALISATION_NULL_BYTES</ref>,</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Attempting<sp/>to<sp/>serialise<sp/>a<sp/>Transaction<sp/>with<sp/>no<sp/>bytes&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_m_i_var_len_int" kindref="compound" tooltip="Variable length integer specified in Bitcoin protocol.">VarLenInt</ref><sp/>numTransactionInputs<sp/>=<sp/><ref refid="_m_i_var_len_int_8c_1ab415150158b7af4b63eb360b384b5ec0" kindref="member" tooltip="Returns a variable integer from an unsigned 64 bit integer.">createVarLenIntFromUInt64</ref>(self-&gt;numOfTransactionInput);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_m_i_var_len_int" kindref="compound" tooltip="Variable length integer specified in Bitcoin protocol.">VarLenInt</ref><sp/>numTransactionOutputs<sp/>=<sp/><ref refid="_m_i_var_len_int_8c_1ab415150158b7af4b63eb360b384b5ec0" kindref="member" tooltip="Returns a variable integer from an unsigned 64 bit integer.">createVarLenIntFromUInt64</ref>(self-&gt;numOfTransactionOutput);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>cursor<sp/>=<sp/>4<sp/>+<sp/>numTransactionInputs.<ref refid="struct_m_i_var_len_int_1af922c72fe1d5915971491918ff5f923e" kindref="member">storageSize</ref>;</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes-&gt;<ref refid="struct_m_i_byte_array_1aebb70c2aab3407a9f05334c47131a43b" kindref="member">length</ref><sp/>&lt;<sp/>cursor<sp/>+<sp/>5)<sp/>{</highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)-&gt;<ref refid="struct_m_i_message_1aeb0776cff292839518da5f5a48884fd9" kindref="member">onErrorReceived</ref>(</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968aea18ededd7bee318c95d90cff53fffba" kindref="member">_ERROR_MESSAGE_SERIALISATION_BAD_BYTES</ref>,</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Transaction<sp/>has<sp/>fewer<sp/>bytes<sp/>than<sp/>expected.<sp/>Transaction<sp/>byte-length:<sp/>%i<sp/>&lt;<sp/>required:<sp/>%i\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes-&gt;<ref refid="struct_m_i_byte_array_1aebb70c2aab3407a9f05334c47131a43b" kindref="member">length</ref>,<sp/>cursor<sp/>+<sp/>5);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>All<sp/>error<sp/>checks<sp/>done;<sp/>serialize<sp/>data<sp/>into<sp/>a<sp/>ByteArray*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_byte_array_8c_1aa4d465553a3c7f80c1700316f2410b40" kindref="member" tooltip="Writes a 32 bit integer to a ByteArray as little-endian.">writeInt32AsLittleEndianIntoByteArray</ref>(bytes,<sp/>0,<sp/>self-&gt;version);<sp/></highlight><highlight class="comment">/*Write<sp/>transaction<sp/>version<sp/>information<sp/>first*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_var_len_int_8c_1a332f03b156163565574788bc3cedd522" kindref="member" tooltip="Encodes variable size integer into bytes.">encodeVarLenInt</ref>(bytes,<sp/>4,<sp/>numTransactionInputs);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>i;</highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numOfTransactionInput;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(self-&gt;inputs[i])-&gt;<ref refid="struct_m_i_message_1a8fb493ee3c32dd3a9fb29bc71c852f86" kindref="member">bytes</ref><sp/>=<sp/><ref refid="_m_i_byte_array_8c_1a22681d5a43566996273c64d34d669806" kindref="member" tooltip="References a subsection of a ByteArray.">getByteArraySubsectionReference</ref>(bytes,<sp/>cursor,<sp/>bytes-&gt;<ref refid="struct_m_i_byte_array_1aebb70c2aab3407a9f05334c47131a43b" kindref="member">length</ref><sp/>-<sp/>cursor);</highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(self-&gt;inputs[i])-&gt;<ref refid="struct_m_i_message_1a8fb493ee3c32dd3a9fb29bc71c852f86" kindref="member">bytes</ref>)<sp/>{<sp/></highlight><highlight class="comment">/*Get<sp/>the<sp/>bytes<sp/>of<sp/>the<sp/>transactionInputs<sp/>(All<sp/>messages<sp/>have<sp/>bytes<sp/>and<sp/>a<sp/>transactionInput<sp/>is<sp/>a<sp/>Message)*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)-&gt;<ref refid="struct_m_i_message_1aeb0776cff292839518da5f5a48884fd9" kindref="member">onErrorReceived</ref>(</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968ac44c4a273612af5ceabd09df473706f4" kindref="member">_ERROR_INIT_FAIL</ref>,</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>create<sp/>a<sp/>new<sp/>subreference<sp/>to<sp/>a<sp/>ByteArray<sp/>in<sp/>serializeTransaction<sp/>for<sp/>input<sp/>number<sp/>%u&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>len<sp/>=<sp/><ref refid="_m_i_transaction_input_8c_1a1dc5b6d2e7b70e918572bedd9ee6abf9" kindref="member" tooltip="Serialises a TransactionInput to byte data.">serializeTransactionInput</ref>(self-&gt;inputs[i]);<sp/></highlight><highlight class="comment">/*Serialize<sp/>this<sp/>transaction<sp/>input*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="287"><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!len)<sp/>{<sp/></highlight><highlight class="comment">/*TransactionInput<sp/>serialization<sp/>failed*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)-&gt;<ref refid="struct_m_i_message_1aeb0776cff292839518da5f5a48884fd9" kindref="member">onErrorReceived</ref>(</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968abd324fa69626e40713b7c4e1e6eef9f9" kindref="member">_ERROR_MESSAGE_DESERIALISATION_BAD_BYTES</ref>,</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Transaction<sp/>cannot<sp/>be<sp/>serialised<sp/>because<sp/>of<sp/>an<sp/>error<sp/>with<sp/>the<sp/>input<sp/>number<sp/>%u.&quot;</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/>i);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Release<sp/>ByteArray<sp/>objects<sp/>to<sp/>avoid<sp/>problems<sp/>overwriting<sp/>pointer<sp/>without<sp/>release,<sp/>if<sp/>serialization<sp/>is<sp/>tried<sp/>again.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>j;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>i<sp/>+<sp/>1;<sp/>j++)<sp/>{</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_object_8c_1a71704ab4fbecb7d85276d32649b5349a" kindref="member" tooltip="destructor">destroyObject</ref>(<ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(self-&gt;inputs[j])-&gt;<ref refid="struct_m_i_message_1a8fb493ee3c32dd3a9fb29bc71c852f86" kindref="member">bytes</ref>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(self-&gt;inputs[i])-&gt;<ref refid="struct_m_i_message_1a8fb493ee3c32dd3a9fb29bc71c852f86" kindref="member">bytes</ref>-&gt;<ref refid="struct_m_i_byte_array_1aebb70c2aab3407a9f05334c47131a43b" kindref="member">length</ref><sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor<sp/>+=<sp/>len;</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="303"><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes-&gt;<ref refid="struct_m_i_byte_array_1aebb70c2aab3407a9f05334c47131a43b" kindref="member">length</ref><sp/>&lt;<sp/>cursor<sp/>+<sp/>5)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>room<sp/>for<sp/>output<sp/>number<sp/>and<sp/>lockTime.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)-&gt;<ref refid="struct_m_i_message_1aeb0776cff292839518da5f5a48884fd9" kindref="member">onErrorReceived</ref>(</highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968abd324fa69626e40713b7c4e1e6eef9f9" kindref="member">_ERROR_MESSAGE_DESERIALISATION_BAD_BYTES</ref>,</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Attempting<sp/>to<sp/>serialise<sp/>a<sp/>Transaction<sp/>with<sp/>less<sp/>bytes<sp/>than<sp/>required<sp/>for<sp/>output<sp/>number<sp/>and<sp/>the<sp/>lockTime.<sp/>%i<sp/>&lt;<sp/>%i\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes-&gt;<ref refid="struct_m_i_byte_array_1aebb70c2aab3407a9f05334c47131a43b" kindref="member">length</ref>,<sp/>cursor<sp/>+<sp/>5);</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_var_len_int_8c_1a332f03b156163565574788bc3cedd522" kindref="member" tooltip="Encodes variable size integer into bytes.">encodeVarLenInt</ref>(bytes,<sp/>cursor,<sp/>numTransactionOutputs);</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor<sp/>+=<sp/>numTransactionOutputs.<ref refid="struct_m_i_var_len_int_1af922c72fe1d5915971491918ff5f923e" kindref="member">storageSize</ref>;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>k;</highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>k<sp/>=<sp/>0;<sp/>k<sp/>&lt;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numOfTransactionOutput;<sp/>k++)<sp/>{</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(self-&gt;outputs[k])-&gt;<ref refid="struct_m_i_message_1a8fb493ee3c32dd3a9fb29bc71c852f86" kindref="member">bytes</ref><sp/>=<sp/><ref refid="_m_i_byte_array_8c_1a22681d5a43566996273c64d34d669806" kindref="member" tooltip="References a subsection of a ByteArray.">getByteArraySubsectionReference</ref>(bytes,<sp/>cursor,<sp/>bytes-&gt;<ref refid="struct_m_i_byte_array_1aebb70c2aab3407a9f05334c47131a43b" kindref="member">length</ref><sp/>-<sp/>cursor);</highlight></codeline>
<codeline lineno="318"><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(self-&gt;outputs[k])-&gt;<ref refid="struct_m_i_message_1a8fb493ee3c32dd3a9fb29bc71c852f86" kindref="member">bytes</ref>)<sp/>{<sp/></highlight><highlight class="comment">/*Get<sp/>the<sp/>bytes<sp/>of<sp/>the<sp/>transactionOutputs<sp/>(All<sp/>Messages<sp/>have<sp/>bytes<sp/>and<sp/>a<sp/>transactionInput<sp/>is<sp/>a<sp/>Message)*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)-&gt;<ref refid="struct_m_i_message_1aeb0776cff292839518da5f5a48884fd9" kindref="member">onErrorReceived</ref>(<ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968ac44c4a273612af5ceabd09df473706f4" kindref="member">_ERROR_INIT_FAIL</ref>,</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>create<sp/>a<sp/>new<sp/>subreference<sp/>to<sp/>a<sp/>ByteArray<sp/>in<sp/>serializeTransaction<sp/>for<sp/>input<sp/>number<sp/>%u&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="322"><highlight class="normal"></highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>len<sp/>=<sp/><ref refid="_m_i_transaction_output_8c_1a16b79dfd79f1bec2dce3b0865766b48e" kindref="member" tooltip="Serialises a TransactionOutput to byte data.">serializeTransactionOutput</ref>(self-&gt;inputs[k]);<sp/></highlight><highlight class="comment">/*Serialize<sp/>this<sp/>transaction<sp/>input*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="327"><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!len)<sp/>{<sp/></highlight><highlight class="comment">/*TransactionOutput<sp/>serialization<sp/>failed*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)-&gt;<ref refid="struct_m_i_message_1aeb0776cff292839518da5f5a48884fd9" kindref="member">onErrorReceived</ref>(</highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968abd324fa69626e40713b7c4e1e6eef9f9" kindref="member">_ERROR_MESSAGE_DESERIALISATION_BAD_BYTES</ref>,</highlight></codeline>
<codeline lineno="331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Transaction<sp/>cannot<sp/>be<sp/>serialised<sp/>because<sp/>of<sp/>an<sp/>error<sp/>with<sp/>the<sp/>output<sp/>number<sp/>%u.&quot;</highlight><highlight class="normal">,<sp/>k);</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Release<sp/>ByteArray<sp/>objects<sp/>to<sp/>avoid<sp/>problems<sp/>overwriting<sp/>pointer<sp/>without<sp/>release,<sp/>if<sp/>serialization<sp/>is<sp/>tried<sp/>again.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>l;</highlight></codeline>
<codeline lineno="335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>k<sp/>+<sp/>1;<sp/>l++)<sp/>{</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_object_8c_1a71704ab4fbecb7d85276d32649b5349a" kindref="member" tooltip="destructor">destroyObject</ref>(<ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(self-&gt;inputs[l])-&gt;<ref refid="struct_m_i_message_1a8fb493ee3c32dd3a9fb29bc71c852f86" kindref="member">bytes</ref>);<sp/></highlight><highlight class="comment">/*Clean<sp/>up<sp/>TransactionInput<sp/>that<sp/>have<sp/>just<sp/>been<sp/>set<sp/>earlier<sp/>in<sp/>this<sp/>method*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>l<sp/>=<sp/>0;<sp/>l<sp/>&lt;<sp/>k<sp/>+<sp/>1;<sp/>l++)<sp/>{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_object_8c_1a71704ab4fbecb7d85276d32649b5349a" kindref="member" tooltip="destructor">destroyObject</ref>(<ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(self-&gt;inputs[l])-&gt;<ref refid="struct_m_i_message_1a8fb493ee3c32dd3a9fb29bc71c852f86" kindref="member">bytes</ref>);<sp/></highlight><highlight class="comment">/*Clean<sp/>up<sp/>TransactionOutputs<sp/>that<sp/>are<sp/>being<sp/>set*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(self-&gt;outputs[k])-&gt;<ref refid="struct_m_i_message_1a8fb493ee3c32dd3a9fb29bc71c852f86" kindref="member">bytes</ref>-&gt;<ref refid="struct_m_i_byte_array_1aebb70c2aab3407a9f05334c47131a43b" kindref="member">length</ref><sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor<sp/>+=<sp/>len;</highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes-&gt;<ref refid="struct_m_i_byte_array_1aebb70c2aab3407a9f05334c47131a43b" kindref="member">length</ref><sp/>&lt;<sp/>cursor<sp/>+<sp/>4)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Check<sp/>room<sp/>for<sp/>lockTime.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)-&gt;<ref refid="struct_m_i_message_1aeb0776cff292839518da5f5a48884fd9" kindref="member">onErrorReceived</ref>(</highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968abd324fa69626e40713b7c4e1e6eef9f9" kindref="member">_ERROR_MESSAGE_DESERIALISATION_BAD_BYTES</ref>,</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Attempting<sp/>to<sp/>serialise<sp/>a<sp/>Transaction<sp/>with<sp/>less<sp/>bytes<sp/>than<sp/>required<sp/>for<sp/>the<sp/>lockTime.<sp/>%i<sp/>&lt;<sp/>%i\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bytes-&gt;<ref refid="struct_m_i_byte_array_1aebb70c2aab3407a9f05334c47131a43b" kindref="member">length</ref>,<sp/>cursor<sp/>+<sp/>4);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Release<sp/>ByteArray<sp/>objects<sp/>to<sp/>avoid<sp/>problems<sp/>overwritting<sp/>pointer<sp/>without<sp/>release,<sp/>if<sp/>serialiZation<sp/>is<sp/>tried<sp/>again.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>i;</highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numOfTransactionInput;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_object_8c_1a71704ab4fbecb7d85276d32649b5349a" kindref="member" tooltip="destructor">destroyObject</ref>(<ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(self-&gt;inputs[i])-&gt;<ref refid="struct_m_i_message_1a8fb493ee3c32dd3a9fb29bc71c852f86" kindref="member">bytes</ref>);</highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="359"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numOfTransactionInput;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_object_8c_1a0407d34294cdc667982ffa9bd6f18cc9" kindref="member" tooltip="Decrease the number in the reference counter. (It keeps track of how many objects have been created)...">decrementReferenceCount</ref>(<ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(self-&gt;inputs[i])-&gt;<ref refid="struct_m_i_message_1a8fb493ee3c32dd3a9fb29bc71c852f86" kindref="member">bytes</ref>);</highlight></codeline>
<codeline lineno="361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_byte_array_8c_1aa4d465553a3c7f80c1700316f2410b40" kindref="member" tooltip="Writes a 32 bit integer to a ByteArray as little-endian.">writeInt32AsLittleEndianIntoByteArray</ref>(bytes,<sp/>cursor,<sp/>self-&gt;lockTime);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cursor<sp/>+<sp/>4;</highlight></codeline>
<codeline lineno="366"><highlight class="normal">}</highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight></codeline>
<codeline lineno="368" refid="_m_i_transaction_8h_1a8777f695fbbb547e32b9c0347b6b2026" refkind="member"><highlight class="normal">uint32_t<sp/><ref refid="_m_i_transaction_8c_1a8777f695fbbb547e32b9c0347b6b2026" kindref="member" tooltip="Deserialises a Transaction so that it can be used as an object.">deserializeTransaction</ref>(<ref refid="struct_m_i_transaction" kindref="compound" tooltip="Structure for Transaction objects.">Transaction</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">)</highlight></codeline>
<codeline lineno="369"><highlight class="normal">{</highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="371"><highlight class="normal"></highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_m_i_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/>bytes<sp/>=<sp/><ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)-&gt;<ref refid="struct_m_i_message_1a8fb493ee3c32dd3a9fb29bc71c852f86" kindref="member">bytes</ref>;</highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!bytes)<sp/>{</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)-&gt;<ref refid="struct_m_i_message_1aeb0776cff292839518da5f5a48884fd9" kindref="member">onErrorReceived</ref>(</highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968a92f5f1cd8d49eb6264885735124551cf" kindref="member">_ERROR_MESSAGE_DESERIALISATION_NULL_BYTES</ref>,</highlight></codeline>
<codeline lineno="377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Attempting<sp/>to<sp/>deserialize<sp/>a<sp/>Transaction<sp/>with<sp/>no<sp/>bytes&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="380"><highlight class="normal"></highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes-&gt;<ref refid="struct_m_i_byte_array_1aebb70c2aab3407a9f05334c47131a43b" kindref="member">length</ref><sp/>&lt;<sp/>10)<sp/>{</highlight></codeline>
<codeline lineno="382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)-&gt;<ref refid="struct_m_i_message_1aeb0776cff292839518da5f5a48884fd9" kindref="member">onErrorReceived</ref>(</highlight></codeline>
<codeline lineno="383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968abd324fa69626e40713b7c4e1e6eef9f9" kindref="member">_ERROR_MESSAGE_DESERIALISATION_BAD_BYTES</ref>,</highlight></codeline>
<codeline lineno="384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Attempting<sp/>to<sp/>deserialise<sp/>a<sp/>Transaction<sp/>with<sp/>less<sp/>than<sp/>10<sp/>bytes.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="387"><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;version<sp/>=<sp/><ref refid="_m_i_byte_array_8c_1aab10685017fe16769d5b22c826ada9f8" kindref="member" tooltip="Reads a 32 bit integer from a ByteArray as little-endian.">readInt32AsLittleEndianFromByteArray</ref>(bytes,<sp/>0);</highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_m_i_var_len_int" kindref="compound" tooltip="Variable length integer specified in Bitcoin protocol.">VarLenInt</ref><sp/>inputOutputLen<sp/>=<sp/><ref refid="_m_i_var_len_int_8c_1a0492e373e2d12e41b1764b580f287af9" kindref="member" tooltip="Decodes variable size integer from bytes into a VarLenInt structure.">decodeVarLenInt</ref>(bytes,<sp/>4);</highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputOutputLen.<ref refid="struct_m_i_var_len_int_1a4e630859cc0e2a22bd6acf39a6a8e218" kindref="member">value</ref><sp/>*<sp/>41<sp/>&gt;<sp/>bytes-&gt;<ref refid="struct_m_i_byte_array_1aebb70c2aab3407a9f05334c47131a43b" kindref="member">length</ref><sp/>-<sp/>10)<sp/>{</highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)-&gt;<ref refid="struct_m_i_message_1aeb0776cff292839518da5f5a48884fd9" kindref="member">onErrorReceived</ref>(</highlight></codeline>
<codeline lineno="394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968abd324fa69626e40713b7c4e1e6eef9f9" kindref="member">_ERROR_MESSAGE_DESERIALISATION_BAD_BYTES</ref>,</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Attempting<sp/>to<sp/>deserialize<sp/>a<sp/>Transaction<sp/>with<sp/>a<sp/>bad<sp/>varInt<sp/>for<sp/>the<sp/>number<sp/>of<sp/>inputs.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="398"><highlight class="normal"></highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>cursor<sp/>=<sp/>4<sp/>+<sp/>inputOutputLen.<ref refid="struct_m_i_var_len_int_1af922c72fe1d5915971491918ff5f923e" kindref="member">storageSize</ref>;</highlight></codeline>
<codeline lineno="400"><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numOfTransactionInput<sp/>=<sp/>(uint32_t)<sp/>inputOutputLen.<ref refid="struct_m_i_var_len_int_1a4e630859cc0e2a22bd6acf39a6a8e218" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self-&gt;inputs<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*self-&gt;inputs)<sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numOfTransactionInput);</highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!self-&gt;inputs)<sp/>{</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)-&gt;<ref refid="struct_m_i_message_1aeb0776cff292839518da5f5a48884fd9" kindref="member">onErrorReceived</ref>(</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968ad4cc7a4523a7fd575f8d7ae42d20087f" kindref="member">_ERROR_OUT_OF_MEMORY</ref>,</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>allocate<sp/>%i<sp/>bytes<sp/>of<sp/>memory<sp/>in<sp/>deserializeTransaction<sp/>for<sp/>inputs.\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*self-&gt;inputs)<sp/>*<sp/>self-&gt;numOfTransactionInput);</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>i;</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numOfTransactionInput;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_m_i_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/>data<sp/>=<sp/><ref refid="_m_i_byte_array_8c_1a22681d5a43566996273c64d34d669806" kindref="member" tooltip="References a subsection of a ByteArray.">getByteArraySubsectionReference</ref>(bytes,<sp/>cursor,<sp/>bytes-&gt;<ref refid="struct_m_i_byte_array_1aebb70c2aab3407a9f05334c47131a43b" kindref="member">length</ref><sp/>-<sp/>cursor);</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!data)<sp/>{</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)-&gt;<ref refid="struct_m_i_message_1aeb0776cff292839518da5f5a48884fd9" kindref="member">onErrorReceived</ref>(</highlight></codeline>
<codeline lineno="416"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968ac44c4a273612af5ceabd09df473706f4" kindref="member">_ERROR_INIT_FAIL</ref>,</highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>create<sp/>a<sp/>new<sp/>ByteArray<sp/>in<sp/>deserializeTransaction<sp/>for<sp/>the<sp/>input<sp/>number<sp/>%u.&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight></codeline>
<codeline lineno="421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_m_i_transaction_input" kindref="compound" tooltip="Structure for TransactionInput objects.">TransactionInput</ref><sp/>*<sp/>input<sp/>=<sp/><ref refid="_m_i_transaction_input_8c_1a6ce74856deb61a054db563a0382b0ff2" kindref="member" tooltip="Creates a new TransactionInput object from byte data.">createNewTransactionInputFromData</ref>(data,<sp/><ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)-&gt;onErrorReceived);</highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!input)<sp/>{</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)-&gt;<ref refid="struct_m_i_message_1aeb0776cff292839518da5f5a48884fd9" kindref="member">onErrorReceived</ref>(</highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968ac44c4a273612af5ceabd09df473706f4" kindref="member">_ERROR_INIT_FAIL</ref>,</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>create<sp/>a<sp/>new<sp/>TransactionInput<sp/>in<sp/>deserializeTransaction<sp/>for<sp/>the<sp/>input<sp/>number<sp/>%u.&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_object_8c_1a0407d34294cdc667982ffa9bd6f18cc9" kindref="member" tooltip="Decrease the number in the reference counter. (It keeps track of how many objects have been created)...">decrementReferenceCount</ref>(data);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>len<sp/>=<sp/><ref refid="_m_i_transaction_input_8c_1ad375fb1ac6adc4cfeafc59b89ab811b9" kindref="member" tooltip="Deserialises a TransactionInput so that it can be used as an object.">deserializeTransactionInput</ref>(input);</highlight></codeline>
<codeline lineno="432"><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!len)<sp/>{</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)-&gt;<ref refid="struct_m_i_message_1aeb0776cff292839518da5f5a48884fd9" kindref="member">onErrorReceived</ref>(</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968abd324fa69626e40713b7c4e1e6eef9f9" kindref="member">_ERROR_MESSAGE_DESERIALISATION_BAD_BYTES</ref>,</highlight></codeline>
<codeline lineno="436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Transaction<sp/>cannot<sp/>be<sp/>deserialised<sp/>because<sp/>of<sp/>an<sp/>error<sp/>with<sp/>the<sp/>input<sp/>number<sp/>%u.&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_object_8c_1a0407d34294cdc667982ffa9bd6f18cc9" kindref="member" tooltip="Decrease the number in the reference counter. (It keeps track of how many objects have been created)...">decrementReferenceCount</ref>(data);</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>input<sp/>was<sp/>deserialized<sp/>correctly.<sp/>Now<sp/>adjust<sp/>the<sp/>length<sp/>and<sp/>add<sp/>it<sp/>to<sp/>the<sp/>transaction.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="struct_m_i_byte_array_1aebb70c2aab3407a9f05334c47131a43b" kindref="member">length</ref><sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_object_8c_1a0407d34294cdc667982ffa9bd6f18cc9" kindref="member" tooltip="Decrease the number in the reference counter. (It keeps track of how many objects have been created)...">decrementReferenceCount</ref>(data);</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;inputs[i]<sp/>=<sp/>input;</highlight></codeline>
<codeline lineno="444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor<sp/>+=<sp/>len;<sp/></highlight><highlight class="comment">/*<sp/>Move<sp/>along<sp/>to<sp/>next<sp/>input*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes-&gt;<ref refid="struct_m_i_byte_array_1aebb70c2aab3407a9f05334c47131a43b" kindref="member">length</ref><sp/>&lt;<sp/>cursor<sp/>+<sp/>5)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Needs<sp/>at<sp/>least<sp/>5<sp/>more<sp/>for<sp/>the<sp/>output<sp/>VarLenInt<sp/>and<sp/>the<sp/>lockTime*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)-&gt;<ref refid="struct_m_i_message_1aeb0776cff292839518da5f5a48884fd9" kindref="member">onErrorReceived</ref>(</highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968abd324fa69626e40713b7c4e1e6eef9f9" kindref="member">_ERROR_MESSAGE_DESERIALISATION_BAD_BYTES</ref>,</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Attempting<sp/>to<sp/>deserialise<sp/>a<sp/>Transaction<sp/>with<sp/>not<sp/>enough<sp/>bytes<sp/>for<sp/>the<sp/>outputs<sp/>and<sp/>lockTime.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="453"><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inputOutputLen<sp/>=<sp/><ref refid="_m_i_var_len_int_8c_1a0492e373e2d12e41b1764b580f287af9" kindref="member" tooltip="Decodes variable size integer from bytes into a VarLenInt structure.">decodeVarLenInt</ref>(bytes,<sp/>cursor);</highlight></codeline>
<codeline lineno="455"><highlight class="normal"></highlight></codeline>
<codeline lineno="456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(inputOutputLen.<ref refid="struct_m_i_var_len_int_1a4e630859cc0e2a22bd6acf39a6a8e218" kindref="member">value</ref><sp/>*<sp/>9<sp/>&gt;<sp/>bytes-&gt;<ref refid="struct_m_i_byte_array_1aebb70c2aab3407a9f05334c47131a43b" kindref="member">length</ref><sp/>-<sp/>10)<sp/>{</highlight></codeline>
<codeline lineno="457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)-&gt;<ref refid="struct_m_i_message_1aeb0776cff292839518da5f5a48884fd9" kindref="member">onErrorReceived</ref>(</highlight></codeline>
<codeline lineno="458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968abd324fa69626e40713b7c4e1e6eef9f9" kindref="member">_ERROR_MESSAGE_DESERIALISATION_BAD_BYTES</ref>,</highlight></codeline>
<codeline lineno="459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Attempting<sp/>to<sp/>deserialise<sp/>a<sp/>Transaction<sp/>with<sp/>a<sp/>bad<sp/>varLenInt<sp/>for<sp/>the<sp/>number<sp/>of<sp/>outputs.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor<sp/>+=<sp/>inputOutputLen.<ref refid="struct_m_i_var_len_int_1af922c72fe1d5915971491918ff5f923e" kindref="member">storageSize</ref>;<sp/></highlight><highlight class="comment">/*<sp/>Move<sp/>past<sp/>output<sp/>VarLenInt*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numOfTransactionOutput<sp/>=<sp/>(uint32_t)<sp/>inputOutputLen.<ref refid="struct_m_i_var_len_int_1a4e630859cc0e2a22bd6acf39a6a8e218" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>self-&gt;outputs<sp/>=<sp/>malloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*self-&gt;outputs)<sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numOfTransactionOutput);</highlight></codeline>
<codeline lineno="466"><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!self-&gt;outputs)<sp/>{</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)-&gt;<ref refid="struct_m_i_message_1aeb0776cff292839518da5f5a48884fd9" kindref="member">onErrorReceived</ref>(</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968ad4cc7a4523a7fd575f8d7ae42d20087f" kindref="member">_ERROR_OUT_OF_MEMORY</ref>,</highlight></codeline>
<codeline lineno="470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>allocate<sp/>%i<sp/>bytes<sp/>of<sp/>memory<sp/>in<sp/>deserializeTransaction<sp/>for<sp/>outputs.\n&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*self-&gt;outputs)<sp/>*<sp/>self-&gt;numOfTransactionOutput));</highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numOfTransactionOutput;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="475"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_m_i_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/>data<sp/>=<sp/><ref refid="_m_i_byte_array_8c_1a22681d5a43566996273c64d34d669806" kindref="member" tooltip="References a subsection of a ByteArray.">getByteArraySubsectionReference</ref>(bytes,<sp/>cursor,<sp/>bytes-&gt;<ref refid="struct_m_i_byte_array_1aebb70c2aab3407a9f05334c47131a43b" kindref="member">length</ref><sp/>-<sp/>cursor);</highlight></codeline>
<codeline lineno="476"><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!data)<sp/>{</highlight></codeline>
<codeline lineno="478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)-&gt;<ref refid="struct_m_i_message_1aeb0776cff292839518da5f5a48884fd9" kindref="member">onErrorReceived</ref>(</highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968ac44c4a273612af5ceabd09df473706f4" kindref="member">_ERROR_INIT_FAIL</ref>,</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>create<sp/>a<sp/>new<sp/>ByteArray<sp/>in<sp/>deserializeTransaction<sp/>for<sp/>the<sp/>output<sp/>number<sp/>%u.&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_m_i_transaction_output" kindref="compound">TransactionOutput</ref><sp/>*<sp/>output<sp/>=<sp/><ref refid="_m_i_transaction_output_8c_1ad147138cc70f16d81e3b66a00ae700af" kindref="member" tooltip="Creates a new TransactionOutput object from byte data. Should be serialised for object data...">createNewTransactionOutputFromData</ref>(data,<sp/><ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)-&gt;onErrorReceived);</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!output)<sp/>{</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)-&gt;<ref refid="struct_m_i_message_1aeb0776cff292839518da5f5a48884fd9" kindref="member">onErrorReceived</ref>(</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968ac44c4a273612af5ceabd09df473706f4" kindref="member">_ERROR_INIT_FAIL</ref>,</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Cannot<sp/>create<sp/>a<sp/>new<sp/>TransactionOutput<sp/>in<sp/>deserializeTransaction<sp/>for<sp/>the<sp/>output<sp/>number<sp/>%u.&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_object_8c_1a0407d34294cdc667982ffa9bd6f18cc9" kindref="member" tooltip="Decrease the number in the reference counter. (It keeps track of how many objects have been created)...">decrementReferenceCount</ref>(data);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="493"><highlight class="normal"></highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>len<sp/>=<sp/><ref refid="_m_i_transaction_output_8c_1aec03af57e070260915cbf2491802df55" kindref="member" tooltip="Deserialises a TransactionOutput so that it can be used as an object.">deserializeTransactionOutput</ref>(output);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!len)<sp/>{</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)-&gt;<ref refid="struct_m_i_message_1aeb0776cff292839518da5f5a48884fd9" kindref="member">onErrorReceived</ref>(</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968abd324fa69626e40713b7c4e1e6eef9f9" kindref="member">_ERROR_MESSAGE_DESERIALISATION_BAD_BYTES</ref>,</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Transaction<sp/>cannot<sp/>be<sp/>deserialised<sp/>because<sp/>of<sp/>an<sp/>error<sp/>with<sp/>the<sp/>output<sp/>number<sp/>%u.&quot;</highlight><highlight class="normal">,<sp/>i);</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_object_8c_1a0407d34294cdc667982ffa9bd6f18cc9" kindref="member" tooltip="Decrease the number in the reference counter. (It keeps track of how many objects have been created)...">decrementReferenceCount</ref>(data);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>output<sp/>was<sp/>deserialised<sp/>correctly.<sp/>Now<sp/>adjust<sp/>the<sp/>length<sp/>and<sp/>add<sp/>it<sp/>to<sp/>the<sp/>transaction.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data-&gt;<ref refid="struct_m_i_byte_array_1aebb70c2aab3407a9f05334c47131a43b" kindref="member">length</ref><sp/>=<sp/>len;</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_object_8c_1a0407d34294cdc667982ffa9bd6f18cc9" kindref="member" tooltip="Decrease the number in the reference counter. (It keeps track of how many objects have been created)...">decrementReferenceCount</ref>(data);</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;outputs[i]<sp/>=<sp/>output;</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor<sp/>+=<sp/>len;<sp/></highlight><highlight class="comment">/*<sp/>Move<sp/>along<sp/>to<sp/>next<sp/>output*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(bytes-&gt;<ref refid="struct_m_i_byte_array_1aebb70c2aab3407a9f05334c47131a43b" kindref="member">length</ref><sp/>&lt;<sp/>cursor<sp/>+<sp/>4)<sp/>{<sp/></highlight><highlight class="comment">/*<sp/>Ensure<sp/>4<sp/>bytes<sp/>are<sp/>available<sp/>for<sp/>lockTime*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)-&gt;<ref refid="struct_m_i_message_1aeb0776cff292839518da5f5a48884fd9" kindref="member">onErrorReceived</ref>(</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968abd324fa69626e40713b7c4e1e6eef9f9" kindref="member">_ERROR_MESSAGE_DESERIALISATION_BAD_BYTES</ref>,</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Attempting<sp/>to<sp/>deserialise<sp/>a<sp/>Transaction<sp/>with<sp/>not<sp/>enough<sp/>bytes<sp/>for<sp/>the<sp/>lockTime.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;lockTime<sp/>=<sp/><ref refid="_m_i_byte_array_8c_1aab10685017fe16769d5b22c826ada9f8" kindref="member" tooltip="Reads a 32 bit integer from a ByteArray as little-endian.">readInt32AsLittleEndianFromByteArray</ref>(bytes,<sp/>cursor);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cursor<sp/>+<sp/>4;</highlight></codeline>
<codeline lineno="518"><highlight class="normal">}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520" refid="_m_i_transaction_8h_1a6752846ad122c4320c07ea5cb51637d5" refkind="member"><highlight class="normal"><ref refid="_m_i_constants_8h_1a7e14717182fa5c1cd0fd5502ecaa04e0" kindref="member">TransactionHashStatus</ref><sp/><ref refid="_m_i_transaction_8c_1a66ab860229cbd11f1206df9bb9196728" kindref="member" tooltip="Gets the hash for signing or signature checking for a transaction input. The transaction input needs ...">getTransactionInputHashForVerification</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<sp/>txIn,<sp/><ref refid="struct_m_i_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/>prevOutSubScript,<sp/>uint32_t<sp/>input,</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_constants_8h_1a4fd54932b907311989c5752c6942742a" kindref="member">SignatureType</ref><sp/>signType,<sp/>uint8_t<sp/>*<sp/>hash)</highlight></codeline>
<codeline lineno="522"><highlight class="normal">{</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert<sp/>(txIn<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert<sp/>(prevOutSubScript<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert<sp/>(input<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert<sp/>(signType<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert<sp/>(hash<sp/>!=<sp/>NULL);</highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_m_i_transaction" kindref="compound" tooltip="Structure for Transaction objects.">Transaction</ref><sp/>*<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal"><sp/>=<sp/>txIn;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self-&gt;numOfTransactionInput<sp/>&lt;<sp/>input<sp/>+<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)-&gt;<ref refid="struct_m_i_message_1aeb0776cff292839518da5f5a48884fd9" kindref="member">onErrorReceived</ref>(</highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968a705f025e78042406ea8b25c6e574ed94" kindref="member">_ERROR_TRANSACTION_FEW_INPUTS</ref>,</highlight></codeline>
<codeline lineno="534"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Receiving<sp/>transaction<sp/>hash<sp/>to<sp/>sign<sp/>cannot<sp/>be<sp/>done<sp/>for<sp/>because<sp/>the<sp/>input<sp/>index<sp/>goes<sp/>past<sp/>the<sp/>number<sp/>of<sp/>inputs.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="535"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_m_i_constants_8h_1a7e14717182fa5c1cd0fd5502ecaa04e0ab8cb7847f95d8209bd64c5bd4cdce830" kindref="member">TX_HASH_BAD</ref>;</highlight></codeline>
<codeline lineno="536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="537"><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>last5Bits<sp/>=<sp/>(signType<sp/>&amp;<sp/>0x1f);<sp/></highlight><highlight class="comment">/*<sp/>For<sp/>some<sp/>reason<sp/>this<sp/>is<sp/>what<sp/>the<sp/>C++<sp/>client<sp/>does.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>sizeOfData<sp/>=<sp/>12<sp/>+<sp/>prevOutSubScript-&gt;<ref refid="struct_m_i_byte_array_1aebb70c2aab3407a9f05334c47131a43b" kindref="member">length</ref>;<sp/></highlight><highlight class="comment">/*Version,<sp/>lock<sp/>time<sp/>and<sp/>the<sp/>sign<sp/>type<sp/>make<sp/>up<sp/>12<sp/>bytes.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"></highlight></codeline>
<codeline lineno="541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(signType<sp/>&amp;<sp/><ref refid="_m_i_constants_8h_1a4fd54932b907311989c5752c6942742aa4cbb6f8e9c33007b0dd86139c5444d63" kindref="member">_SIGHASH_ANYONECANPAY</ref>)<sp/>{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeOfData<sp/>+=<sp/>41;<sp/></highlight><highlight class="comment">/*<sp/>Just<sp/>this<sp/>one<sp/>input.<sp/>32<sp/>bytes<sp/>for<sp/>outPointerHash,<sp/>4<sp/>for<sp/>outPointerIndex,<sp/>1<sp/>for<sp/>VarLenInt,<sp/>4<sp/>for<sp/>sequence*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeOfData<sp/>+=<sp/><ref refid="_m_i_var_len_int_8c_1a960ae6b1a5365789aec7b7055a36dbd7" kindref="member" tooltip="Returns the variable integer byte size of a 64 bit integer.">getSizeOfVarLenInt</ref>(self-&gt;numOfTransactionInput)<sp/>+<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numOfTransactionInput<sp/>*<sp/>40;<sp/></highlight><highlight class="comment">/*<sp/>All<sp/>inputs*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="546"><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last5Bits<sp/>==<sp/><ref refid="_m_i_constants_8h_1a4fd54932b907311989c5752c6942742aa4eb90e2ee630ba32437b0cbbe95b9ede" kindref="member">_SIGHASH_NONE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeOfData++;<sp/></highlight><highlight class="comment">/*<sp/>Just<sp/>for<sp/>the<sp/>VarLenInt<sp/>and<sp/>no<sp/>outputs.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((signType<sp/>&amp;<sp/>0x1f)<sp/>==<sp/><ref refid="_m_i_constants_8h_1a4fd54932b907311989c5752c6942742aa032938cf4fbf7498b6f85f5659bc28c5" kindref="member">_SIGHASH_SINGLE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(self-&gt;numOfTransactionOutput<sp/>&lt;<sp/>input<sp/>+<sp/>1)<sp/>{</highlight></codeline>
<codeline lineno="551"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)-&gt;<ref refid="struct_m_i_message_1aeb0776cff292839518da5f5a48884fd9" kindref="member">onErrorReceived</ref>(</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_constants_8h_1a78789cd8e7333545dd73768531261968a83536036db8250da8add01626c09e3c3" kindref="member">_ERROR_TRANSACTION_FEW_OUTPUTS</ref>,</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="stringliteral">&quot;Receiving<sp/>transaction<sp/>hash<sp/>to<sp/>sign<sp/>cannot<sp/>be<sp/>done<sp/>for<sp/>_SIGHASH_SINGLE<sp/>because<sp/>there<sp/>are<sp/>not<sp/>enough<sp/>outputs.&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_m_i_constants_8h_1a7e14717182fa5c1cd0fd5502ecaa04e0ab8cb7847f95d8209bd64c5bd4cdce830" kindref="member">TX_HASH_BAD</ref>;</highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeOfData<sp/>+=<sp/><ref refid="_m_i_var_len_int_8c_1a960ae6b1a5365789aec7b7055a36dbd7" kindref="member" tooltip="Returns the variable integer byte size of a 64 bit integer.">getSizeOfVarLenInt</ref>(input<sp/>+<sp/>1)<sp/>+<sp/>input<sp/>*<sp/>9;<sp/></highlight><highlight class="comment">/*<sp/>For<sp/>outputs<sp/>up<sp/>to<sp/>the<sp/>input<sp/>index*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>size<sp/>for<sp/>the<sp/>output<sp/>at<sp/>the<sp/>input<sp/>index.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>len<sp/>=<sp/><sp/><ref refid="_m_i_byte_array_8c_1a673fc907bf90724f9fbfad124d3ed9e2" kindref="member" tooltip="Gets a ByteArray from another object. Use this to avoid casts.">getByteArray</ref>(self-&gt;outputs[input]-&gt;scriptObject)-&gt;<ref refid="struct_m_i_byte_array_1aebb70c2aab3407a9f05334c47131a43b" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeOfData<sp/>+=<sp/>8<sp/>+<sp/><ref refid="_m_i_var_len_int_8c_1a960ae6b1a5365789aec7b7055a36dbd7" kindref="member" tooltip="Returns the variable integer byte size of a 64 bit integer.">getSizeOfVarLenInt</ref>(len)<sp/>+<sp/>len;</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>All<sp/>outputs.<sp/>Default<sp/>to<sp/>SIGHASH_ALL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeOfData<sp/>+=<sp/><ref refid="_m_i_var_len_int_8c_1a960ae6b1a5365789aec7b7055a36dbd7" kindref="member" tooltip="Returns the variable integer byte size of a 64 bit integer.">getSizeOfVarLenInt</ref>(self-&gt;numOfTransactionOutput);</highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>i;</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numOfTransactionOutput;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>len<sp/>=<sp/><sp/><ref refid="_m_i_byte_array_8c_1a673fc907bf90724f9fbfad124d3ed9e2" kindref="member" tooltip="Gets a ByteArray from another object. Use this to avoid casts.">getByteArray</ref>(self-&gt;outputs[i]-&gt;scriptObject)-&gt;<ref refid="struct_m_i_byte_array_1aebb70c2aab3407a9f05334c47131a43b" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizeOfData<sp/>+=<sp/>8<sp/>+<sp/><ref refid="_m_i_var_len_int_8c_1a960ae6b1a5365789aec7b7055a36dbd7" kindref="member" tooltip="Returns the variable integer byte size of a 64 bit integer.">getSizeOfVarLenInt</ref>(len)<sp/>+<sp/>len;</highlight></codeline>
<codeline lineno="566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="567"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="568"><highlight class="normal"></highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_m_i_byte_array" kindref="compound" tooltip="Structure for ByteArray objects.">ByteArray</ref><sp/>*<sp/>data<sp/>=<sp/><ref refid="_m_i_byte_array_8c_1a2db5c01eeb9fbe1d8350ab99392be437" kindref="member" tooltip="Creates an empty ByteArray object.">createNewByteArrayOfSize</ref>(sizeOfData,<sp/><ref refid="_m_i_message_8c_1a5b1bc10a9354d0ad365fc55123dba947" kindref="member" tooltip="Gets a Message from another object. Use this to avoid casts.">getMessage</ref>(</highlight><highlight class="keyword">self</highlight><highlight class="normal">)-&gt;onErrorReceived);</highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!data){</highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_m_i_constants_8h_1a7e14717182fa5c1cd0fd5502ecaa04e0ae372182e92ec6fd8774695846b3d8845" kindref="member">TX_HASH_FAIL</ref>;</highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="574"><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_byte_array_8c_1aa4d465553a3c7f80c1700316f2410b40" kindref="member" tooltip="Writes a 32 bit integer to a ByteArray as little-endian.">writeInt32AsLittleEndianIntoByteArray</ref>(data,<sp/>0,<sp/>self-&gt;version);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"></highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copy<sp/>input<sp/>data.<sp/>Scripts<sp/>are<sp/>not<sp/>copied<sp/>for<sp/>the<sp/>inputs.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>cursor;</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(signType<sp/>&amp;<sp/>_SIGHASH_ANYONECANPAY)<sp/>{</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_var_len_int_8c_1a332f03b156163565574788bc3cedd522" kindref="member" tooltip="Encodes variable size integer into bytes.">encodeVarLenInt</ref>(data,<sp/>4,<sp/><ref refid="_m_i_var_len_int_8c_1ab415150158b7af4b63eb360b384b5ec0" kindref="member" tooltip="Returns a variable integer from an unsigned 64 bit integer.">createVarLenIntFromUInt64</ref>(1));<sp/></highlight><highlight class="comment">/*<sp/>Only<sp/>the<sp/>input<sp/>the<sp/>signature<sp/>is<sp/>for.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_byte_array_8c_1a949c73acfab0c6c4d83ad8c07d999364" kindref="member" tooltip="Copies another byte array to this byte array.">copyByteArrayToByteArray</ref>(data,<sp/>5,<sp/>self-&gt;inputs[input]-&gt;prevOutput.hash);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_byte_array_8c_1aa4d465553a3c7f80c1700316f2410b40" kindref="member" tooltip="Writes a 32 bit integer to a ByteArray as little-endian.">writeInt32AsLittleEndianIntoByteArray</ref>(data,<sp/>37,<sp/>self-&gt;inputs[input]-&gt;prevOutput.index);</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*Add<sp/>prevOutSubScript*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_byte_array_8c_1a949c73acfab0c6c4d83ad8c07d999364" kindref="member" tooltip="Copies another byte array to this byte array.">copyByteArrayToByteArray</ref>(data,<sp/>41,<sp/>prevOutSubScript);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor<sp/>=<sp/>41<sp/>+<sp/>prevOutSubScript-&gt;<ref refid="struct_m_i_byte_array_1aebb70c2aab3407a9f05334c47131a43b" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_byte_array_8c_1aa4d465553a3c7f80c1700316f2410b40" kindref="member" tooltip="Writes a 32 bit integer to a ByteArray as little-endian.">writeInt32AsLittleEndianIntoByteArray</ref>(data,<sp/>cursor,<sp/>self-&gt;inputs[input]-&gt;sequence);</highlight></codeline>
<codeline lineno="588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="589"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_m_i_var_len_int" kindref="compound" tooltip="Variable length integer specified in Bitcoin protocol.">VarLenInt</ref><sp/>inputNum<sp/>=<sp/><ref refid="_m_i_var_len_int_8c_1ab415150158b7af4b63eb360b384b5ec0" kindref="member" tooltip="Returns a variable integer from an unsigned 64 bit integer.">createVarLenIntFromUInt64</ref>(self-&gt;numOfTransactionInput);</highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_var_len_int_8c_1a332f03b156163565574788bc3cedd522" kindref="member" tooltip="Encodes variable size integer into bytes.">encodeVarLenInt</ref>(data,<sp/>4,<sp/>inputNum);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor<sp/>=<sp/>4<sp/>+<sp/>inputNum.<ref refid="struct_m_i_var_len_int_1af922c72fe1d5915971491918ff5f923e" kindref="member">storageSize</ref>;</highlight></codeline>
<codeline lineno="593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>i;</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numOfTransactionInput;<sp/>i++)<sp/>{</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_byte_array_8c_1a949c73acfab0c6c4d83ad8c07d999364" kindref="member" tooltip="Copies another byte array to this byte array.">copyByteArrayToByteArray</ref>(data,<sp/>cursor,self-&gt;inputs[i]-&gt;prevOutput.hash);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor<sp/>+=<sp/>32;</highlight></codeline>
<codeline lineno="597"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_byte_array_8c_1aa4d465553a3c7f80c1700316f2410b40" kindref="member" tooltip="Writes a 32 bit integer to a ByteArray as little-endian.">writeInt32AsLittleEndianIntoByteArray</ref>(data,<sp/>cursor,<sp/>self-&gt;inputs[i]-&gt;prevOutput.index);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Add<sp/>prevOutSubScript<sp/>if<sp/>the<sp/>input<sp/>is<sp/>for<sp/>the<sp/>signature.*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(i<sp/>==<sp/>input)<sp/>{</highlight></codeline>
<codeline lineno="601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_byte_array_8c_1a949c73acfab0c6c4d83ad8c07d999364" kindref="member" tooltip="Copies another byte array to this byte array.">copyByteArrayToByteArray</ref>(data,<sp/>cursor,<sp/>prevOutSubScript);</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor<sp/>+=<sp/>prevOutSubScript-&gt;<ref refid="struct_m_i_byte_array_1aebb70c2aab3407a9f05334c47131a43b" kindref="member">length</ref>;</highlight></codeline>
<codeline lineno="603"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((signType<sp/>==<sp/><ref refid="_m_i_constants_8h_1a4fd54932b907311989c5752c6942742aa4eb90e2ee630ba32437b0cbbe95b9ede" kindref="member">_SIGHASH_NONE</ref><sp/>||<sp/>signType<sp/>==<sp/><ref refid="_m_i_constants_8h_1a4fd54932b907311989c5752c6942742aa032938cf4fbf7498b6f85f5659bc28c5" kindref="member">_SIGHASH_SINGLE</ref>)</highlight></codeline>
<codeline lineno="605"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>&amp;&amp;<sp/>i<sp/>!=<sp/>input)</highlight></codeline>
<codeline lineno="606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_byte_array_8c_1aa4d465553a3c7f80c1700316f2410b40" kindref="member" tooltip="Writes a 32 bit integer to a ByteArray as little-endian.">writeInt32AsLittleEndianIntoByteArray</ref>(data,<sp/>cursor,<sp/>0);</highlight></codeline>
<codeline lineno="607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SIGHASH_ALL<sp/>or<sp/>input<sp/>index<sp/>for<sp/>signing<sp/>sequence*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_byte_array_8c_1aa4d465553a3c7f80c1700316f2410b40" kindref="member" tooltip="Writes a 32 bit integer to a ByteArray as little-endian.">writeInt32AsLittleEndianIntoByteArray</ref>(data,<sp/>cursor,<sp/>self-&gt;inputs[i]-&gt;sequence);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor<sp/>+=<sp/>4;</highlight></codeline>
<codeline lineno="611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Copy<sp/>output<sp/>data*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last5Bits<sp/>==<sp/><ref refid="_m_i_constants_8h_1a4fd54932b907311989c5752c6942742aa4eb90e2ee630ba32437b0cbbe95b9ede" kindref="member">_SIGHASH_NONE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_m_i_var_len_int" kindref="compound" tooltip="Variable length integer specified in Bitcoin protocol.">VarLenInt</ref><sp/>varInt<sp/>=<sp/><ref refid="_m_i_var_len_int_8c_1ab415150158b7af4b63eb360b384b5ec0" kindref="member" tooltip="Returns a variable integer from an unsigned 64 bit integer.">createVarLenIntFromUInt64</ref>(0);</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_var_len_int_8c_1a332f03b156163565574788bc3cedd522" kindref="member" tooltip="Encodes variable size integer into bytes.">encodeVarLenInt</ref>(data,<sp/>cursor,<sp/>varInt);</highlight></codeline>
<codeline lineno="617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor++;</highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(last5Bits<sp/>==<sp/><ref refid="_m_i_constants_8h_1a4fd54932b907311989c5752c6942742aa032938cf4fbf7498b6f85f5659bc28c5" kindref="member">_SIGHASH_SINGLE</ref>)<sp/>{</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_m_i_var_len_int" kindref="compound" tooltip="Variable length integer specified in Bitcoin protocol.">VarLenInt</ref><sp/>varInt<sp/>=<sp/><ref refid="_m_i_var_len_int_8c_1ab415150158b7af4b63eb360b384b5ec0" kindref="member" tooltip="Returns a variable integer from an unsigned 64 bit integer.">createVarLenIntFromUInt64</ref>(input<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_var_len_int_8c_1a332f03b156163565574788bc3cedd522" kindref="member" tooltip="Encodes variable size integer into bytes.">encodeVarLenInt</ref>(data,<sp/>cursor,<sp/>varInt);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor<sp/>+=<sp/>varInt.<ref refid="struct_m_i_var_len_int_1af922c72fe1d5915971491918ff5f923e" kindref="member">storageSize</ref>;</highlight></codeline>
<codeline lineno="622"><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>j;</highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j&lt;<sp/>input;<sp/>j++){</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_byte_array_8c_1ac10e90995fc8a98db44d71607ef0ede7" kindref="member" tooltip="Writes a 64 bit integer to a ByteArray as little-endian.">writeInt64AsLittleEndianIntoByteArray</ref>(data,<sp/>cursor,0xFFFFFFFFFFFFFFFF<sp/>);<sp/></highlight><highlight class="comment">/*_OUTPUT_VALUE_NUS_ONE<sp/>=<sp/>0xFFFFFFFFFFFFFFFF*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor<sp/>+=<sp/>8;</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_var_len_int_8c_1a332f03b156163565574788bc3cedd522" kindref="member" tooltip="Encodes variable size integer into bytes.">encodeVarLenInt</ref>(data,<sp/>cursor,<sp/><ref refid="_m_i_var_len_int_8c_1ab415150158b7af4b63eb360b384b5ec0" kindref="member" tooltip="Returns a variable integer from an unsigned 64 bit integer.">createVarLenIntFromUInt64</ref>(0));</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor++;</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_byte_array_8c_1ac10e90995fc8a98db44d71607ef0ede7" kindref="member" tooltip="Writes a 64 bit integer to a ByteArray as little-endian.">writeInt64AsLittleEndianIntoByteArray</ref>(data,<sp/>cursor,<sp/>self-&gt;outputs[input]-&gt;value);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor<sp/>+=<sp/>8;</highlight></codeline>
<codeline lineno="632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>varInt<sp/>=<sp/><ref refid="_m_i_var_len_int_8c_1ab415150158b7af4b63eb360b384b5ec0" kindref="member" tooltip="Returns a variable integer from an unsigned 64 bit integer.">createVarLenIntFromUInt64</ref>(<ref refid="_m_i_byte_array_8c_1a673fc907bf90724f9fbfad124d3ed9e2" kindref="member" tooltip="Gets a ByteArray from another object. Use this to avoid casts.">getByteArray</ref>(self-&gt;outputs[input]-&gt;scriptObject)-&gt;<ref refid="struct_m_i_byte_array_1aebb70c2aab3407a9f05334c47131a43b" kindref="member">length</ref>);</highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_var_len_int_8c_1a332f03b156163565574788bc3cedd522" kindref="member" tooltip="Encodes variable size integer into bytes.">encodeVarLenInt</ref>(data,<sp/>cursor,<sp/>varInt);</highlight></codeline>
<codeline lineno="634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor<sp/>+=<sp/>varInt.<ref refid="struct_m_i_var_len_int_1af922c72fe1d5915971491918ff5f923e" kindref="member">storageSize</ref>;</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_byte_array_8c_1a949c73acfab0c6c4d83ad8c07d999364" kindref="member" tooltip="Copies another byte array to this byte array.">copyByteArrayToByteArray</ref>(data,<sp/>cursor,<sp/><ref refid="_m_i_byte_array_8c_1a673fc907bf90724f9fbfad124d3ed9e2" kindref="member" tooltip="Gets a ByteArray from another object. Use this to avoid casts.">getByteArray</ref>(self-&gt;outputs[input]-&gt;scriptObject));</highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor<sp/>+=<sp/>varInt.<ref refid="struct_m_i_var_len_int_1a4e630859cc0e2a22bd6acf39a6a8e218" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/>{<sp/></highlight><highlight class="comment">/*<sp/>SIGHASH_ALL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="struct_m_i_var_len_int" kindref="compound" tooltip="Variable length integer specified in Bitcoin protocol.">VarLenInt</ref><sp/>varInt<sp/>=<sp/><ref refid="_m_i_var_len_int_8c_1ab415150158b7af4b63eb360b384b5ec0" kindref="member" tooltip="Returns a variable integer from an unsigned 64 bit integer.">createVarLenIntFromUInt64</ref>(self-&gt;numOfTransactionOutput);</highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_var_len_int_8c_1a332f03b156163565574788bc3cedd522" kindref="member" tooltip="Encodes variable size integer into bytes.">encodeVarLenInt</ref>(data,<sp/>cursor,<sp/>varInt);</highlight></codeline>
<codeline lineno="641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor<sp/>+=<sp/>varInt.<ref refid="struct_m_i_var_len_int_1af922c72fe1d5915971491918ff5f923e" kindref="member">storageSize</ref>;</highlight></codeline>
<codeline lineno="642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint32_t<sp/>x;</highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>x<sp/>=<sp/>0;<sp/>x<sp/>&lt;<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">-&gt;numOfTransactionOutput;<sp/>x++)<sp/>{</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_byte_array_8c_1ac10e90995fc8a98db44d71607ef0ede7" kindref="member" tooltip="Writes a 64 bit integer to a ByteArray as little-endian.">writeInt64AsLittleEndianIntoByteArray</ref>(data,<sp/>cursor,<sp/>self-&gt;outputs[x]-&gt;value);</highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor<sp/>+=<sp/>8;</highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>varInt<sp/>=<sp/><ref refid="_m_i_var_len_int_8c_1ab415150158b7af4b63eb360b384b5ec0" kindref="member" tooltip="Returns a variable integer from an unsigned 64 bit integer.">createVarLenIntFromUInt64</ref>(<ref refid="_m_i_byte_array_8c_1a673fc907bf90724f9fbfad124d3ed9e2" kindref="member" tooltip="Gets a ByteArray from another object. Use this to avoid casts.">getByteArray</ref>(self-&gt;outputs[x]-&gt;scriptObject)-&gt;<ref refid="struct_m_i_byte_array_1aebb70c2aab3407a9f05334c47131a43b" kindref="member">length</ref>);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_var_len_int_8c_1a332f03b156163565574788bc3cedd522" kindref="member" tooltip="Encodes variable size integer into bytes.">encodeVarLenInt</ref>(data,<sp/>cursor,<sp/>varInt);</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor<sp/>+=<sp/>varInt.<ref refid="struct_m_i_var_len_int_1af922c72fe1d5915971491918ff5f923e" kindref="member">storageSize</ref>;</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_byte_array_8c_1a949c73acfab0c6c4d83ad8c07d999364" kindref="member" tooltip="Copies another byte array to this byte array.">copyByteArrayToByteArray</ref>(data,<sp/>cursor,<sp/><ref refid="_m_i_byte_array_8c_1a673fc907bf90724f9fbfad124d3ed9e2" kindref="member" tooltip="Gets a ByteArray from another object. Use this to avoid casts.">getByteArray</ref>(self-&gt;outputs[x]-&gt;scriptObject));</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cursor<sp/>+=<sp/>varInt.<ref refid="struct_m_i_var_len_int_1a4e630859cc0e2a22bd6acf39a6a8e218" kindref="member">value</ref>;</highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="652"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Set<sp/>lockTime*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_byte_array_8c_1aa4d465553a3c7f80c1700316f2410b40" kindref="member" tooltip="Writes a 32 bit integer to a ByteArray as little-endian.">writeInt32AsLittleEndianIntoByteArray</ref>(data,<sp/>cursor,<sp/>self-&gt;lockTime);</highlight></codeline>
<codeline lineno="655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_byte_array_8c_1aa4d465553a3c7f80c1700316f2410b40" kindref="member" tooltip="Writes a 32 bit integer to a ByteArray as little-endian.">writeInt32AsLittleEndianIntoByteArray</ref>(data,<sp/>cursor<sp/>+<sp/>4,<sp/>signType);</highlight></codeline>
<codeline lineno="656"><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(sizeOfData<sp/>==<sp/>cursor<sp/>+<sp/>8);<sp/></highlight><highlight class="comment">/*<sp/>Must<sp/>always<sp/>be<sp/>like<sp/>this*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uint8_t<sp/>firstHash[32];</highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_crypt_8c_1ab62ec3041775f1d56093fa4096c2ef84" kindref="member" tooltip="SHA-256 cryptographic hash function.">Sha256</ref>(<ref refid="_m_i_byte_array_8c_1a29dc51ffba948226c028baf425096408" kindref="member" tooltip="Get a pointer to the underlying data starting at self-&amp;gt;offset.">getDataFromByteArray</ref>(data),<sp/>sizeOfData,<sp/>firstHash);</highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="_m_i_crypt_8c_1ab62ec3041775f1d56093fa4096c2ef84" kindref="member" tooltip="SHA-256 cryptographic hash function.">Sha256</ref>(firstHash,<sp/>32,<sp/>hash);</highlight></codeline>
<codeline lineno="662"><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="_m_i_constants_8h_1a7e14717182fa5c1cd0fd5502ecaa04e0a9f46366755423a053481edc37bd853d0" kindref="member">TX_HASH_GOOD</ref>;</highlight></codeline>
<codeline lineno="664"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/home/apopoola/workspace/Bitcoin/trunk/src/Object/Message/Transaction.c"/>
  </compounddef>
</doxygen>
