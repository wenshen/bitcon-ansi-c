<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.7.4">
  <compounddef id="struct_block" kind="struct" prot="public">
    <compoundname>Block</compoundname>
    <includes refid="_block_8h" local="no">Block.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="struct_block_1a8987f797adf70c3e174fd64cc68bc933" prot="public" static="no" mutable="no">
        <type><ref refid="struct_message" kindref="compound">Message</ref></type>
        <definition>Message base</definition>
        <argsstring></argsstring>
        <name>base</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="struct_message" kindref="compound">Message</ref> base structure </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/Block.h" line="27" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/Block.h" bodystart="27" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_block_1a7ff9da008bf055da1f1ba994c562057d" prot="public" static="no" mutable="no">
        <type>uint8_t</type>
        <definition>uint8_t hash[32]</definition>
        <argsstring>[32]</argsstring>
        <name>hash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The hash for this block. NULL if it needs to be calculated or set. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/Block.h" line="28" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/Block.h" bodystart="28" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_block_1acd99bb05ca015e7d74448acb1deba7ca" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t version</definition>
        <argsstring></argsstring>
        <name>version</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>block version </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/Block.h" line="29" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/Block.h" bodystart="29" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_block_1ac5cb79d8f66809a5f75592e22db9be2c" prot="public" static="no" mutable="no">
        <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
        <definition>ByteArray* previousBlockHash</definition>
        <argsstring></argsstring>
        <name>previousBlockHash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The previous block hash. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/Block.h" line="30" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/Block.h" bodystart="30" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_block_1a51d24d9b04212dc52192636948a05a4c" prot="public" static="no" mutable="no">
        <type><ref refid="struct_byte_array" kindref="compound">ByteArray</ref> *</type>
        <definition>ByteArray* merkleTreeRootHash</definition>
        <argsstring></argsstring>
        <name>merkleTreeRootHash</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The merkle tree root hash. To limit the amount of data transferred when synchronizing </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/Block.h" line="31" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/Block.h" bodystart="31" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_block_1ae73654f333e4363463ad8c594eca1905" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t time</definition>
        <argsstring></argsstring>
        <name>time</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Timestamp for the block. The network uses 32 bits. The protocol can be future proofed by detecting overflows when going through the blocks. So if a block&apos;s time overflows such that the time is less than the median of the last 10 blocks, the block can be seen by adding the first 32 bits of the network time and finally the timestamp can be tested against the network time. The overflow problem can therefore be fixed by a workaround but it is a shame Satoshi did not use 64 bits. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/Block.h" line="32" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/Block.h" bodystart="32" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_block_1a695e5800ad1fd403c0e72d918eaec97c" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t target</definition>
        <argsstring></argsstring>
        <name>target</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The compact target representation. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/Block.h" line="33" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/Block.h" bodystart="33" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_block_1aa2f9785a9d9116cc4592db06375cb887" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t nonce</definition>
        <argsstring></argsstring>
        <name>nonce</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>A 32-bit (4-byte) field whose value is set so that the hash of the block will contain a run of zeros in generating blocks </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/Block.h" line="34" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/Block.h" bodystart="34" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_block_1ac9749ca92207f8d50ecc2b0f904e2424" prot="public" static="no" mutable="no">
        <type>uint32_t</type>
        <definition>uint32_t numOfTransactions</definition>
        <argsstring></argsstring>
        <name>numOfTransactions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Number of transactions in the block. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/Block.h" line="35" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/Block.h" bodystart="35" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="struct_block_1acf585c1809511c4f5b5366bb2bc2e855" prot="public" static="no" mutable="no">
        <type><ref refid="struct_transaction" kindref="compound">Transaction</ref> **</type>
        <definition>Transaction** transactions</definition>
        <argsstring></argsstring>
        <name>transactions</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>The transactions included in this block. NULL if only the header has been received. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/Block.h" line="36" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/Block.h" bodystart="36" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Base class. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="212">
        <label>Block</label>
        <link refid="struct_block"/>
        <childnode refid="213" relation="usage">
          <edgelabel>transactions</edgelabel>
        </childnode>
        <childnode refid="215" relation="usage">
          <edgelabel>base</edgelabel>
        </childnode>
        <childnode refid="217" relation="usage">
          <edgelabel>merkleTreeRootHash</edgelabel>
          <edgelabel>previousBlockHash</edgelabel>
        </childnode>
      </node>
      <node id="218">
        <label>SharedData</label>
        <link refid="struct_shared_data"/>
      </node>
      <node id="215">
        <label>Message</label>
        <link refid="struct_message"/>
        <childnode refid="216" relation="usage">
          <edgelabel>base</edgelabel>
        </childnode>
        <childnode refid="217" relation="usage">
          <edgelabel>bytes</edgelabel>
        </childnode>
      </node>
      <node id="216">
        <label>Object</label>
        <link refid="struct_object"/>
      </node>
      <node id="214">
        <label>TransactionOutput</label>
        <link refid="struct_transaction_output"/>
        <childnode refid="215" relation="usage">
          <edgelabel>base</edgelabel>
        </childnode>
        <childnode refid="217" relation="usage">
          <edgelabel>scriptObject</edgelabel>
        </childnode>
      </node>
      <node id="213">
        <label>Transaction</label>
        <link refid="struct_transaction"/>
        <childnode refid="214" relation="usage">
          <edgelabel>outputs</edgelabel>
        </childnode>
        <childnode refid="219" relation="usage">
          <edgelabel>inputs</edgelabel>
        </childnode>
        <childnode refid="215" relation="usage">
          <edgelabel>base</edgelabel>
        </childnode>
      </node>
      <node id="217">
        <label>ByteArray</label>
        <link refid="struct_byte_array"/>
        <childnode refid="218" relation="usage">
          <edgelabel>sharedData</edgelabel>
        </childnode>
        <childnode refid="216" relation="usage">
          <edgelabel>base</edgelabel>
        </childnode>
      </node>
      <node id="220">
        <label>PreviousOutput</label>
        <link refid="struct_previous_output"/>
        <childnode refid="217" relation="usage">
          <edgelabel>hash</edgelabel>
        </childnode>
      </node>
      <node id="219">
        <label>TransactionInput</label>
        <link refid="struct_transaction_input"/>
        <childnode refid="220" relation="usage">
          <edgelabel>prevOutput</edgelabel>
        </childnode>
        <childnode refid="215" relation="usage">
          <edgelabel>base</edgelabel>
        </childnode>
        <childnode refid="217" relation="usage">
          <edgelabel>scriptObject</edgelabel>
        </childnode>
      </node>
    </collaborationgraph>
    <location file="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/Block.h" line="26" bodyfile="/home/apopoola/workspace/MIBitcoin/trunk/src/Object/Message/Block.h" bodystart="26" bodyend="37"/>
    <listofallmembers>
      <member refid="struct_block_1a8987f797adf70c3e174fd64cc68bc933" prot="public" virt="non-virtual"><scope>Block</scope><name>base</name></member>
      <member refid="struct_block_1a7ff9da008bf055da1f1ba994c562057d" prot="public" virt="non-virtual"><scope>Block</scope><name>hash</name></member>
      <member refid="struct_block_1a51d24d9b04212dc52192636948a05a4c" prot="public" virt="non-virtual"><scope>Block</scope><name>merkleTreeRootHash</name></member>
      <member refid="struct_block_1aa2f9785a9d9116cc4592db06375cb887" prot="public" virt="non-virtual"><scope>Block</scope><name>nonce</name></member>
      <member refid="struct_block_1ac9749ca92207f8d50ecc2b0f904e2424" prot="public" virt="non-virtual"><scope>Block</scope><name>numOfTransactions</name></member>
      <member refid="struct_block_1ac5cb79d8f66809a5f75592e22db9be2c" prot="public" virt="non-virtual"><scope>Block</scope><name>previousBlockHash</name></member>
      <member refid="struct_block_1a695e5800ad1fd403c0e72d918eaec97c" prot="public" virt="non-virtual"><scope>Block</scope><name>target</name></member>
      <member refid="struct_block_1ae73654f333e4363463ad8c594eca1905" prot="public" virt="non-virtual"><scope>Block</scope><name>time</name></member>
      <member refid="struct_block_1acf585c1809511c4f5b5366bb2bc2e855" prot="public" virt="non-virtual"><scope>Block</scope><name>transactions</name></member>
      <member refid="struct_block_1acd99bb05ca015e7d74448acb1deba7ca" prot="public" virt="non-virtual"><scope>Block</scope><name>version</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
